import{_ as s,c as a,o as n,R as p}from"./chunks/framework.e5b95865.js";const h=JSON.parse('{"title":"容器元素","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container.md","lastUpdated":1682323039000}'),l={name:"guide/container.md"},o=p(`<h1 id="容器元素" tabindex="-1">容器元素</h1><h2 id="svg。容器" tabindex="-1">.SVG。容器</h2><p>该类是可以包含其他元素的所有元素的基包装器。SVG.Container</p><p>继承堆栈为：&gt; 。SVG.Base &gt; SVG.EventTarget &gt; SVG.Dom &gt; SVG.ElementSVG.Container</p><h1 id="svg-svg" tabindex="-1">SVG.Svg</h1><p>SVG.js 初始化程序主函数在给定元素中创建一个根 svg 节点，并返回 的实例。SVG.Svg</p><h2 id="svg" tabindex="-1">SVG（）</h2><p>returns SVG.Svg SVG.容器which inherits from</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> draw </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SVG</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">addTo</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;#drawing&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> draw </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SVG</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">addTo</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;#drawing&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>注意：第一次被调用，将创建第二个不可见的。这是我们的解析器，如常见问题解答中所述。SVG() <code>&lt;svg&gt;</code></p><p>SVG 文档也可以在另一个 SVG 文档中创建。然后，它被称为嵌套的SVG文档：</p><h2 id="嵌套" tabindex="-1">嵌套（）</h2><p>constructor on .SVG。容器 SVG.Svg SVG.容器returnswhich inherits from</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> nested </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> draw.</span><span style="color:#B392F0;">nested</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> rect </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> nested.</span><span style="color:#B392F0;">rect</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> nested </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> draw.</span><span style="color:#6F42C1;">nested</span><span style="color:#24292E;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> rect </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> nested.</span><span style="color:#6F42C1;">rect</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">200</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">200</span><span style="color:#24292E;">)</span></span></code></pre></div><h1 id="svg。g" tabindex="-1">.SVG。G</h1><p>如果要将一组元素转换为一组元素，则对元素进行分组非常有用。组内的所有元素都保持其相对于其所属组的位置。</p><p>注意：组没有自己的几何图形，它是从其内容继承而来的。因此，组不侦听 、 和属性。如果这是您要查找的内容，请改用 svg。xywidthheightnested()</p><h2 id="组" tabindex="-1">组（）</h2><p>constructor on .SVG。容器 SVG.G SVG.容器returnswhich inherits from</p><p>组具有与根 SVG 文档相同的所有元素方法：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> group </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> draw.</span><span style="color:#B392F0;">group</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">group.</span><span style="color:#B392F0;">path</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;M10,20L30,40&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> group </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> draw.</span><span style="color:#6F42C1;">group</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">group.</span><span style="color:#6F42C1;">path</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;M10,20L30,40&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>SVG 文档中的现有元素也可以添加到组中：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">group.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(rect)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">group.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(rect)</span></span></code></pre></div><h1 id="svg。象征" tabindex="-1">.SVG。象征</h1><p>constructor on .SVG。容器 SVG。符号 SVG。容器returnswhich inherits from</p><p>与元素不同，元素是容器元素。符号和组之间的唯一区别是不呈现符号。因此，元素与元素组合是理想的：groupsymbolsymboluse</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> symbol </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> draw.</span><span style="color:#B392F0;">symbol</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">symbol.</span><span style="color:#B392F0;">rect</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;#f09&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> use  </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> draw.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(symbol).</span><span style="color:#B392F0;">move</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> symbol </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> draw.</span><span style="color:#6F42C1;">symbol</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">symbol.</span><span style="color:#6F42C1;">rect</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;#f09&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> use  </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> draw.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(symbol).</span><span style="color:#6F42C1;">move</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">200</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">200</span><span style="color:#24292E;">)</span></span></code></pre></div><h1 id="svg。定义" tabindex="-1">.SVG。定义</h1><p>该元素是引用元素的容器。节点的后代不会直接呈现。节点位于主文档中，可以使用该方法进行访问。<code>&lt;defs&gt;&lt;defs&gt;&lt;defs&gt;&lt;svg&gt;defs()</code></p><h2 id="defs" tabindex="-1">defs（）</h2><p>constructor on .SVG。容器 SVG。Defs SVG.容器<code>returns which inherits from</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> defs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> draw.</span><span style="color:#B392F0;">defs</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> defs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> draw.</span><span style="color:#6F42C1;">defs</span><span style="color:#24292E;">()</span></span></code></pre></div><p>defs 也可以通过该方法用于任何其他元素：<code>root()</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> defs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> rect.</span><span style="color:#B392F0;">root</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">defs</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> defs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> rect.</span><span style="color:#6F42C1;">root</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">defs</span><span style="color:#24292E;">()</span></span></code></pre></div><p>defs 节点的工作方式与组完全相同。</p><h1 id="svg。一个" tabindex="-1">.SVG。一个</h1><p>创建将在所有子元素上激活的超链接。</p><h2 id="链接" tabindex="-1">链接（）</h2><p>constructor on .SVG。容器 SVG。一个SVG。容器<code>returns which inherits from</code></p><p>超链接或标记创建一个容器，用于在所有子项上启用链接：<code>&lt;a&gt;</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> link </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> draw.</span><span style="color:#B392F0;">link</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;http://svgdotjs.github.io/&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> rect </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> link.</span><span style="color:#B392F0;">rect</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> link </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> draw.</span><span style="color:#6F42C1;">link</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;http://svgdotjs.github.io/&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> rect </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> link.</span><span style="color:#6F42C1;">rect</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">)</span></span></code></pre></div><p>可以使用以下方法更新链接 URL：<code>to()</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">link.</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;http://apple.com&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">link.</span><span style="color:#6F42C1;">to</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;http://apple.com&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>此外，link 元素具有创建属性的方法：<code>target()target</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">link.</span><span style="color:#B392F0;">target</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;_blank&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">link.</span><span style="color:#6F42C1;">target</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;_blank&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>元素也可以与该方法相反的方式链接：<code>linkTo()</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">rect.</span><span style="color:#B392F0;">linkTo</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;http://svgdotjs.github.io/&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">rect.</span><span style="color:#6F42C1;">linkTo</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;http://svgdotjs.github.io/&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>或者，可以传递一个块而不是 URL，以获取链接元素上的更多选项：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">rect.</span><span style="color:#B392F0;">linkTo</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">link</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  link.</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;http://svgdotjs.github.io/&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">target</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;_blank&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">rect.</span><span style="color:#6F42C1;">linkTo</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">link</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  link.</span><span style="color:#6F42C1;">to</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;http://svgdotjs.github.io/&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">target</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;_blank&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div>`,49),e=[o];function t(c,r,y,E,i,d){return n(),a("div",null,e)}const F=s(l,[["render",t]]);export{h as __pageData,F as default};
