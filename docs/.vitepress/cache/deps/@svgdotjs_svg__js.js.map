{
  "version": 3,
  "sources": ["../../../../node_modules/@svgdotjs/svg.js/src/utils/methods.js", "../../../../node_modules/@svgdotjs/svg.js/src/utils/utils.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/core/namespaces.js", "../../../../node_modules/@svgdotjs/svg.js/src/utils/window.js", "../../../../node_modules/@svgdotjs/svg.js/src/types/Base.js", "../../../../node_modules/@svgdotjs/svg.js/src/utils/adopter.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/optional/arrange.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/core/regex.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/optional/class.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/optional/css.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/optional/data.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/optional/memory.js", "../../../../node_modules/@svgdotjs/svg.js/src/types/Color.js", "../../../../node_modules/@svgdotjs/svg.js/src/types/Point.js", "../../../../node_modules/@svgdotjs/svg.js/src/types/Matrix.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/core/parser.js", "../../../../node_modules/@svgdotjs/svg.js/src/types/Box.js", "../../../../node_modules/@svgdotjs/svg.js/src/types/List.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/core/selector.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/core/event.js", "../../../../node_modules/@svgdotjs/svg.js/src/types/EventTarget.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/core/defaults.js", "../../../../node_modules/@svgdotjs/svg.js/src/types/SVGArray.js", "../../../../node_modules/@svgdotjs/svg.js/src/types/SVGNumber.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/core/attr.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Dom.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Element.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/optional/sugar.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/optional/transform.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Container.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Defs.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Shape.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/core/circled.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Ellipse.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Fragment.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/core/gradiented.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Gradient.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Pattern.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Image.js", "../../../../node_modules/@svgdotjs/svg.js/src/types/PointArray.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/core/pointed.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Line.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Marker.js", "../../../../node_modules/@svgdotjs/svg.js/src/animation/Controller.js", "../../../../node_modules/@svgdotjs/svg.js/src/utils/pathParser.js", "../../../../node_modules/@svgdotjs/svg.js/src/types/PathArray.js", "../../../../node_modules/@svgdotjs/svg.js/src/animation/Morphable.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Path.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/core/poly.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Polygon.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Polyline.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Rect.js", "../../../../node_modules/@svgdotjs/svg.js/src/animation/Queue.js", "../../../../node_modules/@svgdotjs/svg.js/src/animation/Animator.js", "../../../../node_modules/@svgdotjs/svg.js/src/animation/Timeline.js", "../../../../node_modules/@svgdotjs/svg.js/src/animation/Runner.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Svg.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Symbol.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/core/textable.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Text.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Tspan.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Circle.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/ClipPath.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/ForeignObject.js", "../../../../node_modules/@svgdotjs/svg.js/src/modules/core/containerGeometry.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/G.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/A.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Mask.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Stop.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Style.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/TextPath.js", "../../../../node_modules/@svgdotjs/svg.js/src/elements/Use.js", "../../../../node_modules/@svgdotjs/svg.js/src/main.js"],
  "sourcesContent": ["const methods = {}\r\nconst names = []\r\n\r\nexport function registerMethods (name, m) {\r\n  if (Array.isArray(name)) {\r\n    for (const _name of name) {\r\n      registerMethods(_name, m)\r\n    }\r\n    return\r\n  }\r\n\r\n  if (typeof name === 'object') {\r\n    for (const _name in name) {\r\n      registerMethods(_name, name[_name])\r\n    }\r\n    return\r\n  }\r\n\r\n  addMethodNames(Object.getOwnPropertyNames(m))\r\n  methods[name] = Object.assign(methods[name] || {}, m)\r\n}\r\n\r\nexport function getMethodsFor (name) {\r\n  return methods[name] || {}\r\n}\r\n\r\nexport function getMethodNames () {\r\n  return [ ...new Set(names) ]\r\n}\r\n\r\nexport function addMethodNames (_names) {\r\n  names.push(..._names)\r\n}\r\n", "// Map function\r\nexport function map (array, block) {\r\n  let i\r\n  const il = array.length\r\n  const result = []\r\n\r\n  for (i = 0; i < il; i++) {\r\n    result.push(block(array[i]))\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Filter function\r\nexport function filter (array, block) {\r\n  let i\r\n  const il = array.length\r\n  const result = []\r\n\r\n  for (i = 0; i < il; i++) {\r\n    if (block(array[i])) {\r\n      result.push(array[i])\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Degrees to radians\r\nexport function radians (d) {\r\n  return d % 360 * Math.PI / 180\r\n}\r\n\r\n// Radians to degrees\r\nexport function degrees (r) {\r\n  return r * 180 / Math.PI % 360\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nexport function camelCase (s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function (m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Convert camel cased string to dash separated\r\nexport function unCamelCase (s) {\r\n  return s.replace(/([A-Z])/g, function (m, g) {\r\n    return '-' + g.toLowerCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nexport function capitalize (s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nexport function proportionalSize (element, width, height, box) {\r\n  if (width == null || height == null) {\r\n    box = box || element.bbox()\r\n\r\n    if (width == null) {\r\n      width = box.width / box.height * height\r\n    } else if (height == null) {\r\n      height = box.height / box.width * width\r\n    }\r\n  }\r\n\r\n  return {\r\n    width: width,\r\n    height: height\r\n  }\r\n}\r\n\r\n/**\r\n * This function adds support for string origins.\r\n * It searches for an origin in o.origin o.ox and o.originX.\r\n * This way, origin: {x: 'center', y: 50} can be passed as well as ox: 'center', oy: 50\r\n**/\r\nexport function getOrigin (o, element) {\r\n  const origin = o.origin\r\n  // First check if origin is in ox or originX\r\n  let ox = o.ox != null\n    ? o.ox\r\n    : o.originX != null\n      ? o.originX\r\n      : 'center'\r\n  let oy = o.oy != null\n    ? o.oy\r\n    : o.originY != null\n      ? o.originY\r\n      : 'center'\r\n\r\n  // Then check if origin was used and overwrite in that case\r\n  if (origin != null) {\r\n    [ ox, oy ] = Array.isArray(origin)\n      ? origin\r\n      : typeof origin === 'object'\n        ? [ origin.x, origin.y ]\r\n        : [ origin, origin ]\r\n  }\r\n\r\n  // Make sure to only call bbox when actually needed\r\n  const condX = typeof ox === 'string'\r\n  const condY = typeof oy === 'string'\r\n  if (condX || condY) {\r\n    const { height, width, x, y } = element.bbox()\r\n\r\n    // And only overwrite if string was passed for this specific axis\r\n    if (condX) {\r\n      ox = ox.includes('left')\n        ? x\r\n        : ox.includes('right')\n          ? x + width\r\n          : x + width / 2\r\n    }\r\n\r\n    if (condY) {\r\n      oy = oy.includes('top')\n        ? y\r\n        : oy.includes('bottom')\n          ? y + height\r\n          : y + height / 2\r\n    }\r\n  }\r\n\r\n  // Return the origin as it is if it wasn't a string\r\n  return [ ox, oy ]\r\n}\r\n", "// Default namespaces\nexport const svg = 'http://www.w3.org/2000/svg'\nexport const html = 'http://www.w3.org/1999/xhtml'\nexport const xmlns = 'http://www.w3.org/2000/xmlns/'\nexport const xlink = 'http://www.w3.org/1999/xlink'\nexport const svgjs = 'http://svgjs.dev/svgjs'\n", "export const globals = {\r\n  window: typeof window === 'undefined' ? null : window,\r\n  document: typeof document === 'undefined' ? null : document\r\n}\r\n\r\nexport function registerWindow (win = null, doc = null) {\r\n  globals.window = win\r\n  globals.document = doc\r\n}\r\n\r\nconst save = {}\r\n\r\nexport function saveWindow () {\r\n  save.window = globals.window\r\n  save.document = globals.document\r\n}\r\n\r\nexport function restoreWindow () {\r\n  globals.window = save.window\r\n  globals.document = save.document\r\n}\r\n\r\nexport function withWindow (win, fn) {\r\n  saveWindow()\r\n  registerWindow(win, win.document)\r\n  fn(win, win.document)\r\n  restoreWindow()\r\n}\r\n\r\nexport function getWindow () {\r\n  return globals.window\r\n}\r\n", "export default class Base {\r\n  // constructor (node/*, {extensions = []} */) {\r\n  //   // this.tags = []\r\n  //   //\r\n  //   // for (let extension of extensions) {\r\n  //   //   extension.setup.call(this, node)\r\n  //   //   this.tags.push(extension.name)\r\n  //   // }\r\n  // }\r\n}\r\n", "import { addMethodNames } from './methods.js'\nimport { capitalize } from './utils.js'\nimport { svg } from '../modules/core/namespaces.js'\nimport { globals } from '../utils/window.js'\nimport Base from '../types/Base.js'\n\nconst elements = {}\nexport const root = '___SYMBOL___ROOT___'\n\n// Method for element creation\nexport function create (name, ns = svg) {\n  // create element\n  return globals.document.createElementNS(ns, name)\n}\n\nexport function makeInstance (element, isHTML = false) {\n  if (element instanceof Base) return element\n\n  if (typeof element === 'object') {\n    return adopter(element)\n  }\n\n  if (element == null) {\n    return new elements[root]()\n  }\n\n  if (typeof element === 'string' && element.charAt(0) !== '<') {\n    return adopter(globals.document.querySelector(element))\n  }\n\n  // Make sure, that HTML elements are created with the correct namespace\n  const wrapper = isHTML ? globals.document.createElement('div') : create('svg')\n  wrapper.innerHTML = element\n\n  // We can use firstChild here because we know,\n  // that the first char is < and thus an element\n  element = adopter(wrapper.firstChild)\n\n  // make sure, that element doesnt have its wrapper attached\n  wrapper.removeChild(wrapper.firstChild)\n  return element\n}\n\nexport function nodeOrNew (name, node) {\n  return (node && node.ownerDocument && node instanceof node.ownerDocument.defaultView.Node) ? node : create(name)\n}\n\n// Adopt existing svg elements\nexport function adopt (node) {\n  // check for presence of node\n  if (!node) return null\n\n  // make sure a node isn't already adopted\n  if (node.instance instanceof Base) return node.instance\n\n  if (node.nodeName === '#document-fragment') {\n    return new elements.Fragment(node)\n  }\n\n  // initialize variables\n  let className = capitalize(node.nodeName || 'Dom')\n\n  // Make sure that gradients are adopted correctly\n  if (className === 'LinearGradient' || className === 'RadialGradient') {\n    className = 'Gradient'\n\n  // Fallback to Dom if element is not known\n  } else if (!elements[className]) {\n    className = 'Dom'\n  }\n\n  return new elements[className](node)\n}\n\nlet adopter = adopt\n\nexport function mockAdopt (mock = adopt) {\n  adopter = mock\n}\n\nexport function register (element, name = element.name, asRoot = false) {\n  elements[name] = element\n  if (asRoot) elements[root] = element\n\n  addMethodNames(Object.getOwnPropertyNames(element.prototype))\n\n  return element\n}\n\nexport function getClass (name) {\n  return elements[name]\n}\n\n// Element id sequence\nlet did = 1000\n\n// Get next named element id\nexport function eid (name) {\n  return 'Svgjs' + capitalize(name) + (did++)\n}\n\n// Deep new id assignment\nexport function assignNewId (node) {\n  // do the same for SVG child nodes as well\n  for (let i = node.children.length - 1; i >= 0; i--) {\n    assignNewId(node.children[i])\n  }\n\n  if (node.id) {\n    node.id = eid(node.nodeName)\n    return node\n  }\n\n  return node\n}\n\n// Method for extending objects\nexport function extend (modules, methods) {\n  let key, i\n\n  modules = Array.isArray(modules) ? modules : [ modules ]\n\n  for (i = modules.length - 1; i >= 0; i--) {\n    for (key in methods) {\n      modules[i].prototype[key] = methods[key]\n    }\n  }\n}\n\nexport function wrapWithAttrCheck (fn) {\n  return function (...args) {\n    const o = args[args.length - 1]\n\n    if (o && o.constructor === Object && !(o instanceof Array)) {\n      return fn.apply(this, args.slice(0, -1)).attr(o)\n    } else {\n      return fn.apply(this, args)\n    }\n  }\n}\n", "import { makeInstance } from '../../utils/adopter.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Get all siblings, including myself\r\nexport function siblings () {\r\n  return this.parent().children()\r\n}\r\n\r\n// Get the current position siblings\r\nexport function position () {\r\n  return this.parent().index(this)\r\n}\r\n\r\n// Get the next element (will return null if there is none)\r\nexport function next () {\r\n  return this.siblings()[this.position() + 1]\r\n}\r\n\r\n// Get the next element (will return null if there is none)\r\nexport function prev () {\r\n  return this.siblings()[this.position() - 1]\r\n}\r\n\r\n// Send given element one step forward\r\nexport function forward () {\r\n  const i = this.position()\r\n  const p = this.parent()\r\n\r\n  // move node one step forward\r\n  p.add(this.remove(), i + 1)\r\n\r\n  return this\r\n}\r\n\r\n// Send given element one step backward\r\nexport function backward () {\r\n  const i = this.position()\r\n  const p = this.parent()\r\n\r\n  p.add(this.remove(), i ? i - 1 : 0)\r\n\r\n  return this\r\n}\r\n\r\n// Send given element all the way to the front\r\nexport function front () {\r\n  const p = this.parent()\r\n\r\n  // Move node forward\r\n  p.add(this.remove())\r\n\r\n  return this\r\n}\r\n\r\n// Send given element all the way to the back\r\nexport function back () {\r\n  const p = this.parent()\r\n\r\n  // Move node back\r\n  p.add(this.remove(), 0)\r\n\r\n  return this\r\n}\r\n\r\n// Inserts a given element before the targeted element\r\nexport function before (element) {\r\n  element = makeInstance(element)\r\n  element.remove()\r\n\r\n  const i = this.position()\r\n\r\n  this.parent().add(element, i)\r\n\r\n  return this\r\n}\r\n\r\n// Inserts a given element after the targeted element\r\nexport function after (element) {\r\n  element = makeInstance(element)\r\n  element.remove()\r\n\r\n  const i = this.position()\r\n\r\n  this.parent().add(element, i + 1)\r\n\r\n  return this\r\n}\r\n\r\nexport function insertBefore (element) {\r\n  element = makeInstance(element)\r\n  element.before(this)\r\n  return this\r\n}\r\n\r\nexport function insertAfter (element) {\r\n  element = makeInstance(element)\r\n  element.after(this)\r\n  return this\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  siblings,\r\n  position,\r\n  next,\r\n  prev,\r\n  forward,\r\n  backward,\r\n  front,\r\n  back,\r\n  before,\r\n  after,\r\n  insertBefore,\r\n  insertAfter\r\n})\r\n", "// Parse unit value\r\nexport const numberAndUnit = /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n// Parse hex value\r\nexport const hex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n// Parse rgb value\r\nexport const rgb = /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n// Parse reference id\r\nexport const reference = /(#[a-z_][a-z0-9\\-_]*)/i\r\n\r\n// splits a transformation chain\r\nexport const transforms = /\\)\\s*,?\\s*/\r\n\r\n// Whitespace\r\nexport const whitespace = /\\s/g\r\n\r\n// Test hex value\r\nexport const isHex = /^#[a-f0-9]{3}$|^#[a-f0-9]{6}$/i\r\n\r\n// Test rgb value\r\nexport const isRgb = /^rgb\\(/\r\n\r\n// Test for blank string\r\nexport const isBlank = /^(\\s+)?$/\r\n\r\n// Test for numeric string\r\nexport const isNumber = /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n// Test for image url\r\nexport const isImage = /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n// split at whitespace and comma\r\nexport const delimiter = /[\\s,]+/\r\n\r\n// Test for path letter\r\nexport const isPathLetter = /[MLHVCSQTAZ]/i\r\n", "import { delimiter } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Return array of classes on the node\r\nexport function classes () {\r\n  const attr = this.attr('class')\r\n  return attr == null ? [] : attr.trim().split(delimiter)\r\n}\r\n\r\n// Return true if class exists on the node, false otherwise\r\nexport function hasClass (name) {\r\n  return this.classes().indexOf(name) !== -1\r\n}\r\n\r\n// Add class to the node\r\nexport function addClass (name) {\r\n  if (!this.hasClass(name)) {\r\n    const array = this.classes()\r\n    array.push(name)\r\n    this.attr('class', array.join(' '))\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Remove class from the node\r\nexport function removeClass (name) {\r\n  if (this.hasClass(name)) {\r\n    this.attr('class', this.classes().filter(function (c) {\r\n      return c !== name\r\n    }).join(' '))\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Toggle the presence of a class on the node\r\nexport function toggleClass (name) {\r\n  return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  classes, hasClass, addClass, removeClass, toggleClass\r\n})\r\n", "import { camelCase } from '../../utils/utils.js'\r\nimport { isBlank } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Dynamic style generator\r\nexport function css (style, val) {\r\n  const ret = {}\r\n  if (arguments.length === 0) {\r\n    // get full style as object\r\n    this.node.style.cssText.split(/\\s*;\\s*/)\r\n      .filter(function (el) {\r\n        return !!el.length\r\n      })\r\n      .forEach(function (el) {\r\n        const t = el.split(/\\s*:\\s*/)\r\n        ret[t[0]] = t[1]\r\n      })\r\n    return ret\r\n  }\r\n\r\n  if (arguments.length < 2) {\r\n    // get style properties as array\r\n    if (Array.isArray(style)) {\r\n      for (const name of style) {\r\n        const cased = camelCase(name)\r\n        ret[name] = this.node.style[cased]\r\n      }\r\n      return ret\r\n    }\r\n\r\n    // get style for property\r\n    if (typeof style === 'string') {\r\n      return this.node.style[camelCase(style)]\r\n    }\r\n\r\n    // set styles in object\r\n    if (typeof style === 'object') {\r\n      for (const name in style) {\r\n        // set empty string if null/undefined/'' was given\r\n        this.node.style[camelCase(name)]\r\n          = (style[name] == null || isBlank.test(style[name])) ? '' : style[name]\r\n      }\r\n    }\r\n  }\r\n\r\n  // set style for property\r\n  if (arguments.length === 2) {\r\n    this.node.style[camelCase(style)]\r\n      = (val == null || isBlank.test(val)) ? '' : val\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Show element\r\nexport function show () {\r\n  return this.css('display', '')\r\n}\r\n\r\n// Hide element\r\nexport function hide () {\r\n  return this.css('display', 'none')\r\n}\r\n\r\n// Is element visible?\r\nexport function visible () {\r\n  return this.css('display') !== 'none'\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  css, show, hide, visible\r\n})\r\n", "import { registerMethods } from '../../utils/methods.js'\r\nimport { filter, map } from '../../utils/utils.js'\r\n\r\n// Store data values on svg nodes\r\nexport function data (a, v, r) {\r\n  if (a == null) {\r\n    // get an object of attributes\r\n    return this.data(map(filter(this.node.attributes, (el) => el.nodeName.indexOf('data-') === 0), (el) => el.nodeName.slice(5)))\r\n  } else if (a instanceof Array) {\r\n    const data = {}\r\n    for (const key of a) {\r\n      data[key] = this.data(key)\r\n    }\r\n    return data\r\n  } else if (typeof a === 'object') {\r\n    for (v in a) {\r\n      this.data(v, a[v])\r\n    }\r\n  } else if (arguments.length < 2) {\r\n    try {\r\n      return JSON.parse(this.attr('data-' + a))\r\n    } catch (e) {\r\n      return this.attr('data-' + a)\r\n    }\r\n  } else {\r\n    this.attr('data-' + a,\r\n      v === null\n        ? null\r\n        : r === true || typeof v === 'string' || typeof v === 'number'\n          ? v\r\n          : JSON.stringify(v)\r\n    )\r\n  }\r\n\r\n  return this\r\n}\r\n\r\nregisterMethods('Dom', { data })\r\n", "import { registerMethods } from '../../utils/methods.js'\r\n\r\n// Remember arbitrary data\r\nexport function remember (k, v) {\r\n  // remember every item in an object individually\r\n  if (typeof arguments[0] === 'object') {\r\n    for (const key in k) {\r\n      this.remember(key, k[key])\r\n    }\r\n  } else if (arguments.length === 1) {\r\n    // retrieve memory\r\n    return this.memory()[k]\r\n  } else {\r\n    // store memory\r\n    this.memory()[k] = v\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Erase a given memory\r\nexport function forget () {\r\n  if (arguments.length === 0) {\r\n    this._memory = {}\r\n  } else {\r\n    for (let i = arguments.length - 1; i >= 0; i--) {\r\n      delete this.memory()[arguments[i]]\r\n    }\r\n  }\r\n  return this\r\n}\r\n\r\n// This triggers creation of a new hidden class which is not performant\r\n// However, this function is not rarely used so it will not happen frequently\r\n// Return local memory object\r\nexport function memory () {\r\n  return (this._memory = this._memory || {})\r\n}\r\n\r\nregisterMethods('Dom', { remember, forget, memory })\r\n", "\r\nimport { hex, isHex, isRgb, rgb, whitespace } from '../modules/core/regex.js'\r\n\r\nfunction sixDigitHex (hex) {\r\n  return hex.length === 4\r\n    ? [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2),\r\n      hex.substring(2, 3), hex.substring(2, 3),\r\n      hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('')\r\n    : hex\r\n}\r\n\r\nfunction componentHex (component) {\r\n  const integer = Math.round(component)\r\n  const bounded = Math.max(0, Math.min(255, integer))\r\n  const hex = bounded.toString(16)\r\n  return hex.length === 1 ? '0' + hex : hex\r\n}\r\n\r\nfunction is (object, space) {\r\n  for (let i = space.length; i--;) {\r\n    if (object[space[i]] == null) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction getParameters (a, b) {\r\n  const params = is(a, 'rgb')\n    ? { _a: a.r, _b: a.g, _c: a.b, _d: 0, space: 'rgb' }\r\n    : is(a, 'xyz')\n      ? { _a: a.x, _b: a.y, _c: a.z, _d: 0, space: 'xyz' }\r\n      : is(a, 'hsl')\n        ? { _a: a.h, _b: a.s, _c: a.l, _d: 0, space: 'hsl' }\r\n        : is(a, 'lab')\n          ? { _a: a.l, _b: a.a, _c: a.b, _d: 0, space: 'lab' }\r\n          : is(a, 'lch')\n            ? { _a: a.l, _b: a.c, _c: a.h, _d: 0, space: 'lch' }\r\n            : is(a, 'cmyk')\n              ? { _a: a.c, _b: a.m, _c: a.y, _d: a.k, space: 'cmyk' }\r\n              : { _a: 0, _b: 0, _c: 0, space: 'rgb' }\r\n\r\n  params.space = b || params.space\r\n  return params\r\n}\r\n\r\nfunction cieSpace (space) {\r\n  if (space === 'lab' || space === 'xyz' || space === 'lch') {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nfunction hueToRgb (p, q, t) {\r\n  if (t < 0) t += 1\r\n  if (t > 1) t -= 1\r\n  if (t < 1 / 6) return p + (q - p) * 6 * t\r\n  if (t < 1 / 2) return q\r\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\r\n  return p\r\n}\r\n\r\nexport default class Color {\r\n  constructor (...inputs) {\r\n    this.init(...inputs)\r\n  }\r\n\r\n  // Test if given value is a color\n  static isColor (color) {\r\n    return color && (\r\n      color instanceof Color\r\n      || this.isRgb(color)\r\n      || this.test(color)\r\n    )\r\n  }\n\n  // Test if given value is an rgb object\n  static isRgb (color) {\r\n    return color && typeof color.r === 'number'\r\n      && typeof color.g === 'number'\r\n      && typeof color.b === 'number'\r\n  }\n\n  /*\r\n  Generating random colors\r\n  */\n  static random (mode = 'vibrant', t, u) {\r\n\r\n    // Get the math modules\r\n    const { random, round, sin, PI: pi } = Math\r\n\r\n    // Run the correct generator\r\n    if (mode === 'vibrant') {\r\n\r\n      const l = (81 - 57) * random() + 57\r\n      const c = (83 - 45) * random() + 45\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'sine') {\r\n\r\n      t = t == null ? random() : t\r\n      const r = round(80 * sin(2 * pi * t / 0.5 + 0.01) + 150)\r\n      const g = round(50 * sin(2 * pi * t / 0.5 + 4.6) + 200)\r\n      const b = round(100 * sin(2 * pi * t / 0.5 + 2.3) + 150)\r\n      const color = new Color(r, g, b)\r\n      return color\r\n\r\n    } else if (mode === 'pastel') {\r\n\r\n      const l = (94 - 86) * random() + 86\r\n      const c = (26 - 9) * random() + 9\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'dark') {\r\n\r\n      const l = 10 + 10 * random()\r\n      const c = (125 - 75) * random() + 86\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'rgb') {\r\n\r\n      const r = 255 * random()\r\n      const g = 255 * random()\r\n      const b = 255 * random()\r\n      const color = new Color(r, g, b)\r\n      return color\r\n\r\n    } else if (mode === 'lab') {\r\n\r\n      const l = 100 * random()\r\n      const a = 256 * random() - 128\r\n      const b = 256 * random() - 128\r\n      const color = new Color(l, a, b, 'lab')\r\n      return color\r\n\r\n    } else if (mode === 'grey') {\r\n\r\n      const grey = 255 * random()\r\n      const color = new Color(grey, grey, grey)\r\n      return color\r\n\r\n    } else {\r\n\r\n      throw new Error('Unsupported random color mode')\r\n\r\n    }\r\n  }\n\n  // Test if given value is a color string\n  static test (color) {\r\n    return (typeof color === 'string')\r\n      && (isHex.test(color) || isRgb.test(color))\r\n  }\n\n  cmyk () {\r\n\r\n    // Get the rgb values for the current color\r\n    const { _a, _b, _c } = this.rgb()\r\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\r\n\r\n    // Get the cmyk values in an unbounded format\r\n    const k = Math.min(1 - r, 1 - g, 1 - b)\r\n\r\n    if (k === 1) {\r\n      // Catch the black case\r\n      return new Color(0, 0, 0, 1, 'cmyk')\r\n    }\r\n\r\n    const c = (1 - r - k) / (1 - k)\r\n    const m = (1 - g - k) / (1 - k)\r\n    const y = (1 - b - k) / (1 - k)\r\n\r\n    // Construct the new color\r\n    const color = new Color(c, m, y, k, 'cmyk')\r\n    return color\r\n  }\n\n  hsl () {\r\n\r\n    // Get the rgb values\r\n    const { _a, _b, _c } = this.rgb()\r\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\r\n\r\n    // Find the maximum and minimum values to get the lightness\r\n    const max = Math.max(r, g, b)\r\n    const min = Math.min(r, g, b)\r\n    const l = (max + min) / 2\r\n\r\n    // If the r, g, v values are identical then we are grey\r\n    const isGrey = max === min\r\n\r\n    // Calculate the hue and saturation\r\n    const delta = max - min\r\n    const s = isGrey\n      ? 0\r\n      : l > 0.5\n        ? delta / (2 - max - min)\r\n        : delta / (max + min)\r\n    const h = isGrey\n      ? 0\r\n      : max === r\n        ? ((g - b) / delta + (g < b ? 6 : 0)) / 6\r\n        : max === g\n          ? ((b - r) / delta + 2) / 6\r\n          : max === b\n            ? ((r - g) / delta + 4) / 6\r\n            : 0\r\n\r\n    // Construct and return the new color\r\n    const color = new Color(360 * h, 100 * s, 100 * l, 'hsl')\r\n    return color\r\n  }\n\n  init (a = 0, b = 0, c = 0, d = 0, space = 'rgb') {\r\n    // This catches the case when a falsy value is passed like ''\r\n    a = !a ? 0 : a\r\n\r\n    // Reset all values in case the init function is rerun with new color space\r\n    if (this.space) {\r\n      for (const component in this.space) {\r\n        delete this[this.space[component]]\r\n      }\r\n    }\r\n\r\n    if (typeof a === 'number') {\r\n      // Allow for the case that we don't need d...\r\n      space = typeof d === 'string' ? d : space\r\n      d = typeof d === 'string' ? 0 : d\r\n\r\n      // Assign the values straight to the color\r\n      Object.assign(this, { _a: a, _b: b, _c: c, _d: d, space })\r\n    // If the user gave us an array, make the color from it\r\n    } else if (a instanceof Array) {\r\n      this.space = b || (typeof a[3] === 'string' ? a[3] : a[4]) || 'rgb'\r\n      Object.assign(this, { _a: a[0], _b: a[1], _c: a[2], _d: a[3] || 0 })\r\n    } else if (a instanceof Object) {\r\n      // Set the object up and assign its values directly\r\n      const values = getParameters(a, b)\r\n      Object.assign(this, values)\r\n    } else if (typeof a === 'string') {\r\n      if (isRgb.test(a)) {\r\n        const noWhitespace = a.replace(whitespace, '')\r\n        const [ _a, _b, _c ] = rgb.exec(noWhitespace)\r\n          .slice(1, 4).map(v => parseInt(v))\r\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\r\n      } else if (isHex.test(a)) {\r\n        const hexParse = v => parseInt(v, 16)\r\n        const [ , _a, _b, _c ] = hex.exec(sixDigitHex(a)).map(hexParse)\r\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\r\n      } else throw Error('Unsupported string format, can\\'t construct Color')\r\n    }\r\n\r\n    // Now add the components as a convenience\r\n    const { _a, _b, _c, _d } = this\r\n    const components = this.space === 'rgb'\n      ? { r: _a, g: _b, b: _c }\r\n      : this.space === 'xyz'\n        ? { x: _a, y: _b, z: _c }\r\n        : this.space === 'hsl'\n          ? { h: _a, s: _b, l: _c }\r\n          : this.space === 'lab'\n            ? { l: _a, a: _b, b: _c }\r\n            : this.space === 'lch'\n              ? { l: _a, c: _b, h: _c }\r\n              : this.space === 'cmyk'\n                ? { c: _a, m: _b, y: _c, k: _d }\r\n                : {}\r\n    Object.assign(this, components)\r\n  }\r\n\r\n  lab () {\r\n    // Get the xyz color\r\n    const { x, y, z } = this.xyz()\r\n\r\n    // Get the lab components\r\n    const l = (116 * y) - 16\r\n    const a = 500 * (x - y)\r\n    const b = 200 * (y - z)\r\n\r\n    // Construct and return a new color\r\n    const color = new Color(l, a, b, 'lab')\r\n    return color\r\n  }\n\n  lch () {\r\n\r\n    // Get the lab color directly\r\n    const { l, a, b } = this.lab()\r\n\r\n    // Get the chromaticity and the hue using polar coordinates\r\n    const c = Math.sqrt(a ** 2 + b ** 2)\r\n    let h = 180 * Math.atan2(b, a) / Math.PI\r\n    if (h < 0) {\r\n      h *= -1\r\n      h = 360 - h\r\n    }\r\n\r\n    // Make a new color and return it\r\n    const color = new Color(l, c, h, 'lch')\r\n    return color\r\n  }\n  /*\r\n  Conversion Methods\r\n  */\r\n\r\n  rgb () {\r\n    if (this.space === 'rgb') {\r\n      return this\r\n    } else if (cieSpace(this.space)) {\r\n      // Convert to the xyz color space\r\n      let { x, y, z } = this\r\n      if (this.space === 'lab' || this.space === 'lch') {\r\n        // Get the values in the lab space\r\n        let { l, a, b } = this\r\n        if (this.space === 'lch') {\r\n          const { c, h } = this\r\n          const dToR = Math.PI / 180\r\n          a = c * Math.cos(dToR * h)\r\n          b = c * Math.sin(dToR * h)\r\n        }\r\n\r\n        // Undo the nonlinear function\r\n        const yL = (l + 16) / 116\r\n        const xL = a / 500 + yL\r\n        const zL = yL - b / 200\r\n\r\n        // Get the xyz values\r\n        const ct = 16 / 116\r\n        const mx = 0.008856\r\n        const nm = 7.787\r\n        x = 0.95047 * ((xL ** 3 > mx) ? xL ** 3 : (xL - ct) / nm)\r\n        y = 1.00000 * ((yL ** 3 > mx) ? yL ** 3 : (yL - ct) / nm)\r\n        z = 1.08883 * ((zL ** 3 > mx) ? zL ** 3 : (zL - ct) / nm)\r\n      }\r\n\r\n      // Convert xyz to unbounded rgb values\r\n      const rU = x * 3.2406 + y * -1.5372 + z * -0.4986\r\n      const gU = x * -0.9689 + y * 1.8758 + z * 0.0415\r\n      const bU = x * 0.0557 + y * -0.2040 + z * 1.0570\r\n\r\n      // Convert the values to true rgb values\r\n      const pow = Math.pow\r\n      const bd = 0.0031308\r\n      const r = (rU > bd) ? (1.055 * pow(rU, 1 / 2.4) - 0.055) : 12.92 * rU\r\n      const g = (gU > bd) ? (1.055 * pow(gU, 1 / 2.4) - 0.055) : 12.92 * gU\r\n      const b = (bU > bd) ? (1.055 * pow(bU, 1 / 2.4) - 0.055) : 12.92 * bU\r\n\r\n      // Make and return the color\r\n      const color = new Color(255 * r, 255 * g, 255 * b)\r\n      return color\r\n    } else if (this.space === 'hsl') {\r\n      // https://bgrins.github.io/TinyColor/docs/tinycolor.html\r\n      // Get the current hsl values\r\n      let { h, s, l } = this\r\n      h /= 360\r\n      s /= 100\r\n      l /= 100\r\n\r\n      // If we are grey, then just make the color directly\r\n      if (s === 0) {\r\n        l *= 255\r\n        const color = new Color(l, l, l)\r\n        return color\r\n      }\r\n\r\n      // TODO I have no idea what this does :D If you figure it out, tell me!\r\n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s\r\n      const p = 2 * l - q\r\n\r\n      // Get the rgb values\r\n      const r = 255 * hueToRgb(p, q, h + 1 / 3)\r\n      const g = 255 * hueToRgb(p, q, h)\r\n      const b = 255 * hueToRgb(p, q, h - 1 / 3)\r\n\r\n      // Make a new color\r\n      const color = new Color(r, g, b)\r\n      return color\r\n    } else if (this.space === 'cmyk') {\r\n      // https://gist.github.com/felipesabino/5066336\r\n      // Get the normalised cmyk values\r\n      const { c, m, y, k } = this\r\n\r\n      // Get the rgb values\r\n      const r = 255 * (1 - Math.min(1, c * (1 - k) + k))\r\n      const g = 255 * (1 - Math.min(1, m * (1 - k) + k))\r\n      const b = 255 * (1 - Math.min(1, y * (1 - k) + k))\r\n\r\n      // Form the color and return it\r\n      const color = new Color(r, g, b)\r\n      return color\r\n    } else {\r\n      return this\r\n    }\r\n  }\r\n\n  toArray () {\r\n    const { _a, _b, _c, _d, space } = this\r\n    return [ _a, _b, _c, _d, space ]\r\n  }\n\n  toHex () {\r\n    const [ r, g, b ] = this._clamped().map(componentHex)\r\n    return `#${r}${g}${b}`\r\n  }\n\n  toRgb () {\r\n    const [ rV, gV, bV ] = this._clamped()\r\n    const string = `rgb(${rV},${gV},${bV})`\r\n    return string\r\n  }\n\n  toString () {\r\n    return this.toHex()\r\n  }\n\n  xyz () {\r\n\r\n    // Normalise the red, green and blue values\r\n    const { _a: r255, _b: g255, _c: b255 } = this.rgb()\r\n    const [ r, g, b ] = [ r255, g255, b255 ].map(v => v / 255)\r\n\r\n    // Convert to the lab rgb space\r\n    const rL = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92\r\n    const gL = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92\r\n    const bL = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92\r\n\r\n    // Convert to the xyz color space without bounding the values\r\n    const xU = (rL * 0.4124 + gL * 0.3576 + bL * 0.1805) / 0.95047\r\n    const yU = (rL * 0.2126 + gL * 0.7152 + bL * 0.0722) / 1.00000\r\n    const zU = (rL * 0.0193 + gL * 0.1192 + bL * 0.9505) / 1.08883\r\n\r\n    // Get the proper xyz values by applying the bounding\r\n    const x = (xU > 0.008856) ? Math.pow(xU, 1 / 3) : (7.787 * xU) + 16 / 116\r\n    const y = (yU > 0.008856) ? Math.pow(yU, 1 / 3) : (7.787 * yU) + 16 / 116\r\n    const z = (zU > 0.008856) ? Math.pow(zU, 1 / 3) : (7.787 * zU) + 16 / 116\r\n\r\n    // Make and return the color\r\n    const color = new Color(x, y, z, 'xyz')\r\n    return color\r\n  }\r\n\n  /*\r\n  Input and Output methods\r\n  */\r\n\r\n  _clamped () {\r\n    const { _a, _b, _c } = this.rgb()\r\n    const { max, min, round } = Math\r\n    const format = v => max(0, min(round(v), 255))\r\n    return [ _a, _b, _c ].map(format)\r\n  }\r\n\r\n  /*\r\n  Constructing colors\r\n  */\r\n\r\n}\r\n", "import Matrix from './Matrix.js'\r\n\r\nexport default class Point {\r\n  // Initialize\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  // Clone point\n  clone () {\r\n    return new Point(this)\r\n  }\n\n  init (x, y) {\r\n    const base = { x: 0, y: 0 }\r\n\r\n    // ensure source as object\r\n    const source = Array.isArray(x)\n      ? { x: x[0], y: x[1] }\r\n      : typeof x === 'object'\n        ? { x: x.x, y: x.y }\r\n        : { x: x, y: y }\r\n\r\n    // merge source\r\n    this.x = source.x == null ? base.x : source.x\r\n    this.y = source.y == null ? base.y : source.y\r\n\r\n    return this\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.x, this.y ]\r\n  }\n\n  transform (m) {\r\n    return this.clone().transformO(m)\r\n  }\r\n\r\n  // Transform point with matrix\r\n  transformO (m) {\r\n    if (!Matrix.isMatrixLike(m)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    const { x, y } = this\r\n\r\n    // Perform the matrix multiplication\r\n    this.x = m.a * x + m.c * y + m.e\r\n    this.y = m.b * x + m.d * y + m.f\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nexport function point (x, y) {\r\n  return new Point(x, y).transform(this.screenCTM().inverse())\r\n}\r\n", "import { delimiter } from '../modules/core/regex.js'\r\nimport { radians } from '../utils/utils.js'\r\nimport { register } from '../utils/adopter.js'\r\nimport Element from '../elements/Element.js'\r\nimport Point from './Point.js'\r\n\r\nfunction closeEnough (a, b, threshold) {\r\n  return Math.abs(b - a) < (threshold || 1e-6)\r\n}\r\n\r\nexport default class Matrix {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  static formatTransforms (o) {\r\n    // Get all of the parameters required to form the matrix\r\n    const flipBoth = o.flip === 'both' || o.flip === true\r\n    const flipX = o.flip && (flipBoth || o.flip === 'x') ? -1 : 1\r\n    const flipY = o.flip && (flipBoth || o.flip === 'y') ? -1 : 1\r\n    const skewX = o.skew && o.skew.length\n      ? o.skew[0]\r\n      : isFinite(o.skew)\n        ? o.skew\r\n        : isFinite(o.skewX)\n          ? o.skewX\r\n          : 0\r\n    const skewY = o.skew && o.skew.length\n      ? o.skew[1]\r\n      : isFinite(o.skew)\n        ? o.skew\r\n        : isFinite(o.skewY)\n          ? o.skewY\r\n          : 0\r\n    const scaleX = o.scale && o.scale.length\n      ? o.scale[0] * flipX\r\n      : isFinite(o.scale)\n        ? o.scale * flipX\r\n        : isFinite(o.scaleX)\n          ? o.scaleX * flipX\r\n          : flipX\r\n    const scaleY = o.scale && o.scale.length\n      ? o.scale[1] * flipY\r\n      : isFinite(o.scale)\n        ? o.scale * flipY\r\n        : isFinite(o.scaleY)\n          ? o.scaleY * flipY\r\n          : flipY\r\n    const shear = o.shear || 0\r\n    const theta = o.rotate || o.theta || 0\r\n    const origin = new Point(o.origin || o.around || o.ox || o.originX, o.oy || o.originY)\r\n    const ox = origin.x\r\n    const oy = origin.y\r\n    // We need Point to be invalid if nothing was passed because we cannot default to 0 here. Thats why NaN\r\n    const position = new Point(o.position || o.px || o.positionX || NaN, o.py || o.positionY || NaN)\r\n    const px = position.x\r\n    const py = position.y\r\n    const translate = new Point(o.translate || o.tx || o.translateX, o.ty || o.translateY)\r\n    const tx = translate.x\r\n    const ty = translate.y\r\n    const relative = new Point(o.relative || o.rx || o.relativeX, o.ry || o.relativeY)\r\n    const rx = relative.x\r\n    const ry = relative.y\r\n\r\n    // Populate all of the values\r\n    return {\r\n      scaleX, scaleY, skewX, skewY, shear, theta, rx, ry, tx, ty, ox, oy, px, py\r\n    }\r\n  }\n\n  static fromArray (a) {\r\n    return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n  }\n\n  static isMatrixLike (o) {\r\n    return (\r\n      o.a != null\r\n      || o.b != null\r\n      || o.c != null\r\n      || o.d != null\r\n      || o.e != null\r\n      || o.f != null\r\n    )\r\n  }\n\n  // left matrix, right matrix, target matrix which is overwritten\n  static matrixMultiply (l, r, o) {\r\n    // Work out the product directly\r\n    const a = l.a * r.a + l.c * r.b\r\n    const b = l.b * r.a + l.d * r.b\r\n    const c = l.a * r.c + l.c * r.d\r\n    const d = l.b * r.c + l.d * r.d\r\n    const e = l.e + l.a * r.e + l.c * r.f\r\n    const f = l.f + l.b * r.e + l.d * r.f\r\n\r\n    // make sure to use local variables because l/r and o could be the same\r\n    o.a = a\r\n    o.b = b\r\n    o.c = c\r\n    o.d = d\r\n    o.e = e\r\n    o.f = f\r\n\r\n    return o\r\n  }\n\n  around (cx, cy, matrix) {\r\n    return this.clone().aroundO(cx, cy, matrix)\r\n  }\n\n  // Transform around a center point\n  aroundO (cx, cy, matrix) {\r\n    const dx = cx || 0\r\n    const dy = cy || 0\r\n    return this.translateO(-dx, -dy).lmultiplyO(matrix).translateO(dx, dy)\r\n  }\n\n  // Clones this matrix\n  clone () {\r\n    return new Matrix(this)\r\n  }\n\n  // Decomposes this matrix into its affine parameters\n  decompose (cx = 0, cy = 0) {\r\n    // Get the parameters from the matrix\r\n    const a = this.a\r\n    const b = this.b\r\n    const c = this.c\r\n    const d = this.d\r\n    const e = this.e\r\n    const f = this.f\r\n\r\n    // Figure out if the winding direction is clockwise or counterclockwise\r\n    const determinant = a * d - b * c\r\n    const ccw = determinant > 0 ? 1 : -1\r\n\r\n    // Since we only shear in x, we can use the x basis to get the x scale\r\n    // and the rotation of the resulting matrix\r\n    const sx = ccw * Math.sqrt(a * a + b * b)\r\n    const thetaRad = Math.atan2(ccw * b, ccw * a)\r\n    const theta = 180 / Math.PI * thetaRad\r\n    const ct = Math.cos(thetaRad)\r\n    const st = Math.sin(thetaRad)\r\n\r\n    // We can then solve the y basis vector simultaneously to get the other\r\n    // two affine parameters directly from these parameters\r\n    const lam = (a * c + b * d) / determinant\r\n    const sy = ((c * sx) / (lam * a - b)) || ((d * sx) / (lam * b + a))\r\n\r\n    // Use the translations\r\n    const tx = e - cx + cx * ct * sx + cy * (lam * ct * sx - st * sy)\r\n    const ty = f - cy + cx * st * sx + cy * (lam * st * sx + ct * sy)\r\n\r\n    // Construct the decomposition and return it\r\n    return {\r\n      // Return the affine parameters\r\n      scaleX: sx,\r\n      scaleY: sy,\r\n      shear: lam,\r\n      rotate: theta,\r\n      translateX: tx,\r\n      translateY: ty,\r\n      originX: cx,\r\n      originY: cy,\r\n\r\n      // Return the matrix parameters\r\n      a: this.a,\r\n      b: this.b,\r\n      c: this.c,\r\n      d: this.d,\r\n      e: this.e,\r\n      f: this.f\r\n    }\r\n  }\n\n  // Check if two matrices are equal\n  equals (other) {\r\n    if (other === this) return true\r\n    const comp = new Matrix(other)\r\n    return closeEnough(this.a, comp.a) && closeEnough(this.b, comp.b)\r\n      && closeEnough(this.c, comp.c) && closeEnough(this.d, comp.d)\r\n      && closeEnough(this.e, comp.e) && closeEnough(this.f, comp.f)\r\n  }\n\n  // Flip matrix on x or y, at a given offset\n  flip (axis, around) {\r\n    return this.clone().flipO(axis, around)\r\n  }\n\n  flipO (axis, around) {\r\n    return axis === 'x'\n      ? this.scaleO(-1, 1, around, 0)\r\n      : axis === 'y'\n        ? this.scaleO(1, -1, 0, around)\r\n        : this.scaleO(-1, -1, axis, around || axis) // Define an x, y flip point\r\n  }\n\n  // Initialize\r\n  init (source) {\r\n    const base = Matrix.fromArray([ 1, 0, 0, 1, 0, 0 ])\r\n\r\n    // ensure source as object\r\n    source = source instanceof Element\n      ? source.matrixify()\r\n      : typeof source === 'string'\n        ? Matrix.fromArray(source.split(delimiter).map(parseFloat))\r\n        : Array.isArray(source)\n          ? Matrix.fromArray(source)\r\n          : (typeof source === 'object' && Matrix.isMatrixLike(source))\n            ? source\r\n            : (typeof source === 'object')\n              ? new Matrix().transform(source)\r\n              : arguments.length === 6\n                ? Matrix.fromArray([].slice.call(arguments))\r\n                : base\r\n\r\n    // Merge the source matrix with the base matrix\r\n    this.a = source.a != null ? source.a : base.a\r\n    this.b = source.b != null ? source.b : base.b\r\n    this.c = source.c != null ? source.c : base.c\r\n    this.d = source.d != null ? source.d : base.d\r\n    this.e = source.e != null ? source.e : base.e\r\n    this.f = source.f != null ? source.f : base.f\r\n\r\n    return this\r\n  }\r\n\n  inverse () {\r\n    return this.clone().inverseO()\r\n  }\n\n  // Inverses matrix\n  inverseO () {\r\n    // Get the current parameters out of the matrix\r\n    const a = this.a\r\n    const b = this.b\r\n    const c = this.c\r\n    const d = this.d\r\n    const e = this.e\r\n    const f = this.f\r\n\r\n    // Invert the 2x2 matrix in the top left\r\n    const det = a * d - b * c\r\n    if (!det) throw new Error('Cannot invert ' + this)\r\n\r\n    // Calculate the top 2x2 matrix\r\n    const na = d / det\r\n    const nb = -b / det\r\n    const nc = -c / det\r\n    const nd = a / det\r\n\r\n    // Apply the inverted matrix to the top right\r\n    const ne = -(na * e + nc * f)\r\n    const nf = -(nb * e + nd * f)\r\n\r\n    // Construct the inverted matrix\r\n    this.a = na\r\n    this.b = nb\r\n    this.c = nc\r\n    this.d = nd\r\n    this.e = ne\r\n    this.f = nf\r\n\r\n    return this\r\n  }\n\n  lmultiply (matrix) {\r\n    return this.clone().lmultiplyO(matrix)\r\n  }\n\n  lmultiplyO (matrix) {\r\n    const r = this\r\n    const l = matrix instanceof Matrix\r\n      ? matrix\r\n      : new Matrix(matrix)\r\n\r\n    return Matrix.matrixMultiply(l, r, this)\r\n  }\n\n  // Left multiplies by the given matrix\n  multiply (matrix) {\r\n    return this.clone().multiplyO(matrix)\r\n  }\n\n  multiplyO (matrix) {\r\n    // Get the matrices\r\n    const l = this\r\n    const r = matrix instanceof Matrix\r\n      ? matrix\r\n      : new Matrix(matrix)\r\n\r\n    return Matrix.matrixMultiply(l, r, this)\r\n  }\n\n  // Rotate matrix\n  rotate (r, cx, cy) {\r\n    return this.clone().rotateO(r, cx, cy)\r\n  }\n\n  rotateO (r, cx = 0, cy = 0) {\r\n    // Convert degrees to radians\r\n    r = radians(r)\r\n\r\n    const cos = Math.cos(r)\r\n    const sin = Math.sin(r)\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a * cos - b * sin\r\n    this.b = b * cos + a * sin\r\n    this.c = c * cos - d * sin\r\n    this.d = d * cos + c * sin\r\n    this.e = e * cos - f * sin + cy * sin - cx * cos + cx\r\n    this.f = f * cos + e * sin - cx * sin - cy * cos + cy\r\n\r\n    return this\r\n  }\n\n  // Scale matrix\n  scale (x, y, cx, cy) {\r\n    return this.clone().scaleO(...arguments)\r\n  }\n\n  scaleO (x, y = x, cx = 0, cy = 0) {\r\n    // Support uniform scaling\r\n    if (arguments.length === 3) {\r\n      cy = cx\r\n      cx = y\r\n      y = x\r\n    }\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a * x\r\n    this.b = b * y\r\n    this.c = c * x\r\n    this.d = d * y\r\n    this.e = e * x - cx * x + cx\r\n    this.f = f * y - cy * y + cy\r\n\r\n    return this\r\n  }\n\n  // Shear matrix\n  shear (a, cx, cy) {\r\n    return this.clone().shearO(a, cx, cy)\r\n  }\n\n  shearO (lx, cx = 0, cy = 0) {\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a + b * lx\r\n    this.c = c + d * lx\r\n    this.e = e + f * lx - cy * lx\r\n\r\n    return this\r\n  }\n\n  // Skew Matrix\n  skew (x, y, cx, cy) {\r\n    return this.clone().skewO(...arguments)\r\n  }\n\n  skewO (x, y = x, cx = 0, cy = 0) {\r\n    // support uniformal skew\r\n    if (arguments.length === 3) {\r\n      cy = cx\r\n      cx = y\r\n      y = x\r\n    }\r\n\r\n    // Convert degrees to radians\r\n    x = radians(x)\r\n    y = radians(y)\r\n\r\n    const lx = Math.tan(x)\r\n    const ly = Math.tan(y)\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a + b * lx\r\n    this.b = b + a * ly\r\n    this.c = c + d * lx\r\n    this.d = d + c * ly\r\n    this.e = e + f * lx - cy * lx\r\n    this.f = f + e * ly - cx * ly\r\n\r\n    return this\r\n  }\n\n  // SkewX\n  skewX (x, cx, cy) {\r\n    return this.skew(x, 0, cx, cy)\r\n  }\n\n  // SkewY\n  skewY (y, cx, cy) {\r\n    return this.skew(0, y, cx, cy)\r\n  }\n\n  toArray () {\r\n    return [ this.a, this.b, this.c, this.d, this.e, this.f ]\r\n  }\n\n  // Convert matrix to string\n  toString () {\r\n    return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')'\r\n  }\n\n  // Transform a matrix into another matrix by manipulating the space\r\n  transform (o) {\r\n    // Check if o is a matrix and then left multiply it directly\r\n    if (Matrix.isMatrixLike(o)) {\r\n      const matrix = new Matrix(o)\r\n      return matrix.multiplyO(this)\r\n    }\r\n\r\n    // Get the proposed transformations and the current transformations\r\n    const t = Matrix.formatTransforms(o)\r\n    const current = this\r\n    const { x: ox, y: oy } = new Point(t.ox, t.oy).transform(current)\r\n\r\n    // Construct the resulting matrix\r\n    const transformer = new Matrix()\r\n      .translateO(t.rx, t.ry)\r\n      .lmultiplyO(current)\r\n      .translateO(-ox, -oy)\r\n      .scaleO(t.scaleX, t.scaleY)\r\n      .skewO(t.skewX, t.skewY)\r\n      .shearO(t.shear)\r\n      .rotateO(t.theta)\r\n      .translateO(ox, oy)\r\n\r\n    // If we want the origin at a particular place, we force it there\r\n    if (isFinite(t.px) || isFinite(t.py)) {\r\n      const origin = new Point(ox, oy).transform(transformer)\r\n      // TODO: Replace t.px with isFinite(t.px)\r\n      // Doesnt work because t.px is also 0 if it wasnt passed\r\n      const dx = isFinite(t.px) ? t.px - origin.x : 0\r\n      const dy = isFinite(t.py) ? t.py - origin.y : 0\r\n      transformer.translateO(dx, dy)\r\n    }\r\n\r\n    // Translate now after positioning\r\n    transformer.translateO(t.tx, t.ty)\r\n    return transformer\r\n  }\r\n\n  // Translate matrix\r\n  translate (x, y) {\r\n    return this.clone().translateO(x, y)\r\n  }\r\n\n  translateO (x, y) {\r\n    this.e += x || 0\r\n    this.f += y || 0\r\n    return this\r\n  }\r\n\n  valueOf () {\r\n    return {\r\n      a: this.a,\r\n      b: this.b,\r\n      c: this.c,\r\n      d: this.d,\r\n      e: this.e,\r\n      f: this.f\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function ctm () {\r\n  return new Matrix(this.node.getCTM())\r\n}\r\n\r\nexport function screenCTM () {\r\n  /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n     This is needed because FF does not return the transformation matrix\r\n     for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n     However all other Browsers do that */\r\n  if (typeof this.isRoot === 'function' && !this.isRoot()) {\r\n    const rect = this.rect(1, 1)\r\n    const m = rect.node.getScreenCTM()\r\n    rect.remove()\r\n    return new Matrix(m)\r\n  }\r\n  return new Matrix(this.node.getScreenCTM())\r\n}\r\n\r\nregister(Matrix, 'Matrix')\r\n", "import { globals } from '../../utils/window.js'\r\nimport { makeInstance } from '../../utils/adopter.js'\r\n\r\nexport default function parser () {\r\n  // Reuse cached element if possible\r\n  if (!parser.nodes) {\r\n    const svg = makeInstance().size(2, 0)\r\n    svg.node.style.cssText = [\r\n      'opacity: 0',\r\n      'position: absolute',\r\n      'left: -100%',\r\n      'top: -100%',\r\n      'overflow: hidden'\r\n    ].join(';')\r\n\r\n    svg.attr('focusable', 'false')\r\n    svg.attr('aria-hidden', 'true')\r\n\r\n    const path = svg.path().node\r\n\r\n    parser.nodes = { svg, path }\r\n  }\r\n\r\n  if (!parser.nodes.svg.node.parentNode) {\r\n    const b = globals.document.body || globals.document.documentElement\r\n    parser.nodes.svg.addTo(b)\r\n  }\r\n\r\n  return parser.nodes\r\n}\r\n", "import { delimiter } from '../modules/core/regex.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { register } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Matrix from './Matrix.js'\r\nimport Point from './Point.js'\r\nimport parser from '../modules/core/parser.js'\r\n\r\nexport function isNulledBox (box) {\r\n  return !box.width && !box.height && !box.x && !box.y\r\n}\r\n\r\nexport function domContains (node) {\r\n  return node === globals.document\r\n    || (globals.document.documentElement.contains || function (node) {\r\n      // This is IE - it does not support contains() for top-level SVGs\r\n      while (node.parentNode) {\r\n        node = node.parentNode\r\n      }\r\n      return node === globals.document\r\n    }).call(globals.document.documentElement, node)\r\n}\r\n\r\nexport default class Box {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  addOffset () {\r\n    // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n    this.x += globals.window.pageXOffset\r\n    this.y += globals.window.pageYOffset\r\n    return new Box(this)\r\n  }\r\n\r\n  init (source) {\r\n    const base = [ 0, 0, 0, 0 ]\r\n    source = typeof source === 'string'\n      ? source.split(delimiter).map(parseFloat)\r\n      : Array.isArray(source)\n        ? source\r\n        : typeof source === 'object'\n          ? [ source.left != null\n            ? source.left\r\n            : source.x, source.top != null ? source.top : source.y, source.width, source.height ]\r\n          : arguments.length === 4\n            ? [].slice.call(arguments)\r\n            : base\r\n\r\n    this.x = source[0] || 0\r\n    this.y = source[1] || 0\r\n    this.width = this.w = source[2] || 0\r\n    this.height = this.h = source[3] || 0\r\n\r\n    // Add more bounding box properties\r\n    this.x2 = this.x + this.w\r\n    this.y2 = this.y + this.h\r\n    this.cx = this.x + this.w / 2\r\n    this.cy = this.y + this.h / 2\r\n\r\n    return this\r\n  }\r\n\r\n  isNulled () {\r\n    return isNulledBox(this)\r\n  }\r\n\r\n  // Merge rect box with another, return a new instance\r\n  merge (box) {\r\n    const x = Math.min(this.x, box.x)\r\n    const y = Math.min(this.y, box.y)\r\n    const width = Math.max(this.x + this.width, box.x + box.width) - x\r\n    const height = Math.max(this.y + this.height, box.y + box.height) - y\r\n\r\n    return new Box(x, y, width, height)\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.x, this.y, this.width, this.height ]\r\n  }\r\n\r\n  toString () {\r\n    return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n  }\r\n\r\n  transform (m) {\r\n    if (!(m instanceof Matrix)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    let xMin = Infinity\r\n    let xMax = -Infinity\r\n    let yMin = Infinity\r\n    let yMax = -Infinity\r\n\r\n    const pts = [\r\n      new Point(this.x, this.y),\r\n      new Point(this.x2, this.y),\r\n      new Point(this.x, this.y2),\r\n      new Point(this.x2, this.y2)\r\n    ]\r\n\r\n    pts.forEach(function (p) {\r\n      p = p.transform(m)\r\n      xMin = Math.min(xMin, p.x)\r\n      xMax = Math.max(xMax, p.x)\r\n      yMin = Math.min(yMin, p.y)\r\n      yMax = Math.max(yMax, p.y)\r\n    })\r\n\r\n    return new Box(\r\n      xMin, yMin,\r\n      xMax - xMin,\r\n      yMax - yMin\r\n    )\r\n  }\r\n\r\n}\r\n\r\nfunction getBox (el, getBBoxFn, retry) {\r\n  let box\r\n\r\n  try {\r\n    // Try to get the box with the provided function\r\n    box = getBBoxFn(el.node)\r\n\r\n    // If the box is worthless and not even in the dom, retry\r\n    // by throwing an error here...\r\n    if (isNulledBox(box) && !domContains(el.node)) {\r\n      throw new Error('Element not in the dom')\r\n    }\r\n  } catch (e) {\r\n    // ... and calling the retry handler here\r\n    box = retry(el)\r\n  }\r\n\r\n  return box\r\n}\r\n\r\nexport function bbox () {\r\n  // Function to get bbox is getBBox()\r\n  const getBBox = (node) => node.getBBox()\r\n\r\n  // Take all measures so that a stupid browser renders the element\r\n  // so we can get the bbox from it when we try again\r\n  const retry = (el) => {\r\n    try {\r\n      const clone = el.clone().addTo(parser().svg).show()\r\n      const box = clone.node.getBBox()\r\n      clone.remove()\r\n      return box\r\n    } catch (e) {\r\n      // We give up...\r\n      throw new Error(`Getting bbox of element \"${el.node.nodeName}\" is not possible: ${e.toString()}`)\r\n    }\r\n  }\r\n\r\n  const box = getBox(this, getBBox, retry)\r\n  const bbox = new Box(box)\r\n\r\n  return bbox\r\n}\r\n\r\nexport function rbox (el) {\r\n  const getRBox = (node) => node.getBoundingClientRect()\r\n  const retry = (el) => {\r\n    // There is no point in trying tricks here because if we insert the element into the dom ourselves\r\n    // it obviously will be at the wrong position\r\n    throw new Error(`Getting rbox of element \"${el.node.nodeName}\" is not possible`)\r\n  }\r\n\r\n  const box = getBox(this, getRBox, retry)\r\n  const rbox = new Box(box)\r\n\r\n  // If an element was passed, we want the bbox in the coordinate system of that element\r\n  if (el) {\r\n    return rbox.transform(el.screenCTM().inverseO())\r\n  }\r\n\r\n  // Else we want it in absolute screen coordinates\r\n  // Therefore we need to add the scrollOffset\r\n  return rbox.addOffset()\r\n}\r\n\r\n// Checks whether the given point is inside the bounding box\r\nexport function inside (x, y) {\r\n  const box = this.bbox()\r\n\r\n  return x > box.x\r\n    && y > box.y\r\n    && x < box.x + box.width\r\n    && y < box.y + box.height\r\n}\r\n\r\nregisterMethods({\r\n  viewbox: {\r\n    viewbox (x, y, width, height) {\r\n      // act as getter\r\n      if (x == null) return new Box(this.attr('viewBox'))\r\n\r\n      // act as setter\r\n      return this.attr('viewBox', new Box(x, y, width, height))\r\n    },\r\n\r\n    zoom (level, point) {\r\n      // Its best to rely on the attributes here and here is why:\r\n      // clientXYZ: Doesn't work on non-root svgs because they dont have a CSSBox (silly!)\r\n      // getBoundingClientRect: Doesn't work because Chrome just ignores width and height of nested svgs completely\r\n      //                        that means, their clientRect is always as big as the content.\r\n      //                        Furthermore this size is incorrect if the element is further transformed by its parents\r\n      // computedStyle: Only returns meaningful values if css was used with px. We dont go this route here!\r\n      // getBBox: returns the bounding box of its content - that doesnt help!\r\n      let { width, height } = this.attr([ 'width', 'height' ])\r\n\r\n      // Width and height is a string when a number with a unit is present which we can't use\r\n      // So we try clientXYZ\r\n      if ((!width && !height) || (typeof width === 'string' || typeof height === 'string')) {\r\n        width = this.node.clientWidth\r\n        height = this.node.clientHeight\r\n      }\r\n\r\n      // Giving up...\r\n      if (!width || !height) {\r\n        throw new Error('Impossible to get absolute width and height. Please provide an absolute width and height attribute on the zooming element')\r\n      }\r\n\r\n      const v = this.viewbox()\r\n\r\n      const zoomX = width / v.width\r\n      const zoomY = height / v.height\r\n      const zoom = Math.min(zoomX, zoomY)\r\n\r\n      if (level == null) {\r\n        return zoom\r\n      }\r\n\r\n      let zoomAmount = zoom / level\r\n\r\n      // Set the zoomAmount to the highest value which is safe to process and recover from\r\n      // The * 100 is a bit of wiggle room for the matrix transformation\r\n      if (zoomAmount === Infinity) zoomAmount = Number.MAX_SAFE_INTEGER / 100\r\n\r\n      point = point || new Point(width / 2 / zoomX + v.x, height / 2 / zoomY + v.y)\r\n\r\n      const box = new Box(v).transform(\r\n        new Matrix({ scale: zoomAmount, origin: point })\r\n      )\r\n\r\n      return this.viewbox(box)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Box, 'Box')\r\n", "import { extend } from '../utils/adopter.js'\r\n// import { subClassArray } from './ArrayPolyfill.js'\r\n\r\nclass List extends Array {\r\n  constructor (arr = [], ...args) {\r\n    super(arr, ...args)\r\n    if (typeof arr === 'number') return this\r\n    this.length = 0\r\n    this.push(...arr)\r\n  }\r\n}\r\n\r\n/* = subClassArray('List', Array, function (arr = []) {\r\n  // This catches the case, that native map tries to create an array with new Array(1)\r\n  if (typeof arr === 'number') return this\r\n  this.length = 0\r\n  this.push(...arr)\r\n}) */\r\n\r\nexport default List\r\n\r\nextend([ List ], {\r\n  each (fnOrMethodName, ...args) {\r\n    if (typeof fnOrMethodName === 'function') {\r\n      return this.map((el, i, arr) => {\r\n        return fnOrMethodName.call(el, el, i, arr)\r\n      })\r\n    } else {\r\n      return this.map(el => {\r\n        return el[fnOrMethodName](...args)\r\n      })\r\n    }\r\n  },\r\n\r\n  toArray () {\r\n    return Array.prototype.concat.apply([], this)\r\n  }\r\n})\r\n\r\nconst reserved = [ 'toArray', 'constructor', 'each' ]\r\n\r\nList.extend = function (methods) {\r\n  methods = methods.reduce((obj, name) => {\r\n    // Don't overwrite own methods\r\n    if (reserved.includes(name)) return obj\r\n\r\n    // Don't add private methods\r\n    if (name[0] === '_') return obj\r\n\r\n    // Relay every call to each()\r\n    obj[name] = function (...attrs) {\r\n      return this.each(name, ...attrs)\r\n    }\r\n    return obj\r\n  }, {})\r\n\r\n  extend([ List ], methods)\r\n}\r\n", "import { adopt } from '../../utils/adopter.js'\r\nimport { globals } from '../../utils/window.js'\r\nimport { map } from '../../utils/utils.js'\r\nimport List from '../../types/List.js'\r\n\r\nexport default function baseFind (query, parent) {\r\n  return new List(map((parent || globals.document).querySelectorAll(query), function (node) {\r\n    return adopt(node)\r\n  }))\r\n}\r\n\r\n// Scoped find method\r\nexport function find (query) {\r\n  return baseFind(query, this.node)\r\n}\r\n\r\nexport function findOne (query) {\r\n  return adopt(this.node.querySelector(query))\r\n}\r\n", "import { delimiter } from './regex.js'\r\nimport { makeInstance } from '../../utils/adopter.js'\r\nimport { globals } from '../../utils/window.js'\r\n\r\nlet listenerId = 0\r\nexport const windowEvents = {}\r\n\r\nexport function getEvents (instance) {\r\n  let n = instance.getEventHolder()\r\n\r\n  // We dont want to save events in global space\r\n  if (n === globals.window) n = windowEvents\r\n  if (!n.events) n.events = {}\r\n  return n.events\r\n}\r\n\r\nexport function getEventTarget (instance) {\r\n  return instance.getEventTarget()\r\n}\r\n\r\nexport function clearEvents (instance) {\r\n  let n = instance.getEventHolder()\r\n  if (n === globals.window) n = windowEvents\r\n  if (n.events) n.events = {}\r\n}\r\n\r\n// Add event binder in the SVG namespace\r\nexport function on (node, events, listener, binding, options) {\r\n  const l = listener.bind(binding || node)\r\n  const instance = makeInstance(node)\r\n  const bag = getEvents(instance)\r\n  const n = getEventTarget(instance)\r\n\r\n  // events can be an array of events or a string of events\r\n  events = Array.isArray(events) ? events : events.split(delimiter)\r\n\r\n  // add id to listener\r\n  if (!listener._svgjsListenerId) {\r\n    listener._svgjsListenerId = ++listenerId\r\n  }\r\n\r\n  events.forEach(function (event) {\r\n    const ev = event.split('.')[0]\r\n    const ns = event.split('.')[1] || '*'\r\n\r\n    // ensure valid object\r\n    bag[ev] = bag[ev] || {}\r\n    bag[ev][ns] = bag[ev][ns] || {}\r\n\r\n    // reference listener\r\n    bag[ev][ns][listener._svgjsListenerId] = l\r\n\r\n    // add listener\r\n    n.addEventListener(ev, l, options || false)\r\n  })\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nexport function off (node, events, listener, options) {\r\n  const instance = makeInstance(node)\r\n  const bag = getEvents(instance)\r\n  const n = getEventTarget(instance)\r\n\r\n  // listener can be a function or a number\r\n  if (typeof listener === 'function') {\r\n    listener = listener._svgjsListenerId\r\n    if (!listener) return\r\n  }\r\n\r\n  // events can be an array of events or a string or undefined\r\n  events = Array.isArray(events) ? events : (events || '').split(delimiter)\r\n\r\n  events.forEach(function (event) {\r\n    const ev = event && event.split('.')[0]\r\n    const ns = event && event.split('.')[1]\r\n    let namespace, l\r\n\r\n    if (listener) {\r\n      // remove listener reference\r\n      if (bag[ev] && bag[ev][ns || '*']) {\r\n        // removeListener\r\n        n.removeEventListener(ev, bag[ev][ns || '*'][listener], options || false)\r\n\r\n        delete bag[ev][ns || '*'][listener]\r\n      }\r\n    } else if (ev && ns) {\r\n      // remove all listeners for a namespaced event\r\n      if (bag[ev] && bag[ev][ns]) {\r\n        for (l in bag[ev][ns]) {\r\n          off(n, [ ev, ns ].join('.'), l)\r\n        }\r\n\r\n        delete bag[ev][ns]\r\n      }\r\n    } else if (ns) {\r\n      // remove all listeners for a specific namespace\r\n      for (event in bag) {\r\n        for (namespace in bag[event]) {\r\n          if (ns === namespace) {\r\n            off(n, [ event, ns ].join('.'))\r\n          }\r\n        }\r\n      }\r\n    } else if (ev) {\r\n      // remove all listeners for the event\r\n      if (bag[ev]) {\r\n        for (namespace in bag[ev]) {\r\n          off(n, [ ev, namespace ].join('.'))\r\n        }\r\n\r\n        delete bag[ev]\r\n      }\r\n    } else {\r\n      // remove all listeners on a given node\r\n      for (event in bag) {\r\n        off(n, event)\r\n      }\r\n\r\n      clearEvents(instance)\r\n    }\r\n  })\r\n}\r\n\r\nexport function dispatch (node, event, data, options) {\r\n  const n = getEventTarget(node)\r\n\r\n  // Dispatch event\r\n  if (event instanceof globals.window.Event) {\r\n    n.dispatchEvent(event)\r\n  } else {\r\n    event = new globals.window.CustomEvent(event, { detail: data, cancelable: true, ...options })\r\n    n.dispatchEvent(event)\r\n  }\r\n  return event\r\n}\r\n", "import { dispatch, off, on } from '../modules/core/event.js'\nimport { register } from '../utils/adopter.js'\nimport Base from './Base.js'\n\nexport default class EventTarget extends Base {\n  addEventListener () {}\n\n  dispatch (event, data, options) {\n    return dispatch(this, event, data, options)\n  }\n\n  dispatchEvent (event) {\n    const bag = this.getEventHolder().events\n    if (!bag) return true\n\n    const events = bag[event.type]\n\n    for (const i in events) {\n      for (const j in events[i]) {\n        events[i][j](event)\n      }\n    }\n\n    return !event.defaultPrevented\n  }\n\n  // Fire given event\n  fire (event, data, options) {\n    this.dispatch(event, data, options)\n    return this\n  }\n\n  getEventHolder () {\n    return this\n  }\n\n  getEventTarget () {\n    return this\n  }\n\n  // Unbind event from listener\n  off (event, listener, options) {\n    off(this, event, listener, options)\n    return this\n  }\n\n  // Bind given event to listener\n  on (event, listener, binding, options) {\n    on(this, event, listener, binding, options)\n    return this\n  }\n\n  removeEventListener () {}\n}\n\nregister(EventTarget, 'EventTarget')\n", "\r\nexport function noop () {}\r\n\r\n// Default animation values\r\nexport const timeline = {\r\n  duration: 400,\r\n  ease: '>',\r\n  delay: 0\r\n}\r\n\r\n// Default attribute values\r\nexport const attrs = {\r\n\r\n  // fill and stroke\r\n  'fill-opacity': 1,\r\n  'stroke-opacity': 1,\r\n  'stroke-width': 0,\r\n  'stroke-linejoin': 'miter',\r\n  'stroke-linecap': 'butt',\r\n  fill: '#000000',\r\n  stroke: '#000000',\r\n  opacity: 1,\r\n\r\n  // position\r\n  x: 0,\r\n  y: 0,\r\n  cx: 0,\r\n  cy: 0,\r\n\r\n  // size\r\n  width: 0,\r\n  height: 0,\r\n\r\n  // radius\r\n  r: 0,\r\n  rx: 0,\r\n  ry: 0,\r\n\r\n  // gradient\r\n  offset: 0,\r\n  'stop-opacity': 1,\r\n  'stop-color': '#000000',\r\n\r\n  // text\r\n  'text-anchor': 'start'\r\n}\r\n", "import { delimiter } from '../modules/core/regex.js'\r\n\r\nexport default class SVGArray extends Array {\r\n  constructor (...args) {\r\n    super(...args)\r\n    this.init(...args)\r\n  }\r\n\r\n  clone () {\r\n    return new this.constructor(this)\r\n  }\n\n  init (arr) {\r\n    // This catches the case, that native map tries to create an array with new Array(1)\r\n    if (typeof arr === 'number') return this\r\n    this.length = 0\r\n    this.push(...this.parse(arr))\r\n    return this\r\n  }\r\n\r\n  // Parse whitespace separated string\n  parse (array = []) {\r\n    // If already is an array, no need to parse it\r\n    if (array instanceof Array) return array\r\n\r\n    return array.trim().split(delimiter).map(parseFloat)\r\n  }\n\n  toArray () {\r\n    return Array.prototype.concat.apply([], this)\r\n  }\r\n\r\n  toSet () {\r\n    return new Set(this)\r\n  }\n\n  toString () {\r\n    return this.join(' ')\r\n  }\r\n\r\n  // Flattens the array if needed\r\n  valueOf () {\r\n    const ret = []\r\n    ret.push(...this)\r\n    return ret\r\n  }\r\n\r\n}\r\n", "import { numberAndUnit } from '../modules/core/regex.js'\r\n\r\n// Module for unit conversions\r\nexport default class SVGNumber {\r\n  // Initialize\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  convert (unit) {\r\n    return new SVGNumber(this.value, unit)\r\n  }\r\n\r\n  // Divide number\r\n  divide (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this / number, this.unit || number.unit)\r\n  }\r\n\r\n  init (value, unit) {\r\n    unit = Array.isArray(value) ? value[1] : unit\r\n    value = Array.isArray(value) ? value[0] : value\r\n\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] === '%') {\r\n          this.value /= 100\r\n        } else if (unit[5] === 's') {\r\n          this.value *= 1000\r\n        }\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n    } else {\r\n      if (value instanceof SVGNumber) {\r\n        this.value = value.valueOf()\r\n        this.unit = value.unit\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Subtract number\r\n  minus (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this - number, this.unit || number.unit)\r\n  }\r\n\r\n  // Add number\r\n  plus (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this + number, this.unit || number.unit)\r\n  }\r\n\r\n  // Multiply number\r\n  times (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this * number, this.unit || number.unit)\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.value, this.unit ]\r\n  }\r\n\r\n  toJSON () {\r\n    return this.toString()\r\n  }\r\n\r\n  toString () {\r\n    return (this.unit === '%'\n      ? ~~(this.value * 1e8) / 1e6\r\n      : this.unit === 's'\n        ? this.value / 1e3\r\n        : this.value\r\n    ) + this.unit\r\n  }\r\n\r\n  valueOf () {\r\n    return this.value\r\n  }\r\n\r\n}\r\n", "import { attrs as defaults } from './defaults.js'\r\nimport { isNumber } from './regex.js'\r\nimport Color from '../../types/Color.js'\r\nimport SVGArray from '../../types/SVGArray.js'\r\nimport SVGNumber from '../../types/SVGNumber.js'\r\n\r\nconst hooks = []\r\nexport function registerAttrHook (fn) {\r\n  hooks.push(fn)\r\n}\r\n\r\n// Set svg element attribute\r\nexport default function attr (attr, val, ns) {\r\n  // act as full getter\r\n  if (attr == null) {\r\n    // get an object of attributes\r\n    attr = {}\r\n    val = this.node.attributes\r\n\r\n    for (const node of val) {\r\n      attr[node.nodeName] = isNumber.test(node.nodeValue)\r\n        ? parseFloat(node.nodeValue)\r\n        : node.nodeValue\r\n    }\r\n\r\n    return attr\r\n  } else if (attr instanceof Array) {\r\n    // loop through array and get all values\r\n    return attr.reduce((last, curr) => {\r\n      last[curr] = this.attr(curr)\r\n      return last\r\n    }, {})\r\n  } else if (typeof attr === 'object' && attr.constructor === Object) {\r\n    // apply every attribute individually if an object is passed\r\n    for (val in attr) this.attr(val, attr[val])\r\n  } else if (val === null) {\r\n    // remove value\r\n    this.node.removeAttribute(attr)\r\n  } else if (val == null) {\r\n    // act as a getter if the first and only argument is not an object\r\n    val = this.node.getAttribute(attr)\r\n    return val == null\n      ? defaults[attr]\r\n      : isNumber.test(val)\n        ? parseFloat(val)\r\n        : val\r\n  } else {\r\n    // Loop through hooks and execute them to convert value\r\n    val = hooks.reduce((_val, hook) => {\r\n      return hook(attr, _val, this)\r\n    }, val)\r\n\r\n    // ensure correct numeric values (also accepts NaN and Infinity)\r\n    if (typeof val === 'number') {\r\n      val = new SVGNumber(val)\r\n    } else if (Color.isColor(val)) {\r\n      // ensure full hex color\r\n      val = new Color(val)\r\n    } else if (val.constructor === Array) {\r\n      // Check for plain arrays and parse array values\r\n      val = new SVGArray(val)\r\n    }\r\n\r\n    // if the passed attribute is leading...\r\n    if (attr === 'leading') {\r\n      // ... call the leading method instead\r\n      if (this.leading) {\r\n        this.leading(val)\r\n      }\r\n    } else {\r\n      // set given attribute on node\r\n      typeof ns === 'string'\n        ? this.node.setAttributeNS(ns, attr, val.toString())\r\n        : this.node.setAttribute(attr, val.toString())\r\n    }\r\n\r\n    // rebuild if required\r\n    if (this.rebuild && (attr === 'font-size' || attr === 'x')) {\r\n      this.rebuild()\r\n    }\r\n  }\r\n\r\n  return this\r\n}\r\n", "import {\r\n  adopt,\r\n  assignNewId,\r\n  eid,\r\n  extend,\r\n  makeInstance,\r\n  create,\r\n  register\r\n} from '../utils/adopter.js'\r\nimport { find, findOne } from '../modules/core/selector.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { map } from '../utils/utils.js'\r\nimport { svg, html } from '../modules/core/namespaces.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\nimport List from '../types/List.js'\r\nimport attr from '../modules/core/attr.js'\r\n\r\nexport default class Dom extends EventTarget {\r\n  constructor (node, attrs) {\r\n    super()\r\n    this.node = node\r\n    this.type = node.nodeName\r\n\r\n    if (attrs && node !== attrs) {\r\n      this.attr(attrs)\r\n    }\r\n  }\r\n\r\n  // Add given element at a position\r\n  add (element, i) {\r\n    element = makeInstance(element)\r\n\r\n    // If non-root svg nodes are added we have to remove their namespaces\r\n    if (element.removeNamespace && this.node instanceof globals.window.SVGElement) {\r\n      element.removeNamespace()\r\n    }\r\n\r\n    if (i == null) {\r\n      this.node.appendChild(element.node)\r\n    } else if (element.node !== this.node.childNodes[i]) {\r\n      this.node.insertBefore(element.node, this.node.childNodes[i])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Add element to given container and return self\r\n  addTo (parent, i) {\r\n    return makeInstance(parent).put(this, i)\r\n  }\r\n\r\n  // Returns all child elements\r\n  children () {\r\n    return new List(map(this.node.children, function (node) {\r\n      return adopt(node)\r\n    }))\r\n  }\r\n\r\n  // Remove all elements in this container\r\n  clear () {\r\n    // remove children\r\n    while (this.node.hasChildNodes()) {\r\n      this.node.removeChild(this.node.lastChild)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Clone element\r\n  clone (deep = true) {\r\n    // write dom data to the dom so the clone can pickup the data\r\n    this.writeDataToDom()\r\n\r\n    // clone element and assign new id\r\n    return new this.constructor(assignNewId(this.node.cloneNode(deep)))\r\n  }\r\n\r\n  // Iterates over all children and invokes a given block\r\n  each (block, deep) {\r\n    const children = this.children()\r\n    let i, il\r\n\r\n    for (i = 0, il = children.length; i < il; i++) {\r\n      block.apply(children[i], [ i, children ])\r\n\r\n      if (deep) {\r\n        children[i].each(block, deep)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  element (nodeName, attrs) {\r\n    return this.put(new Dom(create(nodeName), attrs))\r\n  }\r\n\r\n  // Get first child\r\n  first () {\r\n    return adopt(this.node.firstChild)\r\n  }\r\n\r\n  // Get a element at the given index\r\n  get (i) {\r\n    return adopt(this.node.childNodes[i])\r\n  }\r\n\r\n  getEventHolder () {\r\n    return this.node\r\n  }\r\n\r\n  getEventTarget () {\r\n    return this.node\r\n  }\r\n\r\n  // Checks if the given element is a child\r\n  has (element) {\r\n    return this.index(element) >= 0\r\n  }\r\n\r\n  html (htmlOrFn, outerHTML) {\r\n    return this.xml(htmlOrFn, outerHTML, html)\r\n  }\r\n\r\n  // Get / set id\r\n  id (id) {\r\n    // generate new id if no id set\r\n    if (typeof id === 'undefined' && !this.node.id) {\r\n      this.node.id = eid(this.type)\r\n    }\r\n\r\n    // don't set directly with this.node.id to make `null` work correctly\r\n    return this.attr('id', id)\r\n  }\r\n\r\n  // Gets index of given element\r\n  index (element) {\r\n    return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n  }\r\n\r\n  // Get the last child\r\n  last () {\r\n    return adopt(this.node.lastChild)\r\n  }\r\n\r\n  // matches the element vs a css selector\r\n  matches (selector) {\r\n    const el = this.node\r\n    const matcher = el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector || null\r\n    return matcher && matcher.call(el, selector)\r\n  }\r\n\r\n  // Returns the parent element instance\r\n  parent (type) {\r\n    let parent = this\r\n\r\n    // check for parent\r\n    if (!parent.node.parentNode) return null\r\n\r\n    // get parent element\r\n    parent = adopt(parent.node.parentNode)\r\n\r\n    if (!type) return parent\r\n\r\n    // loop trough ancestors if type is given\r\n    do {\r\n      if (typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n    } while ((parent = adopt(parent.node.parentNode)))\r\n\r\n    return parent\r\n  }\r\n\r\n  // Basically does the same as `add()` but returns the added element instead\r\n  put (element, i) {\r\n    element = makeInstance(element)\r\n    this.add(element, i)\r\n    return element\r\n  }\r\n\r\n  // Add element to given container and return container\r\n  putIn (parent, i) {\r\n    return makeInstance(parent).add(this, i)\r\n  }\r\n\r\n  // Remove element\r\n  remove () {\r\n    if (this.parent()) {\r\n      this.parent().removeElement(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Remove a given child\r\n  removeElement (element) {\r\n    this.node.removeChild(element.node)\r\n\r\n    return this\r\n  }\r\n\r\n  // Replace this with element\r\n  replace (element) {\r\n    element = makeInstance(element)\r\n\r\n    if (this.node.parentNode) {\r\n      this.node.parentNode.replaceChild(element.node, this.node)\r\n    }\r\n\r\n    return element\r\n  }\r\n\r\n  round (precision = 2, map = null) {\r\n    const factor = 10 ** precision\r\n    const attrs = this.attr(map)\r\n\r\n    for (const i in attrs) {\r\n      if (typeof attrs[i] === 'number') {\r\n        attrs[i] = Math.round(attrs[i] * factor) / factor\r\n      }\r\n    }\r\n\r\n    this.attr(attrs)\r\n    return this\r\n  }\r\n\r\n  // Import / Export raw svg\r\n  svg (svgOrFn, outerSVG) {\r\n    return this.xml(svgOrFn, outerSVG, svg)\r\n  }\r\n\r\n  // Return id on string conversion\r\n  toString () {\r\n    return this.id()\r\n  }\r\n\r\n  words (text) {\r\n    // This is faster than removing all children and adding a new one\r\n    this.node.textContent = text\r\n    return this\r\n  }\r\n\r\n  wrap (node) {\r\n    const parent = this.parent()\r\n\r\n    if (!parent) {\r\n      return this.addTo(node)\r\n    }\r\n\r\n    const position = parent.index(this)\r\n    return parent.put(node, position).put(this)\r\n  }\r\n\r\n  // write svgjs data to the dom\r\n  writeDataToDom () {\r\n    // dump variables recursively\r\n    this.each(function () {\r\n      this.writeDataToDom()\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  // Import / Export raw svg\r\n  xml (xmlOrFn, outerXML, ns) {\r\n    if (typeof xmlOrFn === 'boolean') {\r\n      ns = outerXML\r\n      outerXML = xmlOrFn\r\n      xmlOrFn = null\r\n    }\r\n\r\n    // act as getter if no svg string is given\r\n    if (xmlOrFn == null || typeof xmlOrFn === 'function') {\r\n      // The default for exports is, that the outerNode is included\r\n      outerXML = outerXML == null ? true : outerXML\r\n\r\n      // write svgjs data to the dom\r\n      this.writeDataToDom()\r\n      let current = this\r\n\r\n      // An export modifier was passed\r\n      if (xmlOrFn != null) {\r\n        current = adopt(current.node.cloneNode(true))\r\n\r\n        // If the user wants outerHTML we need to process this node, too\r\n        if (outerXML) {\r\n          const result = xmlOrFn(current)\r\n          current = result || current\r\n\r\n          // The user does not want this node? Well, then he gets nothing\r\n          if (result === false) return ''\r\n        }\r\n\r\n        // Deep loop through all children and apply modifier\r\n        current.each(function () {\r\n          const result = xmlOrFn(this)\r\n          const _this = result || this\r\n\r\n          // If modifier returns false, discard node\r\n          if (result === false) {\r\n            this.remove()\r\n\r\n            // If modifier returns new node, use it\r\n          } else if (result && this !== _this) {\r\n            this.replace(_this)\r\n          }\r\n        }, true)\r\n      }\r\n\r\n      // Return outer or inner content\r\n      return outerXML\r\n        ? current.node.outerHTML\r\n        : current.node.innerHTML\r\n    }\r\n\r\n    // Act as setter if we got a string\r\n\r\n    // The default for import is, that the current node is not replaced\r\n    outerXML = outerXML == null ? false : outerXML\r\n\r\n    // Create temporary holder\r\n    const well = create('wrapper', ns)\r\n    const fragment = globals.document.createDocumentFragment()\r\n\r\n    // Dump raw svg\r\n    well.innerHTML = xmlOrFn\r\n\r\n    // Transplant nodes into the fragment\r\n    for (let len = well.children.length; len--;) {\r\n      fragment.appendChild(well.firstElementChild)\r\n    }\r\n\r\n    const parent = this.parent()\r\n\r\n    // Add the whole fragment at once\r\n    return outerXML\r\n      ? this.replace(fragment) && parent\r\n      : this.add(fragment)\r\n  }\r\n}\r\n\r\nextend(Dom, { attr, find, findOne })\r\nregister(Dom, 'Dom')\r\n", "import { bbox, rbox, inside } from '../types/Box.js'\nimport { ctm, screenCTM } from '../types/Matrix.js'\nimport {\n  extend,\n  getClass,\n  makeInstance,\n  register,\n  root\n} from '../utils/adopter.js'\nimport { globals } from '../utils/window.js'\nimport { point } from '../types/Point.js'\nimport { proportionalSize } from '../utils/utils.js'\nimport { reference } from '../modules/core/regex.js'\nimport Dom from './Dom.js'\nimport List from '../types/List.js'\nimport SVGNumber from '../types/SVGNumber.js'\n\nexport default class Element extends Dom {\n  constructor (node, attrs) {\n    super(node, attrs)\n\n    // initialize data object\n    this.dom = {}\n\n    // create circular reference\n    this.node.instance = this\n\n    if (node.hasAttribute('svgjs:data')) {\n      // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\n      this.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\n    }\n  }\n\n  // Move element by its center\n  center (x, y) {\n    return this.cx(x).cy(y)\n  }\n\n  // Move by center over x-axis\n  cx (x) {\n    return x == null\n      ? this.x() + this.width() / 2\n      : this.x(x - this.width() / 2)\n  }\n\n  // Move by center over y-axis\n  cy (y) {\n    return y == null\n      ? this.y() + this.height() / 2\n      : this.y(y - this.height() / 2)\n  }\n\n  // Get defs\n  defs () {\n    const root = this.root()\n    return root && root.defs()\n  }\n\n  // Relative move over x and y axes\n  dmove (x, y) {\n    return this.dx(x).dy(y)\n  }\n\n  // Relative move over x axis\n  dx (x = 0) {\n    return this.x(new SVGNumber(x).plus(this.x()))\n  }\n\n  // Relative move over y axis\n  dy (y = 0) {\n    return this.y(new SVGNumber(y).plus(this.y()))\n  }\n\n  getEventHolder () {\n    return this\n  }\n\n  // Set height of element\n  height (height) {\n    return this.attr('height', height)\n  }\n\n  // Move element to given x and y values\n  move (x, y) {\n    return this.x(x).y(y)\n  }\n\n  // return array of all ancestors of given type up to the root svg\n  parents (until = this.root()) {\n    const isSelector = typeof until === 'string'\n    if (!isSelector) {\n      until = makeInstance(until)\n    }\n    const parents = new List()\n    let parent = this\n\n    while (\n      (parent = parent.parent())\n      && parent.node !== globals.document\n      && parent.nodeName !== '#document-fragment') {\n\n      parents.push(parent)\n\n      if (!isSelector && (parent.node === until.node)) {\n        break\n      }\n      if (isSelector && parent.matches(until)) {\n        break\n      }\n      if (parent.node === this.root().node) {\n        // We worked our way to the root and didn't match `until`\n        return null\n      }\n    }\n\n    return parents\n  }\n\n  // Get referenced element form attribute value\n  reference (attr) {\n    attr = this.attr(attr)\n    if (!attr) return null\n\n    const m = (attr + '').match(reference)\n    return m ? makeInstance(m[1]) : null\n  }\n\n  // Get parent document\n  root () {\n    const p = this.parent(getClass(root))\n    return p && p.root()\n  }\n\n  // set given data to the elements data property\n  setData (o) {\n    this.dom = o\n    return this\n  }\n\n  // Set element size to given width and height\n  size (width, height) {\n    const p = proportionalSize(this, width, height)\n\n    return this\n      .width(new SVGNumber(p.width))\n      .height(new SVGNumber(p.height))\n  }\n\n  // Set width of element\n  width (width) {\n    return this.attr('width', width)\n  }\n\n  // write svgjs data to the dom\n  writeDataToDom () {\n    // remove previously set data\n    this.node.removeAttribute('svgjs:data')\n\n    if (Object.keys(this.dom).length) {\n      this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\n    }\n\n    return super.writeDataToDom()\n  }\n\n  // Move over x-axis\n  x (x) {\n    return this.attr('x', x)\n  }\n\n  // Move over y-axis\n  y (y) {\n    return this.attr('y', y)\n  }\n}\n\nextend(Element, {\n  bbox, rbox, inside, point, ctm, screenCTM\n})\n\nregister(Element, 'Element')\n", "import { registerMethods } from '../../utils/methods.js'\r\nimport Color from '../../types/Color.js'\r\nimport Element from '../../elements/Element.js'\r\nimport Matrix from '../../types/Matrix.js'\r\nimport Point from '../../types/Point.js'\r\nimport SVGNumber from '../../types/SVGNumber.js'\r\n\r\n// Define list of available attributes for stroke and fill\r\nconst sugar = {\r\n  stroke: [ 'color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset' ],\r\n  fill: [ 'color', 'opacity', 'rule' ],\r\n  prefix: function (t, a) {\r\n    return a === 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;[ 'fill', 'stroke' ].forEach(function (m) {\r\n  const extension = {}\r\n  let i\r\n\r\n  extension[m] = function (o) {\r\n    if (typeof o === 'undefined') {\r\n      return this.attr(m)\r\n    }\r\n    if (typeof o === 'string' || o instanceof Color || Color.isRgb(o) || (o instanceof Element)) {\r\n      this.attr(m, o)\r\n    } else {\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--) {\r\n        if (o[sugar[m][i]] != null) {\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n        }\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  registerMethods([ 'Element', 'Runner' ], extension)\r\n})\r\n\r\nregisterMethods([ 'Element', 'Runner' ], {\r\n  // Let the user set the matrix directly\r\n  matrix: function (mat, b, c, d, e, f) {\r\n    // Act as a getter\r\n    if (mat == null) {\r\n      return new Matrix(this)\r\n    }\r\n\r\n    // Act as a setter, the user can pass a matrix or a set of numbers\r\n    return this.attr('transform', new Matrix(mat, b, c, d, e, f))\r\n  },\r\n\r\n  // Map rotation to transform\r\n  rotate: function (angle, cx, cy) {\r\n    return this.transform({ rotate: angle, ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map skew to transform\r\n  skew: function (x, y, cx, cy) {\r\n    return arguments.length === 1 || arguments.length === 3\r\n      ? this.transform({ skew: x, ox: y, oy: cx }, true)\r\n      : this.transform({ skew: [ x, y ], ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  shear: function (lam, cx, cy) {\r\n    return this.transform({ shear: lam, ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map scale to transform\r\n  scale: function (x, y, cx, cy) {\r\n    return arguments.length === 1 || arguments.length === 3\r\n      ? this.transform({ scale: x, ox: y, oy: cx }, true)\r\n      : this.transform({ scale: [ x, y ], ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map translate to transform\r\n  translate: function (x, y) {\r\n    return this.transform({ translate: [ x, y ] }, true)\r\n  },\r\n\r\n  // Map relative translations to transform\r\n  relative: function (x, y) {\r\n    return this.transform({ relative: [ x, y ] }, true)\r\n  },\r\n\r\n  // Map flip to transform\r\n  flip: function (direction = 'both', origin = 'center') {\r\n    if ('xybothtrue'.indexOf(direction) === -1) {\r\n      origin = direction\r\n      direction = 'both'\r\n    }\r\n\r\n    return this.transform({ flip: direction, origin: origin }, true)\r\n  },\r\n\r\n  // Opacity\r\n  opacity: function (value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n})\r\n\r\nregisterMethods('radius', {\r\n  // Add x and y radius\r\n  radius: function (x, y = x) {\r\n    const type = (this._element || this).type\r\n    return type === 'radialGradient'\r\n      ? this.attr('r', new SVGNumber(x))\r\n      : this.rx(x).ry(y)\r\n  }\r\n})\r\n\r\nregisterMethods('Path', {\r\n  // Get path length\r\n  length: function () {\r\n    return this.node.getTotalLength()\r\n  },\r\n  // Get point at length\r\n  pointAt: function (length) {\r\n    return new Point(this.node.getPointAtLength(length))\r\n  }\r\n})\r\n\r\nregisterMethods([ 'Element', 'Runner' ], {\r\n  // Set font\r\n  font: function (a, v) {\r\n    if (typeof a === 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n      return this\r\n    }\r\n\r\n    return a === 'leading'\r\n      ? this.leading(v)\r\n      : a === 'anchor'\r\n        ? this.attr('text-anchor', v)\r\n        : a === 'size' || a === 'family' || a === 'weight' || a === 'stretch' || a === 'variant' || a === 'style'\r\n          ? this.attr('font-' + a, v)\r\n          : this.attr(a, v)\r\n  }\r\n})\r\n\r\n// Add events to elements\r\nconst methods = [ 'click',\r\n  'dblclick',\r\n  'mousedown',\r\n  'mouseup',\r\n  'mouseover',\r\n  'mouseout',\r\n  'mousemove',\r\n  'mouseenter',\r\n  'mouseleave',\r\n  'touchstart',\r\n  'touchmove',\r\n  'touchleave',\r\n  'touchend',\r\n  'touchcancel' ].reduce(function (last, event) {\r\n  // add event to Element\r\n  const fn = function (f) {\r\n    if (f === null) {\r\n      this.off(event)\r\n    } else {\r\n      this.on(event, f)\r\n    }\r\n    return this\r\n  }\r\n\r\n  last[event] = fn\r\n  return last\r\n}, {})\r\n\r\nregisterMethods('Element', methods)\r\n", "import { getOrigin } from '../../utils/utils.js'\r\nimport { delimiter, transforms } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\nimport Matrix from '../../types/Matrix.js'\r\n\r\n// Reset all transformations\r\nexport function untransform () {\r\n  return this.attr('transform', null)\r\n}\r\n\r\n// merge the whole transformation chain into one matrix and returns it\r\nexport function matrixify () {\r\n  const matrix = (this.attr('transform') || '')\r\n    // split transformations\r\n    .split(transforms).slice(0, -1).map(function (str) {\r\n      // generate key => value pairs\r\n      const kv = str.trim().split('(')\r\n      return [ kv[0],\r\n        kv[1].split(delimiter)\r\n          .map(function (str) {\r\n            return parseFloat(str)\r\n          })\r\n      ]\r\n    })\r\n    .reverse()\r\n    // merge every transformation into one matrix\r\n    .reduce(function (matrix, transform) {\r\n      if (transform[0] === 'matrix') {\r\n        return matrix.lmultiply(Matrix.fromArray(transform[1]))\r\n      }\r\n      return matrix[transform[0]].apply(matrix, transform[1])\r\n    }, new Matrix())\r\n\r\n  return matrix\r\n}\r\n\r\n// add an element to another parent without changing the visual representation on the screen\r\nexport function toParent (parent, i) {\r\n  if (this === parent) return this\r\n  const ctm = this.screenCTM()\r\n  const pCtm = parent.screenCTM().inverse()\r\n\r\n  this.addTo(parent, i).untransform().transform(pCtm.multiply(ctm))\r\n\r\n  return this\r\n}\r\n\r\n// same as above with parent equals root-svg\r\nexport function toRoot (i) {\r\n  return this.toParent(this.root(), i)\r\n}\r\n\r\n// Add transformations\r\nexport function transform (o, relative) {\r\n  // Act as a getter if no object was passed\r\n  if (o == null || typeof o === 'string') {\r\n    const decomposed = new Matrix(this).decompose()\r\n    return o == null ? decomposed : decomposed[o]\r\n  }\r\n\r\n  if (!Matrix.isMatrixLike(o)) {\r\n    // Set the origin according to the defined transform\r\n    o = { ...o, origin: getOrigin(o, this) }\r\n  }\r\n\r\n  // The user can pass a boolean, an Element or an Matrix or nothing\r\n  const cleanRelative = relative === true ? this : (relative || false)\r\n  const result = new Matrix(cleanRelative).transform(o)\r\n  return this.attr('transform', result)\r\n}\r\n\r\nregisterMethods('Element', {\r\n  untransform, matrixify, toParent, toRoot, transform\r\n})\r\n", "import { register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class Container extends Element {\r\n  flatten (parent = this, index) {\r\n    this.each(function () {\r\n      if (this instanceof Container) {\r\n        return this.flatten().ungroup()\r\n      }\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  ungroup (parent = this.parent(), index = parent.index(this)) {\r\n    // when parent != this, we want append all elements to the end\r\n    index = index === -1 ? parent.children().length : index\r\n\r\n    this.each(function (i, children) {\r\n      // reverse each\r\n      return children[children.length - i - 1].toParent(parent, index)\r\n    })\r\n\r\n    return this.remove()\r\n  }\r\n}\r\n\r\nregister(Container, 'Container')\r\n", "import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Defs extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('defs', node), attrs)\r\n  }\r\n\r\n  flatten () {\r\n    return this\r\n  }\r\n\r\n  ungroup () {\r\n    return this\r\n  }\r\n}\r\n\r\nregister(Defs, 'Defs')\r\n", "import { register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class Shape extends Element {}\r\n\r\nregister(Shape, 'Shape')\r\n", "import SVGNumber from '../../types/SVGNumber.js'\r\n\r\n// Radius x value\r\nexport function rx (rx) {\r\n  return this.attr('rx', rx)\r\n}\r\n\r\n// Radius y value\r\nexport function ry (ry) {\r\n  return this.attr('ry', ry)\r\n}\r\n\r\n// Move over x-axis\r\nexport function x (x) {\r\n  return x == null\r\n    ? this.cx() - this.rx()\r\n    : this.cx(x + this.rx())\r\n}\r\n\r\n// Move over y-axis\r\nexport function y (y) {\r\n  return y == null\r\n    ? this.cy() - this.ry()\r\n    : this.cy(y + this.ry())\r\n}\r\n\r\n// Move by center over x-axis\r\nexport function cx (x) {\r\n  return this.attr('cx', x)\r\n}\r\n\r\n// Move by center over y-axis\r\nexport function cy (y) {\r\n  return this.attr('cy', y)\r\n}\r\n\r\n// Set width of element\r\nexport function width (width) {\r\n  return width == null\r\n    ? this.rx() * 2\r\n    : this.rx(new SVGNumber(width).divide(2))\r\n}\r\n\r\n// Set height of element\r\nexport function height (height) {\r\n  return height == null\r\n    ? this.ry() * 2\r\n    : this.ry(new SVGNumber(height).divide(2))\r\n}\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport * as circled from '../modules/core/circled.js'\r\n\r\nexport default class Ellipse extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('ellipse', node), attrs)\r\n  }\r\n\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n\r\n    return this\r\n      .rx(new SVGNumber(p.width).divide(2))\r\n      .ry(new SVGNumber(p.height).divide(2))\r\n  }\r\n}\r\n\r\nextend(Ellipse, circled)\r\n\r\nregisterMethods('Container', {\r\n  // Create an ellipse\r\n  ellipse: wrapWithAttrCheck(function (width = 0, height = width) {\r\n    return this.put(new Ellipse()).size(width, height).move(0, 0)\r\n  })\r\n})\r\n\r\nregister(Ellipse, 'Ellipse')\r\n", "import Dom from './Dom.js'\nimport { globals } from '../utils/window.js'\nimport { register, create } from '../utils/adopter.js'\n\nclass Fragment extends Dom {\n  constructor (node = globals.document.createDocumentFragment()) {\n    super(node)\n  }\n\n  // Import / Export raw xml\n  xml (xmlOrFn, outerXML, ns) {\n    if (typeof xmlOrFn === 'boolean') {\n      ns = outerXML\n      outerXML = xmlOrFn\n      xmlOrFn = null\n    }\n\n    // because this is a fragment we have to put all elements into a wrapper first\n    // before we can get the innerXML from it\n    if (xmlOrFn == null || typeof xmlOrFn === 'function') {\n      const wrapper = new Dom(create('wrapper', ns))\n      wrapper.add(this.node.cloneNode(true))\n\n      return wrapper.xml(false, ns)\n    }\n\n    // Act as setter if we got a string\n    return super.xml(xmlOrFn, false, ns)\n  }\n\n}\n\nregister(Fragment, 'Fragment')\n\nexport default Fragment\n", "import SVGNumber from '../../types/SVGNumber.js'\r\n\r\nexport function from (x, y) {\r\n  return (this._element || this).type === 'radialGradient'\r\n    ? this.attr({ fx: new SVGNumber(x), fy: new SVGNumber(y) })\r\n    : this.attr({ x1: new SVGNumber(x), y1: new SVGNumber(y) })\r\n}\r\n\r\nexport function to (x, y) {\r\n  return (this._element || this).type === 'radialGradient'\r\n    ? this.attr({ cx: new SVGNumber(x), cy: new SVGNumber(y) })\r\n    : this.attr({ x2: new SVGNumber(x), y2: new SVGNumber(y) })\r\n}\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Box from '../types/Box.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\nimport * as gradiented from '../modules/core/gradiented.js'\r\n\r\nexport default class Gradient extends Container {\r\n  constructor (type, attrs) {\r\n    super(\r\n      nodeOrNew(type + 'Gradient', typeof type === 'string' ? null : type),\r\n      attrs\r\n    )\r\n  }\r\n\r\n  // custom attr to handle transform\r\n  attr (a, b, c) {\r\n    if (a === 'transform') a = 'gradientTransform'\r\n    return super.attr(a, b, c)\r\n  }\r\n\r\n  bbox () {\r\n    return new Box()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [fill*=\"' + this.id() + '\"]')\r\n  }\r\n\r\n  // Alias string conversion to fill\r\n  toString () {\r\n    return this.url()\r\n  }\r\n\r\n  // Update gradient\r\n  update (block) {\r\n    // remove all stops\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Return the fill id\r\n  url () {\r\n    return 'url(\"#' + this.id() + '\")'\r\n  }\r\n}\r\n\r\nextend(Gradient, gradiented)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create gradient element in defs\r\n    gradient (...args) {\r\n      return this.defs().gradient(...args)\r\n    }\r\n  },\r\n  // define gradient\r\n  Defs: {\r\n    gradient: wrapWithAttrCheck(function (type, block) {\r\n      return this.put(new Gradient(type)).update(block)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Gradient, 'Gradient')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Box from '../types/Box.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class Pattern extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('pattern', node), attrs)\r\n  }\r\n\r\n  // custom attr to handle transform\r\n  attr (a, b, c) {\r\n    if (a === 'transform') a = 'patternTransform'\r\n    return super.attr(a, b, c)\r\n  }\r\n\r\n  bbox () {\r\n    return new Box()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [fill*=\"' + this.id() + '\"]')\r\n  }\r\n\r\n  // Alias string conversion to fill\r\n  toString () {\r\n    return this.url()\r\n  }\r\n\r\n  // Update pattern by rebuilding\r\n  update (block) {\r\n    // remove content\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Return the fill id\r\n  url () {\r\n    return 'url(\"#' + this.id() + '\")'\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create pattern element in defs\r\n    pattern (...args) {\r\n      return this.defs().pattern(...args)\r\n    }\r\n  },\r\n  Defs: {\r\n    pattern: wrapWithAttrCheck(function (width, height, block) {\r\n      return this.put(new Pattern()).update(block).attr({\r\n        x: 0,\r\n        y: 0,\r\n        width: width,\r\n        height: height,\r\n        patternUnits: 'userSpaceOnUse'\r\n      })\r\n    })\r\n  }\r\n})\r\n\r\nregister(Pattern, 'Pattern')\r\n", "import { isImage } from '../modules/core/regex.js'\r\nimport { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { off, on } from '../modules/core/event.js'\r\nimport { registerAttrHook } from '../modules/core/attr.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Pattern from './Pattern.js'\r\nimport Shape from './Shape.js'\r\nimport { globals } from '../utils/window.js'\r\n\r\nexport default class Image extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('image', node), attrs)\r\n  }\r\n\r\n  // (re)load image\r\n  load (url, callback) {\r\n    if (!url) return this\r\n\r\n    const img = new globals.window.Image()\r\n\r\n    on(img, 'load', function (e) {\r\n      const p = this.parent(Pattern)\r\n\r\n      // ensure image size\r\n      if (this.width() === 0 && this.height() === 0) {\r\n        this.size(img.width, img.height)\r\n      }\r\n\r\n      if (p instanceof Pattern) {\r\n        // ensure pattern size if not set\r\n        if (p.width() === 0 && p.height() === 0) {\r\n          p.size(this.width(), this.height())\r\n        }\r\n      }\r\n\r\n      if (typeof callback === 'function') {\r\n        callback.call(this, e)\r\n      }\r\n    }, this)\r\n\r\n    on(img, 'load error', function () {\r\n      // dont forget to unbind memory leaking events\r\n      off(img)\r\n    })\r\n\r\n    return this.attr('href', (img.src = url), xlink)\r\n  }\r\n}\r\n\r\nregisterAttrHook(function (attr, val, _this) {\r\n  // convert image fill and stroke to patterns\r\n  if (attr === 'fill' || attr === 'stroke') {\r\n    if (isImage.test(val)) {\r\n      val = _this.root().defs().image(val)\r\n    }\r\n  }\r\n\r\n  if (val instanceof Image) {\r\n    val = _this.root().defs().pattern(0, 0, (pattern) => {\r\n      pattern.add(val)\r\n    })\r\n  }\r\n\r\n  return val\r\n})\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // create image element, load image and set its size\r\n    image: wrapWithAttrCheck(function (source, callback) {\r\n      return this.put(new Image()).size(0, 0).load(source, callback)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Image, 'Image')\r\n", "import { delimiter } from '../modules/core/regex.js'\r\nimport SVGArray from './SVGArray.js'\r\nimport Box from './Box.js'\r\nimport Matrix from './Matrix.js'\r\n\r\nexport default class PointArray extends SVGArray {\r\n  // Get bounding box of points\r\n  bbox () {\r\n    let maxX = -Infinity\r\n    let maxY = -Infinity\r\n    let minX = Infinity\r\n    let minY = Infinity\r\n    this.forEach(function (el) {\r\n      maxX = Math.max(el[0], maxX)\r\n      maxY = Math.max(el[1], maxY)\r\n      minX = Math.min(el[0], minX)\r\n      minY = Math.min(el[1], minY)\r\n    })\r\n    return new Box(minX, minY, maxX - minX, maxY - minY)\r\n  }\r\n\r\n  // Move point string\r\n  move (x, y) {\r\n    const box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      for (let i = this.length - 1; i >= 0; i--) {\r\n        this[i] = [ this[i][0] + x, this[i][1] + y ]\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Parse point string and flat array\r\n  parse (array = [ 0, 0 ]) {\r\n    const points = []\r\n\r\n    // if it is an array, we flatten it and therefore clone it to 1 depths\r\n    if (array instanceof Array) {\r\n      array = Array.prototype.concat.apply([], array)\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples\r\n    for (let i = 0, len = array.length; i < len; i = i + 2) {\r\n      points.push([ array[i], array[i + 1] ])\r\n    }\r\n\r\n    return points\r\n  }\r\n\r\n  // Resize poly string\r\n  size (width, height) {\r\n    let i\r\n    const box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.length - 1; i >= 0; i--) {\r\n      if (box.width) this[i][0] = ((this[i][0] - box.x) * width) / box.width + box.x\r\n      if (box.height) this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Convert array to line object\r\n  toLine () {\r\n    return {\r\n      x1: this[0][0],\r\n      y1: this[0][1],\r\n      x2: this[1][0],\r\n      y2: this[1][1]\r\n    }\r\n  }\r\n\r\n  // Convert array to string\r\n  toString () {\r\n    const array = []\r\n    // convert to a poly point string\r\n    for (let i = 0, il = this.length; i < il; i++) {\r\n      array.push(this[i].join(','))\r\n    }\r\n\r\n    return array.join(' ')\r\n  }\r\n\r\n  transform (m) {\r\n    return this.clone().transformO(m)\r\n  }\r\n\r\n  // transform points with matrix (similar to Point.transform)\r\n  transformO (m) {\r\n    if (!Matrix.isMatrixLike(m)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    for (let i = this.length; i--;) {\r\n      // Perform the matrix multiplication\r\n      const [ x, y ] = this[i]\r\n      this[i][0] = m.a * x + m.c * y + m.e\r\n      this[i][1] = m.b * x + m.d * y + m.f\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n", "import PointArray from '../../types/PointArray.js'\r\n\r\nexport const MorphArray = PointArray\r\n\r\n// Move by left top corner over x-axis\r\nexport function x (x) {\r\n  return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n}\r\n\r\n// Move by left top corner over y-axis\r\nexport function y (y) {\r\n  return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n}\r\n\r\n// Set width of element\r\nexport function width (width) {\r\n  const b = this.bbox()\r\n  return width == null ? b.width : this.size(width, b.height)\r\n}\r\n\r\n// Set height of element\r\nexport function height (height) {\r\n  const b = this.bbox()\r\n  return height == null ? b.height : this.size(b.width, height)\r\n}\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\n\r\nexport default class Line extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('line', node), attrs)\r\n  }\r\n\r\n  // Get array\r\n  array () {\r\n    return new PointArray([\r\n      [ this.attr('x1'), this.attr('y1') ],\r\n      [ this.attr('x2'), this.attr('y2') ]\r\n    ])\r\n  }\r\n\r\n  // Move by left top corner\r\n  move (x, y) {\r\n    return this.attr(this.array().move(x, y).toLine())\r\n  }\r\n\r\n  // Overwrite native plot() method\r\n  plot (x1, y1, x2, y2) {\r\n    if (x1 == null) {\r\n      return this.array()\r\n    } else if (typeof y1 !== 'undefined') {\r\n      x1 = { x1, y1, x2, y2 }\r\n    } else {\r\n      x1 = new PointArray(x1).toLine()\r\n    }\r\n\r\n    return this.attr(x1)\r\n  }\r\n\r\n  // Set element size to given width and height\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n    return this.attr(this.array().size(p.width, p.height).toLine())\r\n  }\r\n}\r\n\r\nextend(Line, pointed)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a line element\r\n    line: wrapWithAttrCheck(function (...args) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a PointArray\r\n      return Line.prototype.plot.apply(\r\n        this.put(new Line())\r\n        , args[0] != null ? args : [ 0, 0, 0, 0 ]\r\n      )\r\n    })\r\n  }\r\n})\r\n\r\nregister(Line, 'Line')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Marker extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('marker', node), attrs)\r\n  }\r\n\r\n  // Set height of element\n  height (height) {\r\n    return this.attr('markerHeight', height)\r\n  }\n\n  orient (orient) {\r\n    return this.attr('orient', orient)\r\n  }\n\n  // Set marker refX and refY\n  ref (x, y) {\r\n    return this.attr('refX', x).attr('refY', y)\r\n  }\n\n  // Return the fill id\n  toString () {\r\n    return 'url(#' + this.id() + ')'\r\n  }\n\n  // Update marker\n  update (block) {\r\n    // remove all content\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\n\n  // Set width of element\r\n  width (width) {\r\n    return this.attr('markerWidth', width)\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    marker (...args) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(...args)\r\n    }\r\n  },\r\n  Defs: {\r\n    // Create marker\r\n    marker: wrapWithAttrCheck(function (width, height, block) {\r\n      // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n      return this.put(new Marker())\r\n        .size(width, height)\r\n        .ref(width / 2, height / 2)\r\n        .viewbox(0, 0, width, height)\r\n        .attr('orient', 'auto')\r\n        .update(block)\r\n    })\r\n  },\r\n  marker: {\r\n    // Create and attach markers\r\n    marker (marker, width, height, block) {\r\n      let attr = [ 'marker' ]\r\n\r\n      // Build attribute name\r\n      if (marker !== 'all') attr.push(marker)\r\n      attr = attr.join('-')\r\n\r\n      // Set marker attribute\r\n      marker = arguments[1] instanceof Marker\r\n        ? arguments[1]\r\n        : this.defs().marker(width, height, block)\r\n\r\n      return this.attr(attr, marker)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Marker, 'Marker')\r\n", "import { timeline } from '../modules/core/defaults.js'\r\nimport { extend } from '../utils/adopter.js'\r\n\r\n/***\r\nBase Class\r\n==========\r\nThe base stepper class that will be\r\n***/\r\n\r\nfunction makeSetterGetter (k, f) {\r\n  return function (v) {\r\n    if (v == null) return this[k]\r\n    this[k] = v\r\n    if (f) f.call(this)\r\n    return this\r\n  }\r\n}\r\n\r\nexport const easing = {\r\n  '-': function (pos) {\r\n    return pos\r\n  },\r\n  '<>': function (pos) {\r\n    return -Math.cos(pos * Math.PI) / 2 + 0.5\r\n  },\r\n  '>': function (pos) {\r\n    return Math.sin(pos * Math.PI / 2)\r\n  },\r\n  '<': function (pos) {\r\n    return -Math.cos(pos * Math.PI / 2) + 1\r\n  },\r\n  bezier: function (x1, y1, x2, y2) {\r\n    // see https://www.w3.org/TR/css-easing-1/#cubic-bezier-algo\r\n    return function (t) {\r\n      if (t < 0) {\r\n        if (x1 > 0) {\r\n          return y1 / x1 * t\r\n        } else if (x2 > 0) {\r\n          return y2 / x2 * t\r\n        } else {\r\n          return 0\r\n        }\r\n      } else if (t > 1) {\r\n        if (x2 < 1) {\r\n          return (1 - y2) / (1 - x2) * t + (y2 - x2) / (1 - x2)\r\n        } else if (x1 < 1) {\r\n          return (1 - y1) / (1 - x1) * t + (y1 - x1) / (1 - x1)\r\n        } else {\r\n          return 1\r\n        }\r\n      } else {\r\n        return 3 * t * (1 - t) ** 2 * y1 + 3 * t ** 2 * (1 - t) * y2 + t ** 3\r\n      }\r\n    }\r\n  },\r\n  // see https://www.w3.org/TR/css-easing-1/#step-timing-function-algo\r\n  steps: function (steps, stepPosition = 'end') {\r\n    // deal with \"jump-\" prefix\r\n    stepPosition = stepPosition.split('-').reverse()[0]\r\n\r\n    let jumps = steps\r\n    if (stepPosition === 'none') {\r\n      --jumps\r\n    } else if (stepPosition === 'both') {\r\n      ++jumps\r\n    }\r\n\r\n    // The beforeFlag is essentially useless\r\n    return (t, beforeFlag = false) => {\r\n      // Step is called currentStep in referenced url\r\n      let step = Math.floor(t * steps)\r\n      const jumping = (t * step) % 1 === 0\r\n\r\n      if (stepPosition === 'start' || stepPosition === 'both') {\r\n        ++step\r\n      }\r\n\r\n      if (beforeFlag && jumping) {\r\n        --step\r\n      }\r\n\r\n      if (t >= 0 && step < 0) {\r\n        step = 0\r\n      }\r\n\r\n      if (t <= 1 && step > jumps) {\r\n        step = jumps\r\n      }\r\n\r\n      return step / jumps\r\n    }\r\n  }\r\n}\r\n\r\nexport class Stepper {\r\n  done () {\r\n    return false\r\n  }\r\n}\r\n\r\n/***\r\nEasing Functions\r\n================\r\n***/\r\n\r\nexport class Ease extends Stepper {\r\n  constructor (fn = timeline.ease) {\r\n    super()\r\n    this.ease = easing[fn] || fn\r\n  }\r\n\r\n  step (from, to, pos) {\r\n    if (typeof from !== 'number') {\r\n      return pos < 1 ? from : to\r\n    }\r\n    return from + (to - from) * this.ease(pos)\r\n  }\r\n}\r\n\r\n/***\r\nController Types\r\n================\r\n***/\r\n\r\nexport class Controller extends Stepper {\r\n  constructor (fn) {\r\n    super()\r\n    this.stepper = fn\r\n  }\r\n\r\n  done (c) {\r\n    return c.done\r\n  }\n\n  step (current, target, dt, c) {\r\n    return this.stepper(current, target, dt, c)\r\n  }\r\n\r\n}\r\n\r\nfunction recalculate () {\r\n  // Apply the default parameters\r\n  const duration = (this._duration || 500) / 1000\r\n  const overshoot = this._overshoot || 0\r\n\r\n  // Calculate the PID natural response\r\n  const eps = 1e-10\r\n  const pi = Math.PI\r\n  const os = Math.log(overshoot / 100 + eps)\r\n  const zeta = -os / Math.sqrt(pi * pi + os * os)\r\n  const wn = 3.9 / (zeta * duration)\r\n\r\n  // Calculate the Spring values\r\n  this.d = 2 * zeta * wn\r\n  this.k = wn * wn\r\n}\r\n\r\nexport class Spring extends Controller {\r\n  constructor (duration = 500, overshoot = 0) {\r\n    super()\r\n    this.duration(duration)\r\n      .overshoot(overshoot)\r\n  }\r\n\r\n  step (current, target, dt, c) {\r\n    if (typeof current === 'string') return current\r\n    c.done = dt === Infinity\r\n    if (dt === Infinity) return target\r\n    if (dt === 0) return current\r\n\r\n    if (dt > 100) dt = 16\r\n\r\n    dt /= 1000\r\n\r\n    // Get the previous velocity\r\n    const velocity = c.velocity || 0\r\n\r\n    // Apply the control to get the new position and store it\r\n    const acceleration = -this.d * velocity - this.k * (current - target)\r\n    const newPosition = current\r\n      + velocity * dt\r\n      + acceleration * dt * dt / 2\r\n\r\n    // Store the velocity\r\n    c.velocity = velocity + acceleration * dt\r\n\r\n    // Figure out if we have converged, and if so, pass the value\r\n    c.done = Math.abs(target - newPosition) + Math.abs(velocity) < 0.002\r\n    return c.done ? target : newPosition\r\n  }\r\n}\r\n\r\nextend(Spring, {\r\n  duration: makeSetterGetter('_duration', recalculate),\r\n  overshoot: makeSetterGetter('_overshoot', recalculate)\r\n})\r\n\r\nexport class PID extends Controller {\r\n  constructor (p = 0.1, i = 0.01, d = 0, windup = 1000) {\r\n    super()\r\n    this.p(p).i(i).d(d).windup(windup)\r\n  }\r\n\r\n  step (current, target, dt, c) {\r\n    if (typeof current === 'string') return current\r\n    c.done = dt === Infinity\r\n\r\n    if (dt === Infinity) return target\r\n    if (dt === 0) return current\r\n\r\n    const p = target - current\r\n    let i = (c.integral || 0) + p * dt\r\n    const d = (p - (c.error || 0)) / dt\r\n    const windup = this._windup\r\n\r\n    // antiwindup\r\n    if (windup !== false) {\r\n      i = Math.max(-windup, Math.min(i, windup))\r\n    }\r\n\r\n    c.error = p\r\n    c.integral = i\r\n\r\n    c.done = Math.abs(p) < 0.001\r\n\r\n    return c.done ? target : current + (this.P * p + this.I * i + this.D * d)\r\n  }\r\n}\r\n\r\nextend(PID, {\r\n  windup: makeSetterGetter('_windup'),\r\n  p: makeSetterGetter('P'),\r\n  i: makeSetterGetter('I'),\r\n  d: makeSetterGetter('D')\r\n})\r\n", "import { isPathLetter } from '../modules/core/regex.js'\r\nimport Point from '../types/Point.js'\r\n\r\nconst segmentParameters = { M: 2, L: 2, H: 1, V: 1, C: 6, S: 4, Q: 4, T: 2, A: 7, Z: 0 }\r\n\r\nconst pathHandlers = {\r\n  M: function (c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return [ 'M', p.x, p.y ]\r\n  },\r\n  L: function (c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return [ 'L', c[0], c[1] ]\r\n  },\r\n  H: function (c, p) {\r\n    p.x = c[0]\r\n    return [ 'H', c[0] ]\r\n  },\r\n  V: function (c, p) {\r\n    p.y = c[0]\r\n    return [ 'V', c[0] ]\r\n  },\r\n  C: function (c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return [ 'C', c[0], c[1], c[2], c[3], c[4], c[5] ]\r\n  },\r\n  S: function (c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return [ 'S', c[0], c[1], c[2], c[3] ]\r\n  },\r\n  Q: function (c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return [ 'Q', c[0], c[1], c[2], c[3] ]\r\n  },\r\n  T: function (c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return [ 'T', c[0], c[1] ]\r\n  },\r\n  Z: function (c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return [ 'Z' ]\r\n  },\r\n  A: function (c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return [ 'A', c[0], c[1], c[2], c[3], c[4], c[5], c[6] ]\r\n  }\r\n}\r\n\r\nconst mlhvqtcsaz = 'mlhvqtcsaz'.split('')\r\n\r\nfor (let i = 0, il = mlhvqtcsaz.length; i < il; ++i) {\r\n  pathHandlers[mlhvqtcsaz[i]] = (function (i) {\r\n    return function (c, p, p0) {\r\n      if (i === 'H') c[0] = c[0] + p.x\r\n      else if (i === 'V') c[0] = c[0] + p.y\r\n      else if (i === 'A') {\r\n        c[5] = c[5] + p.x\r\n        c[6] = c[6] + p.y\r\n      } else {\r\n        for (let j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j % 2 ? p.y : p.x)\r\n        }\r\n      }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsaz[i].toUpperCase())\r\n}\r\n\r\nfunction makeAbsolut (parser) {\r\n  const command = parser.segment[0]\r\n  return pathHandlers[command](parser.segment.slice(1), parser.p, parser.p0)\r\n}\r\n\r\nfunction segmentComplete (parser) {\r\n  return parser.segment.length && parser.segment.length - 1 === segmentParameters[parser.segment[0].toUpperCase()]\r\n}\r\n\r\nfunction startNewSegment (parser, token) {\r\n  parser.inNumber && finalizeNumber(parser, false)\r\n  const pathLetter = isPathLetter.test(token)\r\n\r\n  if (pathLetter) {\r\n    parser.segment = [ token ]\r\n  } else {\r\n    const lastCommand = parser.lastCommand\r\n    const small = lastCommand.toLowerCase()\r\n    const isSmall = lastCommand === small\r\n    parser.segment = [ small === 'm' ? (isSmall ? 'l' : 'L') : lastCommand ]\r\n  }\r\n\r\n  parser.inSegment = true\r\n  parser.lastCommand = parser.segment[0]\r\n\r\n  return pathLetter\r\n}\r\n\r\nfunction finalizeNumber (parser, inNumber) {\r\n  if (!parser.inNumber) throw new Error('Parser Error')\r\n  parser.number && parser.segment.push(parseFloat(parser.number))\r\n  parser.inNumber = inNumber\r\n  parser.number = ''\r\n  parser.pointSeen = false\r\n  parser.hasExponent = false\r\n\r\n  if (segmentComplete(parser)) {\r\n    finalizeSegment(parser)\r\n  }\r\n}\r\n\r\nfunction finalizeSegment (parser) {\r\n  parser.inSegment = false\r\n  if (parser.absolute) {\r\n    parser.segment = makeAbsolut(parser)\r\n  }\r\n  parser.segments.push(parser.segment)\r\n}\r\n\r\nfunction isArcFlag (parser) {\r\n  if (!parser.segment.length) return false\r\n  const isArc = parser.segment[0].toUpperCase() === 'A'\r\n  const length = parser.segment.length\r\n\r\n  return isArc && (length === 4 || length === 5)\r\n}\r\n\r\nfunction isExponential (parser) {\r\n  return parser.lastToken.toUpperCase() === 'E'\r\n}\r\n\r\nexport function pathParser (d, toAbsolute = true) {\r\n\r\n  let index = 0\r\n  let token = ''\r\n  const parser = {\r\n    segment: [],\r\n    inNumber: false,\r\n    number: '',\r\n    lastToken: '',\r\n    inSegment: false,\r\n    segments: [],\r\n    pointSeen: false,\r\n    hasExponent: false,\r\n    absolute: toAbsolute,\r\n    p0: new Point(),\r\n    p: new Point()\r\n  }\r\n\r\n  while ((parser.lastToken = token, token = d.charAt(index++))) {\r\n    if (!parser.inSegment) {\r\n      if (startNewSegment(parser, token)) {\r\n        continue\r\n      }\r\n    }\r\n\r\n    if (token === '.') {\r\n      if (parser.pointSeen || parser.hasExponent) {\r\n        finalizeNumber(parser, false)\r\n        --index\r\n        continue\r\n      }\r\n      parser.inNumber = true\r\n      parser.pointSeen = true\r\n      parser.number += token\r\n      continue\r\n    }\r\n\r\n    if (!isNaN(parseInt(token))) {\r\n\r\n      if (parser.number === '0' || isArcFlag(parser)) {\r\n        parser.inNumber = true\r\n        parser.number = token\r\n        finalizeNumber(parser, true)\r\n        continue\r\n      }\r\n\r\n      parser.inNumber = true\r\n      parser.number += token\r\n      continue\r\n    }\r\n\r\n    if (token === ' ' || token === ',') {\r\n      if (parser.inNumber) {\r\n        finalizeNumber(parser, false)\r\n      }\r\n      continue\r\n    }\r\n\r\n    if (token === '-') {\r\n      if (parser.inNumber && !isExponential(parser)) {\r\n        finalizeNumber(parser, false)\r\n        --index\r\n        continue\r\n      }\r\n      parser.number += token\r\n      parser.inNumber = true\r\n      continue\r\n    }\r\n\r\n    if (token.toUpperCase() === 'E') {\r\n      parser.number += token\r\n      parser.hasExponent = true\r\n      continue\r\n    }\r\n\r\n    if (isPathLetter.test(token)) {\r\n      if (parser.inNumber) {\r\n        finalizeNumber(parser, false)\r\n      } else if (!segmentComplete(parser)) {\r\n        throw new Error('parser Error')\r\n      } else {\r\n        finalizeSegment(parser)\r\n      }\r\n      --index\r\n    }\r\n  }\r\n\r\n  if (parser.inNumber) {\r\n    finalizeNumber(parser, false)\r\n  }\r\n\r\n  if (parser.inSegment && segmentComplete(parser)) {\r\n    finalizeSegment(parser)\r\n  }\r\n\r\n  return parser.segments\r\n\r\n}\r\n", "import SVGArray from './SVGArray.js'\r\nimport parser from '../modules/core/parser.js'\r\nimport Box from './Box.js'\r\nimport { pathParser } from '../utils/pathParser.js'\r\n\r\nfunction arrayToString (a) {\r\n  let s = ''\r\n  for (let i = 0, il = a.length; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\nexport default class PathArray extends SVGArray {\r\n  // Get bounding box of path\r\n  bbox () {\r\n    parser().path.setAttribute('d', this.toString())\r\n    return new Box(parser.nodes.path.getBBox())\r\n  }\r\n\r\n  // Move path string\r\n  move (x, y) {\r\n    // get bounding box of current situation\r\n    const box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (let l, i = this.length - 1; i >= 0; i--) {\r\n        l = this[i][0]\r\n\r\n        if (l === 'M' || l === 'L' || l === 'T') {\r\n          this[i][1] += x\r\n          this[i][2] += y\r\n        } else if (l === 'H') {\r\n          this[i][1] += x\r\n        } else if (l === 'V') {\r\n          this[i][1] += y\r\n        } else if (l === 'C' || l === 'S' || l === 'Q') {\r\n          this[i][1] += x\r\n          this[i][2] += y\r\n          this[i][3] += x\r\n          this[i][4] += y\r\n\r\n          if (l === 'C') {\r\n            this[i][5] += x\r\n            this[i][6] += y\r\n          }\r\n        } else if (l === 'A') {\r\n          this[i][6] += x\r\n          this[i][7] += y\r\n        }\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Absolutize and parse path to array\r\n  parse (d = 'M0 0') {\r\n    if (Array.isArray(d)) {\r\n      d = Array.prototype.concat.apply([], d).toString()\r\n    }\r\n\r\n    return pathParser(d)\r\n  }\r\n\r\n  // Resize path string\r\n  size (width, height) {\r\n    // get bounding box of current situation\r\n    const box = this.bbox()\r\n    let i, l\r\n\r\n    // If the box width or height is 0 then we ignore\r\n    // transformations on the respective axis\r\n    box.width = box.width === 0 ? 1 : box.width\r\n    box.height = box.height === 0 ? 1 : box.height\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.length - 1; i >= 0; i--) {\r\n      l = this[i][0]\r\n\r\n      if (l === 'M' || l === 'L' || l === 'T') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\r\n      } else if (l === 'H') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n      } else if (l === 'V') {\r\n        this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\r\n      } else if (l === 'C' || l === 'S' || l === 'Q') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\r\n        this[i][3] = ((this[i][3] - box.x) * width) / box.width + box.x\r\n        this[i][4] = ((this[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l === 'C') {\r\n          this[i][5] = ((this[i][5] - box.x) * width) / box.width + box.x\r\n          this[i][6] = ((this[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n      } else if (l === 'A') {\r\n        // resize radii\r\n        this[i][1] = (this[i][1] * width) / box.width\r\n        this[i][2] = (this[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this[i][6] = ((this[i][6] - box.x) * width) / box.width + box.x\r\n        this[i][7] = ((this[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Convert array to string\r\n  toString () {\r\n    return arrayToString(this)\r\n  }\r\n\r\n}\r\n", "import { Ease } from './Controller.js'\nimport {\n  delimiter,\n  numberAndUnit,\n  isPathLetter\n} from '../modules/core/regex.js'\nimport { extend } from '../utils/adopter.js'\nimport Color from '../types/Color.js'\nimport PathArray from '../types/PathArray.js'\nimport SVGArray from '../types/SVGArray.js'\nimport SVGNumber from '../types/SVGNumber.js'\n\nconst getClassForType = (value) => {\n  const type = typeof value\n\n  if (type === 'number') {\n    return SVGNumber\n  } else if (type === 'string') {\n    if (Color.isColor(value)) {\n      return Color\n    } else if (delimiter.test(value)) {\n      return isPathLetter.test(value)\n        ? PathArray\n        : SVGArray\n    } else if (numberAndUnit.test(value)) {\n      return SVGNumber\n    } else {\n      return NonMorphable\n    }\n  } else if (morphableTypes.indexOf(value.constructor) > -1) {\n    return value.constructor\n  } else if (Array.isArray(value)) {\n    return SVGArray\n  } else if (type === 'object') {\n    return ObjectBag\n  } else {\n    return NonMorphable\n  }\n}\n\nexport default class Morphable {\n  constructor (stepper) {\n    this._stepper = stepper || new Ease('-')\n\n    this._from = null\n    this._to = null\n    this._type = null\n    this._context = null\n    this._morphObj = null\n  }\n\n  at (pos) {\n    return this._morphObj.morph(this._from, this._to, pos, this._stepper, this._context)\n\n  }\n\n  done () {\n    const complete = this._context\n      .map(this._stepper.done)\n      .reduce(function (last, curr) {\n        return last && curr\n      }, true)\n    return complete\n  }\n\n  from (val) {\n    if (val == null) {\n      return this._from\n    }\n\n    this._from = this._set(val)\n    return this\n  }\n\n  stepper (stepper) {\n    if (stepper == null) return this._stepper\n    this._stepper = stepper\n    return this\n  }\n\n  to (val) {\n    if (val == null) {\n      return this._to\n    }\n\n    this._to = this._set(val)\n    return this\n  }\n\n  type (type) {\n    // getter\n    if (type == null) {\n      return this._type\n    }\n\n    // setter\n    this._type = type\n    return this\n  }\n\n  _set (value) {\n    if (!this._type) {\n      this.type(getClassForType(value))\n    }\n\n    let result = (new this._type(value))\n    if (this._type === Color) {\n      result = this._to\n        ? result[this._to[4]]()\n        : this._from\n          ? result[this._from[4]]()\n          : result\n    }\n\n    if (this._type === ObjectBag) {\n      result = this._to\n        ? result.align(this._to)\n        : this._from\n          ? result.align(this._from)\n          : result\n    }\n\n    result = result.toConsumable()\n\n    this._morphObj = this._morphObj || new this._type()\n    this._context = this._context\n      || Array.apply(null, Array(result.length))\n        .map(Object)\n        .map(function (o) {\n          o.done = true\n          return o\n        })\n    return result\n  }\n\n}\n\nexport class NonMorphable {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  init (val) {\n    val = Array.isArray(val) ? val[0] : val\n    this.value = val\n    return this\n  }\n\n  toArray () {\n    return [ this.value ]\n  }\n\n  valueOf () {\n    return this.value\n  }\n\n}\n\nexport class TransformBag {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  init (obj) {\n    if (Array.isArray(obj)) {\n      obj = {\n        scaleX: obj[0],\n        scaleY: obj[1],\n        shear: obj[2],\n        rotate: obj[3],\n        translateX: obj[4],\n        translateY: obj[5],\n        originX: obj[6],\n        originY: obj[7]\n      }\n    }\n\n    Object.assign(this, TransformBag.defaults, obj)\n    return this\n  }\n\n  toArray () {\n    const v = this\n\n    return [\n      v.scaleX,\n      v.scaleY,\n      v.shear,\n      v.rotate,\n      v.translateX,\n      v.translateY,\n      v.originX,\n      v.originY\n    ]\n  }\n}\n\nTransformBag.defaults = {\n  scaleX: 1,\n  scaleY: 1,\n  shear: 0,\n  rotate: 0,\n  translateX: 0,\n  translateY: 0,\n  originX: 0,\n  originY: 0\n}\n\nconst sortByKey = (a, b) => {\n  return (a[0] < b[0] ? -1 : (a[0] > b[0] ? 1 : 0))\n}\n\nexport class ObjectBag {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  align (other) {\n    const values = this.values\n    for (let i = 0, il = values.length; i < il; ++i) {\n\n      // If the type is the same we only need to check if the color is in the correct format\n      if (values[i + 1] === other[i + 1]) {\n        if (values[i + 1] === Color && other[i + 7] !== values[i + 7]) {\n          const space = other[i + 7]\n          const color = new Color(this.values.splice(i + 3, 5))[space]().toArray()\n          this.values.splice(i + 3, 0, ...color)\n        }\n\n        i += values[i + 2] + 2\n        continue\n      }\n\n      if (!other[i + 1]) {\n        return this\n      }\n\n      // The types differ, so we overwrite the new type with the old one\n      // And initialize it with the types default (e.g. black for color or 0 for number)\n      const defaultObject = new (other[i + 1])().toArray()\n\n      // Than we fix the values array\n      const toDelete = (values[i + 2]) + 3\n\n      values.splice(i, toDelete, other[i], other[i + 1], other[i + 2], ...defaultObject)\n\n      i += values[i + 2] + 2\n    }\n    return this\n  }\n\n  init (objOrArr) {\n    this.values = []\n\n    if (Array.isArray(objOrArr)) {\n      this.values = objOrArr.slice()\n      return\n    }\n\n    objOrArr = objOrArr || {}\n    const entries = []\n\n    for (const i in objOrArr) {\n      const Type = getClassForType(objOrArr[i])\n      const val = new Type(objOrArr[i]).toArray()\n      entries.push([ i, Type, val.length, ...val ])\n    }\n\n    entries.sort(sortByKey)\n\n    this.values = entries.reduce((last, curr) => last.concat(curr), [])\n    return this\n  }\n\n  toArray () {\n    return this.values\n  }\n\n  valueOf () {\n    const obj = {}\n    const arr = this.values\n\n    // for (var i = 0, len = arr.length; i < len; i += 2) {\n    while (arr.length) {\n      const key = arr.shift()\n      const Type = arr.shift()\n      const num = arr.shift()\n      const values = arr.splice(0, num)\n      obj[key] = new Type(values)// .valueOf()\n    }\n\n    return obj\n  }\n\n}\n\nconst morphableTypes = [\n  NonMorphable,\n  TransformBag,\n  ObjectBag\n]\n\nexport function registerMorphableType (type = []) {\n  morphableTypes.push(...[].concat(type))\n}\n\nexport function makeMorphable () {\n  extend(morphableTypes, {\n    to (val) {\n      return new Morphable()\n        .type(this.constructor)\n        .from(this.toArray())// this.valueOf())\n        .to(val)\n    },\n    fromArray (arr) {\n      this.init(arr)\n      return this\n    },\n    toConsumable () {\n      return this.toArray()\n    },\n    morph (from, to, pos, stepper, context) {\n      const mapper = function (i, index) {\n        return stepper.step(i, to[index], pos, context[index], context)\n      }\n\n      return this.fromArray(from.map(mapper))\n    }\n  })\n}\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PathArray from '../types/PathArray.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Path extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('path', node), attrs)\r\n  }\r\n\r\n  // Get array\r\n  array () {\r\n    return this._array || (this._array = new PathArray(this.attr('d')))\r\n  }\r\n\r\n  // Clear array cache\r\n  clear () {\r\n    delete this._array\r\n    return this\r\n  }\r\n\r\n  // Set height of element\r\n  height (height) {\r\n    return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n  }\r\n\r\n  // Move by left top corner\r\n  move (x, y) {\r\n    return this.attr('d', this.array().move(x, y))\r\n  }\r\n\r\n  // Plot new path\r\n  plot (d) {\r\n    return (d == null)\n      ? this.array()\r\n      : this.clear().attr('d', typeof d === 'string' ? d : (this._array = new PathArray(d)))\r\n  }\r\n\r\n  // Set element size to given width and height\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n    return this.attr('d', this.array().size(p.width, p.height))\r\n  }\r\n\r\n  // Set width of element\r\n  width (width) {\r\n    return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n  }\r\n\r\n  // Move by left top corner over x-axis\r\n  x (x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n\r\n  // Move by left top corner over y-axis\r\n  y (y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n\r\n}\r\n\r\n// Define morphable array\r\nPath.prototype.MorphArray = PathArray\r\n\r\n// Add parent method\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped path element\r\n    path: wrapWithAttrCheck(function (d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Path()).plot(d || new PathArray())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Path, 'Path')\r\n", "import { proportionalSize } from '../../utils/utils.js'\r\nimport PointArray from '../../types/PointArray.js'\r\n\r\n// Get array\r\nexport function array () {\r\n  return this._array || (this._array = new PointArray(this.attr('points')))\r\n}\r\n\r\n// Clear array cache\r\nexport function clear () {\r\n  delete this._array\r\n  return this\r\n}\r\n\r\n// Move by left top corner\r\nexport function move (x, y) {\r\n  return this.attr('points', this.array().move(x, y))\r\n}\r\n\r\n// Plot new path\r\nexport function plot (p) {\r\n  return (p == null)\n    ? this.array()\r\n    : this.clear().attr('points', typeof p === 'string'\n      ? p\r\n      : (this._array = new PointArray(p)))\r\n}\r\n\r\n// Set element size to given width and height\r\nexport function size (width, height) {\r\n  const p = proportionalSize(this, width, height)\r\n  return this.attr('points', this.array().size(p.width, p.height))\r\n}\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\nimport * as poly from '../modules/core/poly.js'\r\n\r\nexport default class Polygon extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('polygon', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped polygon element\r\n    polygon: wrapWithAttrCheck(function (p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Polygon()).plot(p || new PointArray())\r\n    })\r\n  }\r\n})\r\n\r\nextend(Polygon, pointed)\r\nextend(Polygon, poly)\r\nregister(Polygon, 'Polygon')\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\nimport * as poly from '../modules/core/poly.js'\r\n\r\nexport default class Polyline extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('polyline', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped polygon element\r\n    polyline: wrapWithAttrCheck(function (p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Polyline()).plot(p || new PointArray())\r\n    })\r\n  }\r\n})\r\n\r\nextend(Polyline, pointed)\r\nextend(Polyline, poly)\r\nregister(Polyline, 'Polyline')\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { rx, ry } from '../modules/core/circled.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Rect extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('rect', node), attrs)\r\n  }\r\n}\r\n\r\nextend(Rect, { rx, ry })\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a rect element\r\n    rect: wrapWithAttrCheck(function (width, height) {\r\n      return this.put(new Rect()).size(width, height)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Rect, 'Rect')\r\n", "export default class Queue {\r\n  constructor () {\r\n    this._first = null\r\n    this._last = null\r\n  }\r\n\r\n  // Shows us the first item in the list\n  first () {\r\n    return this._first && this._first.value\r\n  }\n\n  // Shows us the last item in the list\n  last () {\r\n    return this._last && this._last.value\r\n  }\n\n  push (value) {\r\n    // An item stores an id and the provided value\r\n    const item = typeof value.next !== 'undefined' ? value : { value: value, next: null, prev: null }\r\n\r\n    // Deal with the queue being empty or populated\r\n    if (this._last) {\r\n      item.prev = this._last\r\n      this._last.next = item\r\n      this._last = item\r\n    } else {\r\n      this._last = item\r\n      this._first = item\r\n    }\r\n\r\n    // Return the current item\r\n    return item\r\n  }\r\n\n  // Removes the item that was returned from the push\n  remove (item) {\r\n    // Relink the previous item\r\n    if (item.prev) item.prev.next = item.next\r\n    if (item.next) item.next.prev = item.prev\r\n    if (item === this._last) this._last = item.prev\r\n    if (item === this._first) this._first = item.next\r\n\r\n    // Invalidate item\r\n    item.prev = null\r\n    item.next = null\r\n  }\n\n  shift () {\r\n    // Check if we have a value\r\n    const remove = this._first\r\n    if (!remove) return null\r\n\r\n    // If we do, remove it and relink things\r\n    this._first = remove.next\r\n    if (this._first) this._first.prev = null\r\n    this._last = this._first ? this._last : null\r\n    return remove.value\r\n  }\r\n\r\n}\r\n", "import { globals } from '../utils/window.js'\r\nimport Queue from './Queue.js'\r\n\r\nconst Animator = {\r\n  nextDraw: null,\r\n  frames: new Queue(),\r\n  timeouts: new Queue(),\r\n  immediates: new Queue(),\r\n  timer: () => globals.window.performance || globals.window.Date,\r\n  transforms: [],\r\n\r\n  frame (fn) {\r\n    // Store the node\r\n    const node = Animator.frames.push({ run: fn })\r\n\r\n    // Request an animation frame if we don't have one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    // Return the node so we can remove it easily\r\n    return node\r\n  },\r\n\r\n  timeout (fn, delay) {\r\n    delay = delay || 0\r\n\r\n    // Work out when the event should fire\r\n    const time = Animator.timer().now() + delay\r\n\r\n    // Add the timeout to the end of the queue\r\n    const node = Animator.timeouts.push({ run: fn, time: time })\r\n\r\n    // Request another animation frame if we need one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    return node\r\n  },\r\n\r\n  immediate (fn) {\r\n    // Add the immediate fn to the end of the queue\r\n    const node = Animator.immediates.push(fn)\r\n    // Request another animation frame if we need one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    return node\r\n  },\r\n\r\n  cancelFrame (node) {\r\n    node != null && Animator.frames.remove(node)\r\n  },\r\n\r\n  clearTimeout (node) {\r\n    node != null && Animator.timeouts.remove(node)\r\n  },\r\n\r\n  cancelImmediate (node) {\r\n    node != null && Animator.immediates.remove(node)\r\n  },\r\n\r\n  _draw (now) {\r\n    // Run all the timeouts we can run, if they are not ready yet, add them\r\n    // to the end of the queue immediately! (bad timeouts!!! [sarcasm])\r\n    let nextTimeout = null\r\n    const lastTimeout = Animator.timeouts.last()\r\n    while ((nextTimeout = Animator.timeouts.shift())) {\r\n      // Run the timeout if its time, or push it to the end\r\n      if (now >= nextTimeout.time) {\r\n        nextTimeout.run()\r\n      } else {\r\n        Animator.timeouts.push(nextTimeout)\r\n      }\r\n\r\n      // If we hit the last item, we should stop shifting out more items\r\n      if (nextTimeout === lastTimeout) break\r\n    }\r\n\r\n    // Run all of the animation frames\r\n    let nextFrame = null\r\n    const lastFrame = Animator.frames.last()\r\n    while ((nextFrame !== lastFrame) && (nextFrame = Animator.frames.shift())) {\r\n      nextFrame.run(now)\r\n    }\r\n\r\n    let nextImmediate = null\r\n    while ((nextImmediate = Animator.immediates.shift())) {\r\n      nextImmediate()\r\n    }\r\n\r\n    // If we have remaining timeouts or frames, draw until we don't anymore\r\n    Animator.nextDraw = Animator.timeouts.first() || Animator.frames.first()\r\n      ? globals.window.requestAnimationFrame(Animator._draw)\r\n      : null\r\n  }\r\n}\r\n\r\nexport default Animator\r\n", "import { globals } from '../utils/window.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Animator from './Animator.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\n\r\nconst makeSchedule = function (runnerInfo) {\r\n  const start = runnerInfo.start\r\n  const duration = runnerInfo.runner.duration()\r\n  const end = start + duration\r\n  return { start: start, duration: duration, end: end, runner: runnerInfo.runner }\r\n}\r\n\r\nconst defaultSource = function () {\r\n  const w = globals.window\r\n  return (w.performance || w.Date).now()\r\n}\r\n\r\nexport default class Timeline extends EventTarget {\r\n  // Construct a new timeline on the given element\r\n  constructor (timeSource = defaultSource) {\r\n    super()\r\n\r\n    this._timeSource = timeSource\r\n\r\n    // Store the timing variables\r\n    this._startTime = 0\r\n    this._speed = 1.0\r\n\r\n    // Determines how long a runner is hold in memory. Can be a dt or true/false\r\n    this._persist = 0\r\n\r\n    // Keep track of the running animations and their starting parameters\r\n    this._nextFrame = null\r\n    this._paused = true\r\n    this._runners = []\r\n    this._runnerIds = []\r\n    this._lastRunnerId = -1\r\n    this._time = 0\r\n    this._lastSourceTime = 0\r\n    this._lastStepTime = 0\r\n\r\n    // Make sure that step is always called in class context\r\n    this._step = this._stepFn.bind(this, false)\r\n    this._stepImmediate = this._stepFn.bind(this, true)\r\n  }\r\n\r\n  active () {\r\n    return !!this._nextFrame\r\n  }\r\n\r\n  finish () {\r\n    // Go to end and pause\r\n    this.time(this.getEndTimeOfTimeline() + 1)\r\n    return this.pause()\r\n  }\r\n\r\n  // Calculates the end of the timeline\r\n  getEndTime () {\r\n    const lastRunnerInfo = this.getLastRunnerInfo()\r\n    const lastDuration = lastRunnerInfo ? lastRunnerInfo.runner.duration() : 0\r\n    const lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : this._time\r\n    return lastStartTime + lastDuration\r\n  }\r\n\r\n  getEndTimeOfTimeline () {\r\n    const endTimes = this._runners.map((i) => i.start + i.runner.duration())\r\n    return Math.max(0, ...endTimes)\r\n  }\r\n\r\n  getLastRunnerInfo () {\r\n    return this.getRunnerInfoById(this._lastRunnerId)\r\n  }\r\n\r\n  getRunnerInfoById (id) {\r\n    return this._runners[this._runnerIds.indexOf(id)] || null\r\n  }\r\n\r\n  pause () {\r\n    this._paused = true\r\n    return this._continue()\r\n  }\r\n\r\n  persist (dtOrForever) {\r\n    if (dtOrForever == null) return this._persist\r\n    this._persist = dtOrForever\r\n    return this\r\n  }\r\n\r\n  play () {\r\n    // Now make sure we are not paused and continue the animation\r\n    this._paused = false\r\n    return this.updateTime()._continue()\r\n  }\r\n\r\n  reverse (yes) {\r\n    const currentSpeed = this.speed()\r\n    if (yes == null) return this.speed(-currentSpeed)\r\n\r\n    const positive = Math.abs(currentSpeed)\r\n    return this.speed(yes ? -positive : positive)\r\n  }\r\n\r\n  // schedules a runner on the timeline\r\n  schedule (runner, delay, when) {\r\n    if (runner == null) {\r\n      return this._runners.map(makeSchedule)\r\n    }\r\n\r\n    // The start time for the next animation can either be given explicitly,\r\n    // derived from the current timeline time or it can be relative to the\r\n    // last start time to chain animations directly\r\n\r\n    let absoluteStartTime = 0\r\n    const endTime = this.getEndTime()\r\n    delay = delay || 0\r\n\r\n    // Work out when to start the animation\r\n    if (when == null || when === 'last' || when === 'after') {\r\n      // Take the last time and increment\r\n      absoluteStartTime = endTime\r\n    } else if (when === 'absolute' || when === 'start') {\r\n      absoluteStartTime = delay\r\n      delay = 0\r\n    } else if (when === 'now') {\r\n      absoluteStartTime = this._time\r\n    } else if (when === 'relative') {\r\n      const runnerInfo = this.getRunnerInfoById(runner.id)\r\n      if (runnerInfo) {\r\n        absoluteStartTime = runnerInfo.start + delay\r\n        delay = 0\r\n      }\r\n    } else if (when === 'with-last') {\r\n      const lastRunnerInfo = this.getLastRunnerInfo()\r\n      const lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : this._time\r\n      absoluteStartTime = lastStartTime\r\n    } else {\r\n      throw new Error('Invalid value for the \"when\" parameter')\r\n    }\r\n\r\n    // Manage runner\r\n    runner.unschedule()\r\n    runner.timeline(this)\r\n\r\n    const persist = runner.persist()\r\n    const runnerInfo = {\r\n      persist: persist === null ? this._persist : persist,\r\n      start: absoluteStartTime + delay,\r\n      runner\r\n    }\r\n\r\n    this._lastRunnerId = runner.id\r\n\r\n    this._runners.push(runnerInfo)\r\n    this._runners.sort((a, b) => a.start - b.start)\r\n    this._runnerIds = this._runners.map(info => info.runner.id)\r\n\r\n    this.updateTime()._continue()\r\n    return this\r\n  }\r\n\r\n  seek (dt) {\r\n    return this.time(this._time + dt)\r\n  }\r\n\r\n  source (fn) {\r\n    if (fn == null) return this._timeSource\r\n    this._timeSource = fn\r\n    return this\r\n  }\r\n\r\n  speed (speed) {\r\n    if (speed == null) return this._speed\r\n    this._speed = speed\r\n    return this\r\n  }\r\n\r\n  stop () {\r\n    // Go to start and pause\r\n    this.time(0)\r\n    return this.pause()\r\n  }\r\n\r\n  time (time) {\r\n    if (time == null) return this._time\r\n    this._time = time\r\n    return this._continue(true)\r\n  }\r\n\r\n  // Remove the runner from this timeline\r\n  unschedule (runner) {\r\n    const index = this._runnerIds.indexOf(runner.id)\r\n    if (index < 0) return this\r\n\r\n    this._runners.splice(index, 1)\r\n    this._runnerIds.splice(index, 1)\r\n\r\n    runner.timeline(null)\r\n    return this\r\n  }\r\n\r\n  // Makes sure, that after pausing the time doesn't jump\r\n  updateTime () {\r\n    if (!this.active()) {\r\n      this._lastSourceTime = this._timeSource()\r\n    }\r\n    return this\r\n  }\r\n\r\n  // Checks if we are running and continues the animation\r\n  _continue (immediateStep = false) {\r\n    Animator.cancelFrame(this._nextFrame)\r\n    this._nextFrame = null\r\n\r\n    if (immediateStep) return this._stepImmediate()\r\n    if (this._paused) return this\r\n\r\n    this._nextFrame = Animator.frame(this._step)\r\n    return this\r\n  }\r\n\r\n  _stepFn (immediateStep = false) {\r\n    // Get the time delta from the last time and update the time\r\n    const time = this._timeSource()\r\n    let dtSource = time - this._lastSourceTime\r\n\r\n    if (immediateStep) dtSource = 0\r\n\r\n    const dtTime = this._speed * dtSource + (this._time - this._lastStepTime)\r\n    this._lastSourceTime = time\r\n\r\n    // Only update the time if we use the timeSource.\r\n    // Otherwise use the current time\r\n    if (!immediateStep) {\r\n      // Update the time\r\n      this._time += dtTime\r\n      this._time = this._time < 0 ? 0 : this._time\r\n    }\r\n    this._lastStepTime = this._time\r\n    this.fire('time', this._time)\r\n\r\n    // This is for the case that the timeline was seeked so that the time\r\n    // is now before the startTime of the runner. Thats why we need to set\r\n    // the runner to position 0\r\n\r\n    // FIXME:\r\n    // However, reseting in insertion order leads to bugs. Considering the case,\r\n    // where 2 runners change the same attribute but in different times,\r\n    // reseting both of them will lead to the case where the later defined\r\n    // runner always wins the reset even if the other runner started earlier\r\n    // and therefore should win the attribute battle\r\n    // this can be solved by reseting them backwards\r\n    for (let k = this._runners.length; k--;) {\r\n      // Get and run the current runner and ignore it if its inactive\r\n      const runnerInfo = this._runners[k]\r\n      const runner = runnerInfo.runner\r\n\r\n      // Make sure that we give the actual difference\r\n      // between runner start time and now\r\n      const dtToStart = this._time - runnerInfo.start\r\n\r\n      // Dont run runner if not started yet\r\n      // and try to reset it\r\n      if (dtToStart <= 0) {\r\n        runner.reset()\r\n      }\r\n    }\r\n\r\n    // Run all of the runners directly\r\n    let runnersLeft = false\r\n    for (let i = 0, len = this._runners.length; i < len; i++) {\r\n      // Get and run the current runner and ignore it if its inactive\r\n      const runnerInfo = this._runners[i]\r\n      const runner = runnerInfo.runner\r\n      let dt = dtTime\r\n\r\n      // Make sure that we give the actual difference\r\n      // between runner start time and now\r\n      const dtToStart = this._time - runnerInfo.start\r\n\r\n      // Dont run runner if not started yet\r\n      if (dtToStart <= 0) {\r\n        runnersLeft = true\r\n        continue\r\n      } else if (dtToStart < dt) {\r\n        // Adjust dt to make sure that animation is on point\r\n        dt = dtToStart\r\n      }\r\n\r\n      if (!runner.active()) continue\r\n\r\n      // If this runner is still going, signal that we need another animation\r\n      // frame, otherwise, remove the completed runner\r\n      const finished = runner.step(dt).done\r\n      if (!finished) {\r\n        runnersLeft = true\r\n        // continue\r\n      } else if (runnerInfo.persist !== true) {\r\n        // runner is finished. And runner might get removed\r\n        const endTime = runner.duration() - runner.time() + this._time\r\n\r\n        if (endTime + runnerInfo.persist < this._time) {\r\n          // Delete runner and correct index\r\n          runner.unschedule()\r\n          --i\r\n          --len\r\n        }\r\n      }\r\n    }\r\n\r\n    // Basically: we continue when there are runners right from us in time\r\n    // when -->, and when runners are left from us when <--\r\n    if ((runnersLeft && !(this._speed < 0 && this._time === 0)) || (this._runnerIds.length && this._speed < 0 && this._time > 0)) {\r\n      this._continue()\r\n    } else {\r\n      this.pause()\r\n      this.fire('finished')\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Element: {\r\n    timeline: function (timeline) {\r\n      if (timeline == null) {\r\n        this._timeline = (this._timeline || new Timeline())\r\n        return this._timeline\r\n      } else {\r\n        this._timeline = timeline\r\n        return this\r\n      }\r\n    }\r\n  }\r\n})\r\n", "import { Controller, Ease, Stepper } from './Controller.js'\r\nimport { extend, register } from '../utils/adopter.js'\r\nimport { from, to } from '../modules/core/gradiented.js'\r\nimport { getOrigin } from '../utils/utils.js'\r\nimport { noop, timeline } from '../modules/core/defaults.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { rx, ry } from '../modules/core/circled.js'\r\nimport Animator from './Animator.js'\r\nimport Box from '../types/Box.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\nimport Matrix from '../types/Matrix.js'\r\nimport Morphable, { TransformBag, ObjectBag } from './Morphable.js'\r\nimport Point from '../types/Point.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Timeline from './Timeline.js'\r\n\r\nexport default class Runner extends EventTarget {\r\n  constructor (options) {\r\n    super()\r\n\r\n    // Store a unique id on the runner, so that we can identify it later\r\n    this.id = Runner.id++\r\n\r\n    // Ensure a default value\r\n    options = options == null\r\n      ? timeline.duration\r\n      : options\r\n\r\n    // Ensure that we get a controller\r\n    options = typeof options === 'function'\r\n      ? new Controller(options)\r\n      : options\r\n\r\n    // Declare all of the variables\r\n    this._element = null\r\n    this._timeline = null\r\n    this.done = false\r\n    this._queue = []\r\n\r\n    // Work out the stepper and the duration\r\n    this._duration = typeof options === 'number' && options\r\n    this._isDeclarative = options instanceof Controller\r\n    this._stepper = this._isDeclarative ? options : new Ease()\r\n\r\n    // We copy the current values from the timeline because they can change\r\n    this._history = {}\r\n\r\n    // Store the state of the runner\r\n    this.enabled = true\r\n    this._time = 0\r\n    this._lastTime = 0\r\n\r\n    // At creation, the runner is in reseted state\r\n    this._reseted = true\r\n\r\n    // Save transforms applied to this runner\r\n    this.transforms = new Matrix()\r\n    this.transformId = 1\r\n\r\n    // Looping variables\r\n    this._haveReversed = false\r\n    this._reverse = false\r\n    this._loopsDone = 0\r\n    this._swing = false\r\n    this._wait = 0\r\n    this._times = 1\r\n\r\n    this._frameId = null\r\n\r\n    // Stores how long a runner is stored after beeing done\r\n    this._persist = this._isDeclarative ? true : null\r\n  }\r\n\r\n  static sanitise (duration, delay, when) {\r\n    // Initialise the default parameters\r\n    let times = 1\r\n    let swing = false\r\n    let wait = 0\r\n    duration = duration || timeline.duration\r\n    delay = delay || timeline.delay\r\n    when = when || 'last'\r\n\r\n    // If we have an object, unpack the values\r\n    if (typeof duration === 'object' && !(duration instanceof Stepper)) {\r\n      delay = duration.delay || delay\r\n      when = duration.when || when\r\n      swing = duration.swing || swing\r\n      times = duration.times || times\r\n      wait = duration.wait || wait\r\n      duration = duration.duration || timeline.duration\r\n    }\r\n\r\n    return {\r\n      duration: duration,\r\n      delay: delay,\r\n      swing: swing,\r\n      times: times,\r\n      wait: wait,\r\n      when: when\r\n    }\r\n  }\r\n\r\n  active (enabled) {\r\n    if (enabled == null) return this.enabled\r\n    this.enabled = enabled\r\n    return this\r\n  }\r\n\r\n  /*\r\n  Private Methods\r\n  ===============\r\n  Methods that shouldn't be used externally\r\n  */\r\n  addTransform (transform, index) {\r\n    this.transforms.lmultiplyO(transform)\r\n    return this\r\n  }\r\n\r\n  after (fn) {\r\n    return this.on('finished', fn)\r\n  }\r\n\r\n  animate (duration, delay, when) {\r\n    const o = Runner.sanitise(duration, delay, when)\r\n    const runner = new Runner(o.duration)\r\n    if (this._timeline) runner.timeline(this._timeline)\r\n    if (this._element) runner.element(this._element)\r\n    return runner.loop(o).schedule(o.delay, o.when)\r\n  }\r\n\r\n  clearTransform () {\r\n    this.transforms = new Matrix()\r\n    return this\r\n  }\r\n\r\n  // TODO: Keep track of all transformations so that deletion is faster\r\n  clearTransformsFromQueue () {\r\n    if (!this.done || !this._timeline || !this._timeline._runnerIds.includes(this.id)) {\r\n      this._queue = this._queue.filter((item) => {\r\n        return !item.isTransform\r\n      })\r\n    }\r\n  }\r\n\r\n  delay (delay) {\r\n    return this.animate(0, delay)\r\n  }\r\n\r\n  duration () {\r\n    return this._times * (this._wait + this._duration) - this._wait\r\n  }\r\n\r\n  during (fn) {\r\n    return this.queue(null, fn)\r\n  }\r\n\r\n  ease (fn) {\r\n    this._stepper = new Ease(fn)\r\n    return this\r\n  }\r\n  /*\r\n  Runner Definitions\r\n  ==================\r\n  These methods help us define the runtime behaviour of the Runner or they\r\n  help us make new runners from the current runner\r\n  */\r\n\r\n  element (element) {\r\n    if (element == null) return this._element\r\n    this._element = element\r\n    element._prepareRunner()\r\n    return this\r\n  }\r\n\r\n  finish () {\r\n    return this.step(Infinity)\r\n  }\r\n\r\n  loop (times, swing, wait) {\r\n    // Deal with the user passing in an object\r\n    if (typeof times === 'object') {\r\n      swing = times.swing\r\n      wait = times.wait\r\n      times = times.times\r\n    }\r\n\r\n    // Sanitise the values and store them\r\n    this._times = times || Infinity\r\n    this._swing = swing || false\r\n    this._wait = wait || 0\r\n\r\n    // Allow true to be passed\r\n    if (this._times === true) { this._times = Infinity }\r\n\r\n    return this\r\n  }\r\n\r\n  loops (p) {\r\n    const loopDuration = this._duration + this._wait\r\n    if (p == null) {\r\n      const loopsDone = Math.floor(this._time / loopDuration)\r\n      const relativeTime = (this._time - loopsDone * loopDuration)\r\n      const position = relativeTime / this._duration\r\n      return Math.min(loopsDone + position, this._times)\r\n    }\r\n    const whole = Math.floor(p)\r\n    const partial = p % 1\r\n    const time = loopDuration * whole + this._duration * partial\r\n    return this.time(time)\r\n  }\r\n\r\n  persist (dtOrForever) {\r\n    if (dtOrForever == null) return this._persist\r\n    this._persist = dtOrForever\r\n    return this\r\n  }\r\n\r\n  position (p) {\r\n    // Get all of the variables we need\r\n    const x = this._time\r\n    const d = this._duration\r\n    const w = this._wait\r\n    const t = this._times\r\n    const s = this._swing\r\n    const r = this._reverse\r\n    let position\r\n\r\n    if (p == null) {\r\n      /*\r\n      This function converts a time to a position in the range [0, 1]\r\n      The full explanation can be found in this desmos demonstration\r\n        https://www.desmos.com/calculator/u4fbavgche\r\n      The logic is slightly simplified here because we can use booleans\r\n      */\r\n\r\n      // Figure out the value without thinking about the start or end time\r\n      const f = function (x) {\r\n        const swinging = s * Math.floor(x % (2 * (w + d)) / (w + d))\r\n        const backwards = (swinging && !r) || (!swinging && r)\r\n        const uncliped = Math.pow(-1, backwards) * (x % (w + d)) / d + backwards\r\n        const clipped = Math.max(Math.min(uncliped, 1), 0)\r\n        return clipped\r\n      }\r\n\r\n      // Figure out the value by incorporating the start time\r\n      const endTime = t * (w + d) - w\r\n      position = x <= 0\r\n        ? Math.round(f(1e-5))\r\n        : x < endTime\r\n          ? f(x)\r\n          : Math.round(f(endTime - 1e-5))\r\n      return position\r\n    }\r\n\r\n    // Work out the loops done and add the position to the loops done\r\n    const loopsDone = Math.floor(this.loops())\r\n    const swingForward = s && (loopsDone % 2 === 0)\r\n    const forwards = (swingForward && !r) || (r && swingForward)\r\n    position = loopsDone + (forwards ? p : 1 - p)\r\n    return this.loops(position)\r\n  }\r\n\r\n  progress (p) {\r\n    if (p == null) {\r\n      return Math.min(1, this._time / this.duration())\r\n    }\r\n    return this.time(p * this.duration())\r\n  }\r\n\r\n  /*\r\n  Basic Functionality\r\n  ===================\r\n  These methods allow us to attach basic functions to the runner directly\r\n  */\r\n  queue (initFn, runFn, retargetFn, isTransform) {\r\n    this._queue.push({\r\n      initialiser: initFn || noop,\r\n      runner: runFn || noop,\r\n      retarget: retargetFn,\r\n      isTransform: isTransform,\r\n      initialised: false,\r\n      finished: false\r\n    })\r\n    const timeline = this.timeline()\r\n    timeline && this.timeline()._continue()\r\n    return this\r\n  }\r\n\r\n  reset () {\r\n    if (this._reseted) return this\r\n    this.time(0)\r\n    this._reseted = true\r\n    return this\r\n  }\r\n\r\n  reverse (reverse) {\r\n    this._reverse = reverse == null ? !this._reverse : reverse\r\n    return this\r\n  }\r\n\r\n  schedule (timeline, delay, when) {\r\n    // The user doesn't need to pass a timeline if we already have one\r\n    if (!(timeline instanceof Timeline)) {\r\n      when = delay\r\n      delay = timeline\r\n      timeline = this.timeline()\r\n    }\r\n\r\n    // If there is no timeline, yell at the user...\r\n    if (!timeline) {\r\n      throw Error('Runner cannot be scheduled without timeline')\r\n    }\r\n\r\n    // Schedule the runner on the timeline provided\r\n    timeline.schedule(this, delay, when)\r\n    return this\r\n  }\r\n\r\n  step (dt) {\r\n    // If we are inactive, this stepper just gets skipped\r\n    if (!this.enabled) return this\r\n\r\n    // Update the time and get the new position\r\n    dt = dt == null ? 16 : dt\r\n    this._time += dt\r\n    const position = this.position()\r\n\r\n    // Figure out if we need to run the stepper in this frame\r\n    const running = this._lastPosition !== position && this._time >= 0\r\n    this._lastPosition = position\r\n\r\n    // Figure out if we just started\r\n    const duration = this.duration()\r\n    const justStarted = this._lastTime <= 0 && this._time > 0\r\n    const justFinished = this._lastTime < duration && this._time >= duration\r\n\r\n    this._lastTime = this._time\r\n    if (justStarted) {\r\n      this.fire('start', this)\r\n    }\r\n\r\n    // Work out if the runner is finished set the done flag here so animations\r\n    // know, that they are running in the last step (this is good for\r\n    // transformations which can be merged)\r\n    const declarative = this._isDeclarative\r\n    this.done = !declarative && !justFinished && this._time >= duration\r\n\r\n    // Runner is running. So its not in reseted state anymore\r\n    this._reseted = false\r\n\r\n    let converged = false\r\n    // Call initialise and the run function\r\n    if (running || declarative) {\r\n      this._initialise(running)\r\n\r\n      // clear the transforms on this runner so they dont get added again and again\r\n      this.transforms = new Matrix()\r\n      converged = this._run(declarative ? dt : position)\r\n\r\n      this.fire('step', this)\r\n    }\r\n    // correct the done flag here\r\n    // declaritive animations itself know when they converged\r\n    this.done = this.done || (converged && declarative)\r\n    if (justFinished) {\r\n      this.fire('finished', this)\r\n    }\r\n    return this\r\n  }\r\n\r\n  /*\r\n  Runner animation methods\r\n  ========================\r\n  Control how the animation plays\r\n  */\r\n  time (time) {\r\n    if (time == null) {\r\n      return this._time\r\n    }\r\n    const dt = time - this._time\r\n    this.step(dt)\r\n    return this\r\n  }\r\n\r\n  timeline (timeline) {\r\n    // check explicitly for undefined so we can set the timeline to null\r\n    if (typeof timeline === 'undefined') return this._timeline\r\n    this._timeline = timeline\r\n    return this\r\n  }\r\n\r\n  unschedule () {\r\n    const timeline = this.timeline()\r\n    timeline && timeline.unschedule(this)\r\n    return this\r\n  }\r\n\r\n  // Run each initialise function in the runner if required\r\n  _initialise (running) {\r\n    // If we aren't running, we shouldn't initialise when not declarative\r\n    if (!running && !this._isDeclarative) return\r\n\r\n    // Loop through all of the initialisers\r\n    for (let i = 0, len = this._queue.length; i < len; ++i) {\r\n      // Get the current initialiser\r\n      const current = this._queue[i]\r\n\r\n      // Determine whether we need to initialise\r\n      const needsIt = this._isDeclarative || (!current.initialised && running)\r\n      running = !current.finished\r\n\r\n      // Call the initialiser if we need to\r\n      if (needsIt && running) {\r\n        current.initialiser.call(this)\r\n        current.initialised = true\r\n      }\r\n    }\r\n  }\r\n\r\n  // Save a morpher to the morpher list so that we can retarget it later\r\n  _rememberMorpher (method, morpher) {\r\n    this._history[method] = {\r\n      morpher: morpher,\r\n      caller: this._queue[this._queue.length - 1]\r\n    }\r\n\r\n    // We have to resume the timeline in case a controller\r\n    // is already done without being ever run\r\n    // This can happen when e.g. this is done:\r\n    //    anim = el.animate(new SVG.Spring)\r\n    // and later\r\n    //    anim.move(...)\r\n    if (this._isDeclarative) {\r\n      const timeline = this.timeline()\r\n      timeline && timeline.play()\r\n    }\r\n  }\r\n\r\n  // Try to set the target for a morpher if the morpher exists, otherwise\r\n  // Run each run function for the position or dt given\r\n  _run (positionOrDt) {\r\n    // Run all of the _queue directly\r\n    let allfinished = true\r\n    for (let i = 0, len = this._queue.length; i < len; ++i) {\r\n      // Get the current function to run\r\n      const current = this._queue[i]\r\n\r\n      // Run the function if its not finished, we keep track of the finished\r\n      // flag for the sake of declarative _queue\r\n      const converged = current.runner.call(this, positionOrDt)\r\n      current.finished = current.finished || (converged === true)\r\n      allfinished = allfinished && current.finished\r\n    }\r\n\r\n    // We report when all of the constructors are finished\r\n    return allfinished\r\n  }\r\n\r\n  // do nothing and return false\r\n  _tryRetarget (method, target, extra) {\r\n    if (this._history[method]) {\r\n      // if the last method wasnt even initialised, throw it away\r\n      if (!this._history[method].caller.initialised) {\r\n        const index = this._queue.indexOf(this._history[method].caller)\r\n        this._queue.splice(index, 1)\r\n        return false\r\n      }\r\n\r\n      // for the case of transformations, we use the special retarget function\r\n      // which has access to the outer scope\r\n      if (this._history[method].caller.retarget) {\r\n        this._history[method].caller.retarget.call(this, target, extra)\r\n        // for everything else a simple morpher change is sufficient\r\n      } else {\r\n        this._history[method].morpher.to(target)\r\n      }\r\n\r\n      this._history[method].caller.finished = false\r\n      const timeline = this.timeline()\r\n      timeline && timeline.play()\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n}\r\n\r\nRunner.id = 0\r\n\r\nexport class FakeRunner {\r\n  constructor (transforms = new Matrix(), id = -1, done = true) {\r\n    this.transforms = transforms\r\n    this.id = id\r\n    this.done = done\r\n  }\r\n\r\n  clearTransformsFromQueue () { }\r\n}\r\n\r\nextend([ Runner, FakeRunner ], {\r\n  mergeWith (runner) {\r\n    return new FakeRunner(\r\n      runner.transforms.lmultiply(this.transforms),\r\n      runner.id\r\n    )\r\n  }\r\n})\r\n\r\n// FakeRunner.emptyRunner = new FakeRunner()\r\n\r\nconst lmultiply = (last, curr) => last.lmultiplyO(curr)\r\nconst getRunnerTransform = (runner) => runner.transforms\r\n\r\nfunction mergeTransforms () {\r\n  // Find the matrix to apply to the element and apply it\r\n  const runners = this._transformationRunners.runners\r\n  const netTransform = runners\r\n    .map(getRunnerTransform)\r\n    .reduce(lmultiply, new Matrix())\r\n\r\n  this.transform(netTransform)\r\n\r\n  this._transformationRunners.merge()\r\n\r\n  if (this._transformationRunners.length() === 1) {\r\n    this._frameId = null\r\n  }\r\n}\r\n\r\nexport class RunnerArray {\r\n  constructor () {\r\n    this.runners = []\r\n    this.ids = []\r\n  }\r\n\r\n  add (runner) {\r\n    if (this.runners.includes(runner)) return\r\n    const id = runner.id + 1\r\n\r\n    this.runners.push(runner)\r\n    this.ids.push(id)\r\n\r\n    return this\r\n  }\r\n\r\n  clearBefore (id) {\r\n    const deleteCnt = this.ids.indexOf(id + 1) || 1\r\n    this.ids.splice(0, deleteCnt, 0)\r\n    this.runners.splice(0, deleteCnt, new FakeRunner())\r\n      .forEach((r) => r.clearTransformsFromQueue())\r\n    return this\r\n  }\r\n\r\n  edit (id, newRunner) {\r\n    const index = this.ids.indexOf(id + 1)\r\n    this.ids.splice(index, 1, id + 1)\r\n    this.runners.splice(index, 1, newRunner)\r\n    return this\r\n  }\r\n\r\n  getByID (id) {\r\n    return this.runners[this.ids.indexOf(id + 1)]\r\n  }\r\n\r\n  length () {\r\n    return this.ids.length\r\n  }\r\n\r\n  merge () {\r\n    let lastRunner = null\r\n    for (let i = 0; i < this.runners.length; ++i) {\r\n      const runner = this.runners[i]\r\n\r\n      const condition = lastRunner\r\n        && runner.done && lastRunner.done\r\n        // don't merge runner when persisted on timeline\r\n        && (!runner._timeline || !runner._timeline._runnerIds.includes(runner.id))\r\n        && (!lastRunner._timeline || !lastRunner._timeline._runnerIds.includes(lastRunner.id))\r\n\r\n      if (condition) {\r\n        // the +1 happens in the function\r\n        this.remove(runner.id)\r\n        const newRunner = runner.mergeWith(lastRunner)\r\n        this.edit(lastRunner.id, newRunner)\r\n        lastRunner = newRunner\r\n        --i\r\n      } else {\r\n        lastRunner = runner\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  remove (id) {\r\n    const index = this.ids.indexOf(id + 1)\r\n    this.ids.splice(index, 1)\r\n    this.runners.splice(index, 1)\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Element: {\r\n    animate (duration, delay, when) {\r\n      const o = Runner.sanitise(duration, delay, when)\r\n      const timeline = this.timeline()\r\n      return new Runner(o.duration)\r\n        .loop(o)\r\n        .element(this)\r\n        .timeline(timeline.play())\r\n        .schedule(o.delay, o.when)\r\n    },\r\n\r\n    delay (by, when) {\r\n      return this.animate(0, by, when)\r\n    },\r\n\r\n    // this function searches for all runners on the element and deletes the ones\r\n    // which run before the current one. This is because absolute transformations\r\n    // overwfrite anything anyway so there is no need to waste time computing\r\n    // other runners\r\n    _clearTransformRunnersBefore (currentRunner) {\r\n      this._transformationRunners.clearBefore(currentRunner.id)\r\n    },\r\n\r\n    _currentTransform (current) {\r\n      return this._transformationRunners.runners\r\n        // we need the equal sign here to make sure, that also transformations\r\n        // on the same runner which execute before the current transformation are\r\n        // taken into account\r\n        .filter((runner) => runner.id <= current.id)\r\n        .map(getRunnerTransform)\r\n        .reduce(lmultiply, new Matrix())\r\n    },\r\n\r\n    _addRunner (runner) {\r\n      this._transformationRunners.add(runner)\r\n\r\n      // Make sure that the runner merge is executed at the very end of\r\n      // all Animator functions. Thats why we use immediate here to execute\r\n      // the merge right after all frames are run\r\n      Animator.cancelImmediate(this._frameId)\r\n      this._frameId = Animator.immediate(mergeTransforms.bind(this))\r\n    },\r\n\r\n    _prepareRunner () {\r\n      if (this._frameId == null) {\r\n        this._transformationRunners = new RunnerArray()\r\n          .add(new FakeRunner(new Matrix(this)))\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\n// Will output the elements from array A that are not in the array B\r\nconst difference = (a, b) => a.filter(x => !b.includes(x))\r\n\r\nextend(Runner, {\r\n  attr (a, v) {\r\n    return this.styleAttr('attr', a, v)\r\n  },\r\n\r\n  // Add animatable styles\r\n  css (s, v) {\r\n    return this.styleAttr('css', s, v)\r\n  },\r\n\r\n  styleAttr (type, nameOrAttrs, val) {\r\n    if (typeof nameOrAttrs === 'string') {\r\n      return this.styleAttr(type, { [nameOrAttrs]: val })\r\n    }\r\n\r\n    let attrs = nameOrAttrs\r\n    if (this._tryRetarget(type, attrs)) return this\r\n\r\n    let morpher = new Morphable(this._stepper).to(attrs)\r\n    let keys = Object.keys(attrs)\r\n\r\n    this.queue(function () {\r\n      morpher = morpher.from(this.element()[type](keys))\r\n    }, function (pos) {\r\n      this.element()[type](morpher.at(pos).valueOf())\r\n      return morpher.done()\r\n    }, function (newToAttrs) {\r\n\r\n      // Check if any new keys were added\r\n      const newKeys = Object.keys(newToAttrs)\r\n      const differences = difference(newKeys, keys)\r\n\r\n      // If their are new keys, initialize them and add them to morpher\r\n      if (differences.length) {\r\n        // Get the values\r\n        const addedFromAttrs = this.element()[type](differences)\r\n\r\n        // Get the already initialized values\r\n        const oldFromAttrs = new ObjectBag(morpher.from()).valueOf()\r\n\r\n        // Merge old and new\r\n        Object.assign(oldFromAttrs, addedFromAttrs)\r\n        morpher.from(oldFromAttrs)\r\n      }\r\n\r\n      // Get the object from the morpher\r\n      const oldToAttrs = new ObjectBag(morpher.to()).valueOf()\r\n\r\n      // Merge in new attributes\r\n      Object.assign(oldToAttrs, newToAttrs)\r\n\r\n      // Change morpher target\r\n      morpher.to(oldToAttrs)\r\n\r\n      // Make sure that we save the work we did so we don't need it to do again\r\n      keys = newKeys\r\n      attrs = newToAttrs\r\n    })\r\n\r\n    this._rememberMorpher(type, morpher)\r\n    return this\r\n  },\r\n\r\n  zoom (level, point) {\r\n    if (this._tryRetarget('zoom', level, point)) return this\r\n\r\n    let morpher = new Morphable(this._stepper).to(new SVGNumber(level))\r\n\r\n    this.queue(function () {\r\n      morpher = morpher.from(this.element().zoom())\r\n    }, function (pos) {\r\n      this.element().zoom(morpher.at(pos), point)\r\n      return morpher.done()\r\n    }, function (newLevel, newPoint) {\r\n      point = newPoint\r\n      morpher.to(newLevel)\r\n    })\r\n\r\n    this._rememberMorpher('zoom', morpher)\r\n    return this\r\n  },\r\n\r\n  /**\r\n   ** absolute transformations\r\n   **/\r\n\r\n  //\r\n  // M v -----|-----(D M v = F v)------|----->  T v\r\n  //\r\n  // 1. define the final state (T) and decompose it (once)\r\n  //    t = [tx, ty, the, lam, sy, sx]\r\n  // 2. on every frame: pull the current state of all previous transforms\r\n  //    (M - m can change)\r\n  //   and then write this as m = [tx0, ty0, the0, lam0, sy0, sx0]\r\n  // 3. Find the interpolated matrix F(pos) = m + pos * (t - m)\r\n  //   - Note F(0) = M\r\n  //   - Note F(1) = T\r\n  // 4. Now you get the delta matrix as a result: D = F * inv(M)\r\n\r\n  transform (transforms, relative, affine) {\r\n    // If we have a declarative function, we should retarget it if possible\r\n    relative = transforms.relative || relative\r\n    if (this._isDeclarative && !relative && this._tryRetarget('transform', transforms)) {\r\n      return this\r\n    }\r\n\r\n    // Parse the parameters\r\n    const isMatrix = Matrix.isMatrixLike(transforms)\r\n    affine = transforms.affine != null\r\n      ? transforms.affine\r\n      : (affine != null ? affine : !isMatrix)\r\n\r\n    // Create a morepher and set its type\r\n    const morpher = new Morphable(this._stepper)\r\n      .type(affine ? TransformBag : Matrix)\r\n\r\n    let origin\r\n    let element\r\n    let current\r\n    let currentAngle\r\n    let startTransform\r\n\r\n    function setup () {\r\n      // make sure element and origin is defined\r\n      element = element || this.element()\r\n      origin = origin || getOrigin(transforms, element)\r\n\r\n      startTransform = new Matrix(relative ? undefined : element)\r\n\r\n      // add the runner to the element so it can merge transformations\r\n      element._addRunner(this)\r\n\r\n      // Deactivate all transforms that have run so far if we are absolute\r\n      if (!relative) {\r\n        element._clearTransformRunnersBefore(this)\r\n      }\r\n    }\r\n\r\n    function run (pos) {\r\n      // clear all other transforms before this in case something is saved\r\n      // on this runner. We are absolute. We dont need these!\r\n      if (!relative) this.clearTransform()\r\n\r\n      const { x, y } = new Point(origin).transform(element._currentTransform(this))\r\n\r\n      let target = new Matrix({ ...transforms, origin: [ x, y ] })\r\n      let start = this._isDeclarative && current\r\n        ? current\r\n        : startTransform\r\n\r\n      if (affine) {\r\n        target = target.decompose(x, y)\r\n        start = start.decompose(x, y)\r\n\r\n        // Get the current and target angle as it was set\r\n        const rTarget = target.rotate\r\n        const rCurrent = start.rotate\r\n\r\n        // Figure out the shortest path to rotate directly\r\n        const possibilities = [ rTarget - 360, rTarget, rTarget + 360 ]\r\n        const distances = possibilities.map(a => Math.abs(a - rCurrent))\r\n        const shortest = Math.min(...distances)\r\n        const index = distances.indexOf(shortest)\r\n        target.rotate = possibilities[index]\r\n      }\r\n\r\n      if (relative) {\r\n        // we have to be careful here not to overwrite the rotation\r\n        // with the rotate method of Matrix\r\n        if (!isMatrix) {\r\n          target.rotate = transforms.rotate || 0\r\n        }\r\n        if (this._isDeclarative && currentAngle) {\r\n          start.rotate = currentAngle\r\n        }\r\n      }\r\n\r\n      morpher.from(start)\r\n      morpher.to(target)\r\n\r\n      const affineParameters = morpher.at(pos)\r\n      currentAngle = affineParameters.rotate\r\n      current = new Matrix(affineParameters)\r\n\r\n      this.addTransform(current)\r\n      element._addRunner(this)\r\n      return morpher.done()\r\n    }\r\n\r\n    function retarget (newTransforms) {\r\n      // only get a new origin if it changed since the last call\r\n      if (\r\n        (newTransforms.origin || 'center').toString()\r\n        !== (transforms.origin || 'center').toString()\r\n      ) {\r\n        origin = getOrigin(newTransforms, element)\r\n      }\r\n\r\n      // overwrite the old transformations with the new ones\r\n      transforms = { ...newTransforms, origin }\r\n    }\r\n\r\n    this.queue(setup, run, retarget, true)\r\n    this._isDeclarative && this._rememberMorpher('transform', morpher)\r\n    return this\r\n  },\r\n\r\n  // Animatable x-axis\r\n  x (x, relative) {\r\n    return this._queueNumber('x', x)\r\n  },\r\n\r\n  // Animatable y-axis\r\n  y (y) {\r\n    return this._queueNumber('y', y)\r\n  },\r\n\r\n  dx (x = 0) {\r\n    return this._queueNumberDelta('x', x)\r\n  },\r\n\r\n  dy (y = 0) {\r\n    return this._queueNumberDelta('y', y)\r\n  },\r\n\r\n  dmove (x, y) {\r\n    return this.dx(x).dy(y)\r\n  },\r\n\r\n  _queueNumberDelta (method, to) {\r\n    to = new SVGNumber(to)\r\n\r\n    // Try to change the target if we have this method already registerd\r\n    if (this._tryRetarget(method, to)) return this\r\n\r\n    // Make a morpher and queue the animation\r\n    const morpher = new Morphable(this._stepper).to(to)\r\n    let from = null\r\n    this.queue(function () {\r\n      from = this.element()[method]()\r\n      morpher.from(from)\r\n      morpher.to(from + to)\r\n    }, function (pos) {\r\n      this.element()[method](morpher.at(pos))\r\n      return morpher.done()\r\n    }, function (newTo) {\r\n      morpher.to(from + new SVGNumber(newTo))\r\n    })\r\n\r\n    // Register the morpher so that if it is changed again, we can retarget it\r\n    this._rememberMorpher(method, morpher)\r\n    return this\r\n  },\r\n\r\n  _queueObject (method, to) {\r\n    // Try to change the target if we have this method already registerd\r\n    if (this._tryRetarget(method, to)) return this\r\n\r\n    // Make a morpher and queue the animation\r\n    const morpher = new Morphable(this._stepper).to(to)\r\n    this.queue(function () {\r\n      morpher.from(this.element()[method]())\r\n    }, function (pos) {\r\n      this.element()[method](morpher.at(pos))\r\n      return morpher.done()\r\n    })\r\n\r\n    // Register the morpher so that if it is changed again, we can retarget it\r\n    this._rememberMorpher(method, morpher)\r\n    return this\r\n  },\r\n\r\n  _queueNumber (method, value) {\r\n    return this._queueObject(method, new SVGNumber(value))\r\n  },\r\n\r\n  // Animatable center x-axis\r\n  cx (x) {\r\n    return this._queueNumber('cx', x)\r\n  },\r\n\r\n  // Animatable center y-axis\r\n  cy (y) {\r\n    return this._queueNumber('cy', y)\r\n  },\r\n\r\n  // Add animatable move\r\n  move (x, y) {\r\n    return this.x(x).y(y)\r\n  },\r\n\r\n  // Add animatable center\r\n  center (x, y) {\r\n    return this.cx(x).cy(y)\r\n  },\r\n\r\n  // Add animatable size\r\n  size (width, height) {\r\n    // animate bbox based size for all other elements\r\n    let box\r\n\r\n    if (!width || !height) {\r\n      box = this._element.bbox()\r\n    }\r\n\r\n    if (!width) {\r\n      width = box.width / box.height * height\r\n    }\r\n\r\n    if (!height) {\r\n      height = box.height / box.width * width\r\n    }\r\n\r\n    return this\r\n      .width(width)\r\n      .height(height)\r\n  },\r\n\r\n  // Add animatable width\r\n  width (width) {\r\n    return this._queueNumber('width', width)\r\n  },\r\n\r\n  // Add animatable height\r\n  height (height) {\r\n    return this._queueNumber('height', height)\r\n  },\r\n\r\n  // Add animatable plot\r\n  plot (a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if (arguments.length === 4) {\r\n      return this.plot([ a, b, c, d ])\r\n    }\r\n\r\n    if (this._tryRetarget('plot', a)) return this\r\n\r\n    const morpher = new Morphable(this._stepper)\r\n      .type(this._element.MorphArray).to(a)\r\n\r\n    this.queue(function () {\r\n      morpher.from(this._element.array())\r\n    }, function (pos) {\r\n      this._element.plot(morpher.at(pos))\r\n      return morpher.done()\r\n    })\r\n\r\n    this._rememberMorpher('plot', morpher)\r\n    return this\r\n  },\r\n\r\n  // Add leading method\r\n  leading (value) {\r\n    return this._queueNumber('leading', value)\r\n  },\r\n\r\n  // Add animatable viewbox\r\n  viewbox (x, y, width, height) {\r\n    return this._queueObject('viewbox', new Box(x, y, width, height))\r\n  },\r\n\r\n  update (o) {\r\n    if (typeof o !== 'object') {\r\n      return this.update({\r\n        offset: arguments[0],\r\n        color: arguments[1],\r\n        opacity: arguments[2]\r\n      })\r\n    }\r\n\r\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n    if (o.color != null) this.attr('stop-color', o.color)\r\n    if (o.offset != null) this.attr('offset', o.offset)\r\n\r\n    return this\r\n  }\r\n})\r\n\r\nextend(Runner, { rx, ry, from, to })\r\nregister(Runner, 'Runner')\r\n", "import {\r\n  adopt,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { svg, svgjs, xlink, xmlns } from '../modules/core/namespaces.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport Defs from './Defs.js'\r\nimport { globals } from '../utils/window.js'\r\n\r\nexport default class Svg extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('svg', node), attrs)\r\n    this.namespace()\r\n  }\r\n\r\n  // Creates and returns defs element\r\n  defs () {\r\n    if (!this.isRoot()) return this.root().defs()\r\n\r\n    return adopt(this.node.querySelector('defs'))\r\n      || this.put(new Defs())\r\n  }\r\n\r\n  isRoot () {\r\n    return !this.node.parentNode\r\n      || (!(this.node.parentNode instanceof globals.window.SVGElement) && this.node.parentNode.nodeName !== '#document-fragment')\r\n  }\r\n\r\n  // Add namespaces\r\n  namespace () {\r\n    if (!this.isRoot()) return this.root().namespace()\r\n    return this\r\n      .attr({ xmlns: svg, version: '1.1' })\r\n      .attr('xmlns:xlink', xlink, xmlns)\r\n      .attr('xmlns:svgjs', svgjs, xmlns)\r\n  }\r\n\r\n  removeNamespace () {\r\n    return this.attr({ xmlns: null, version: null })\r\n      .attr('xmlns:xlink', null, xmlns)\r\n      .attr('xmlns:svgjs', null, xmlns)\r\n  }\r\n\r\n  // Check if this is a root svg\r\n  // If not, call root() from this element\r\n  root () {\r\n    if (this.isRoot()) return this\r\n    return super.root()\r\n  }\r\n\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create nested svg document\r\n    nested: wrapWithAttrCheck(function () {\r\n      return this.put(new Svg())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Svg, 'Svg', true)\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Symbol extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('symbol', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    symbol: wrapWithAttrCheck(function () {\r\n      return this.put(new Symbol())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Symbol, 'Symbol')\r\n", "import { globals } from '../../utils/window.js'\r\n\r\n// Create plain text node\r\nexport function plain (text) {\r\n  // clear if build mode is disabled\r\n  if (this._build === false) {\r\n    this.clear()\r\n  }\r\n\r\n  // create text node\r\n  this.node.appendChild(globals.document.createTextNode(text))\r\n\r\n  return this\r\n}\r\n\r\n// Get length of text element\r\nexport function length () {\r\n  return this.node.getComputedTextLength()\r\n}\r\n\r\n// Move over x-axis\r\n// Text is moved by its bounding box\r\n// text-anchor does NOT matter\r\nexport function x (x, box = this.bbox()) {\r\n  if (x == null) {\r\n    return box.x\r\n  }\r\n\r\n  return this.attr('x', this.attr('x') + x - box.x)\r\n}\r\n\r\n// Move over y-axis\r\nexport function y (y, box = this.bbox()) {\r\n  if (y == null) {\r\n    return box.y\r\n  }\r\n\r\n  return this.attr('y', this.attr('y') + y - box.y)\r\n}\r\n\r\nexport function move (x, y, box = this.bbox()) {\r\n  return this.x(x, box).y(y, box)\r\n}\r\n\r\n// Move center over x-axis\r\nexport function cx (x, box = this.bbox()) {\r\n  if (x == null) {\r\n    return box.cx\r\n  }\r\n\r\n  return this.attr('x', this.attr('x') + x - box.cx)\r\n}\r\n\r\n// Move center over y-axis\r\nexport function cy (y, box = this.bbox()) {\r\n  if (y == null) {\r\n    return box.cy\r\n  }\r\n\r\n  return this.attr('y', this.attr('y') + y - box.cy)\r\n}\r\n\r\nexport function center (x, y, box = this.bbox()) {\r\n  return this.cx(x, box).cy(y, box)\r\n}\r\n\r\nexport function ax (x) {\r\n  return this.attr('x', x)\r\n}\r\n\r\nexport function ay (y) {\r\n  return this.attr('y', y)\r\n}\r\n\r\nexport function amove (x, y) {\r\n  return this.ax(x).ay(y)\r\n}\r\n\r\n// Enable / disable build mode\r\nexport function build (build) {\r\n  this._build = !!build\r\n  return this\r\n}\r\n", "import {\r\n  adopt,\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport { globals } from '../utils/window.js'\r\nimport * as textable from '../modules/core/textable.js'\r\n\r\nexport default class Text extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('text', node), attrs)\r\n\r\n    this.dom.leading = new SVGNumber(1.3) // store leading value for rebuilding\r\n    this._rebuild = true // enable automatic updating of dy values\r\n    this._build = false // disable build mode for adding multiple lines\r\n  }\r\n\r\n  // Set / get leading\n  leading (value) {\r\n    // act as getter\r\n    if (value == null) {\r\n      return this.dom.leading\r\n    }\r\n\r\n    // act as setter\r\n    this.dom.leading = new SVGNumber(value)\r\n\r\n    return this.rebuild()\r\n  }\n\n  // Rebuild appearance type\n  rebuild (rebuild) {\r\n    // store new rebuild flag if given\r\n    if (typeof rebuild === 'boolean') {\r\n      this._rebuild = rebuild\r\n    }\r\n\r\n    // define position of all lines\r\n    if (this._rebuild) {\r\n      const self = this\r\n      let blankLineOffset = 0\r\n      const leading = this.dom.leading\r\n\r\n      this.each(function (i) {\r\n        const fontSize = globals.window.getComputedStyle(this.node)\r\n          .getPropertyValue('font-size')\r\n\r\n        const dy = leading * new SVGNumber(fontSize)\r\n\r\n        if (this.dom.newLined) {\r\n          this.attr('x', self.attr('x'))\r\n\r\n          if (this.text() === '\\n') {\r\n            blankLineOffset += dy\r\n          } else {\r\n            this.attr('dy', i ? dy + blankLineOffset : 0)\r\n            blankLineOffset = 0\r\n          }\r\n        }\r\n      })\r\n\r\n      this.fire('rebuild')\r\n    }\r\n\r\n    return this\r\n  }\n\n  // overwrite method from parent to set data properly\n  setData (o) {\r\n    this.dom = o\r\n    this.dom.leading = new SVGNumber(o.leading || 1.3)\r\n    return this\r\n  }\n\n  // Set the text content\r\n  text (text) {\r\n    // act as getter\r\n    if (text === undefined) {\r\n      const children = this.node.childNodes\r\n      let firstLine = 0\r\n      text = ''\r\n\r\n      for (let i = 0, len = children.length; i < len; ++i) {\r\n        // skip textPaths - they are no lines\r\n        if (children[i].nodeName === 'textPath') {\r\n          if (i === 0) firstLine = 1\r\n          continue\r\n        }\r\n\r\n        // add newline if its not the first child and newLined is set to true\r\n        if (i !== firstLine && children[i].nodeType !== 3 && adopt(children[i]).dom.newLined === true) {\r\n          text += '\\n'\r\n        }\r\n\r\n        // add content of this node\r\n        text += children[i].textContent\r\n      }\r\n\r\n      return text\r\n    }\r\n\r\n    // remove existing content\r\n    this.clear().build(true)\r\n\r\n    if (typeof text === 'function') {\r\n      // call block\r\n      text.call(this, this)\r\n    } else {\r\n      // store text and make sure text is not blank\r\n      text = (text + '').split('\\n')\r\n\r\n      // build new lines\r\n      for (let j = 0, jl = text.length; j < jl; j++) {\r\n        this.newLine(text[j])\r\n      }\r\n    }\r\n\r\n    // disable build mode and rebuild lines\r\n    return this.build(false).rebuild()\r\n  }\r\n\r\n}\r\n\r\nextend(Text, textable)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create text element\r\n    text: wrapWithAttrCheck(function (text = '') {\r\n      return this.put(new Text()).text(text)\r\n    }),\r\n\r\n    // Create plain text element\r\n    plain: wrapWithAttrCheck(function (text = '') {\r\n      return this.put(new Text()).plain(text)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Text, 'Text')\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport Text from './Text.js'\r\nimport * as textable from '../modules/core/textable.js'\r\n\r\nexport default class Tspan extends Shape {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('tspan', node), attrs)\r\n    this._build = false // disable build mode for adding multiple lines\r\n  }\r\n\r\n  // Shortcut dx\n  dx (dx) {\r\n    return this.attr('dx', dx)\r\n  }\n\n  // Shortcut dy\n  dy (dy) {\r\n    return this.attr('dy', dy)\r\n  }\n\n  // Create new line\n  newLine () {\r\n    // mark new line\r\n    this.dom.newLined = true\r\n\r\n    // fetch parent\r\n    const text = this.parent()\r\n\r\n    // early return in case we are not in a text element\r\n    if (!(text instanceof Text)) {\r\n      return this\r\n    }\r\n\r\n    const i = text.index(this)\r\n\r\n    const fontSize = globals.window.getComputedStyle(this.node)\r\n      .getPropertyValue('font-size')\r\n    const dy = text.dom.leading * new SVGNumber(fontSize)\r\n\r\n    // apply new position\r\n    return this.dy(i ? dy : 0).attr('x', text.x())\r\n  }\n\n  // Set text content\r\n  text (text) {\r\n    if (text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n    if (typeof text === 'function') {\r\n      this.clear().build(true)\r\n      text.call(this, this)\r\n      this.build(false)\r\n    } else {\r\n      this.plain(text)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n}\r\n\r\nextend(Tspan, textable)\r\n\r\nregisterMethods({\r\n  Tspan: {\r\n    tspan: wrapWithAttrCheck(function (text = '') {\r\n      const tspan = new Tspan()\r\n\r\n      // clear if build mode is disabled\r\n      if (!this._build) {\r\n        this.clear()\r\n      }\r\n\r\n      // add new tspan\r\n      return this.put(tspan).text(text)\r\n    })\r\n  },\r\n  Text: {\r\n    newLine: function (text = '') {\r\n      return this.tspan(text).newLine()\r\n    }\r\n  }\r\n})\r\n\r\nregister(Tspan, 'Tspan')\r\n", "import { cx, cy, height, width, x, y } from '../modules/core/circled.js'\r\nimport {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Circle extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('circle', node), attrs)\r\n  }\r\n\r\n  radius (r) {\r\n    return this.attr('r', r)\r\n  }\r\n\r\n  // Radius x value\r\n  rx (rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n\r\n  // Alias radius x value\r\n  ry (ry) {\r\n    return this.rx(ry)\r\n  }\r\n\r\n  size (size) {\r\n    return this.radius(new SVGNumber(size).divide(2))\r\n  }\r\n}\r\n\r\nextend(Circle, { x, y, cx, cy, width, height })\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create circle element\r\n    circle: wrapWithAttrCheck(function (size = 0) {\r\n      return this.put(new Circle())\r\n        .size(size)\r\n        .move(0, 0)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Circle, 'Circle')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class ClipPath extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('clipPath', node), attrs)\r\n  }\r\n\r\n  // Unclip all clipped elements and remove itself\r\n  remove () {\r\n    // unclip all targets\r\n    this.targets().forEach(function (el) {\r\n      el.unclip()\r\n    })\r\n\r\n    // remove clipPath from parent\r\n    return super.remove()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [clip-path*=\"' + this.id() + '\"]')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create clipping element\r\n    clip: wrapWithAttrCheck(function () {\r\n      return this.defs().put(new ClipPath())\r\n    })\r\n  },\r\n  Element: {\r\n    // Distribute clipPath to svg element\r\n    clipper () {\r\n      return this.reference('clip-path')\r\n    },\r\n\r\n    clipWith (element) {\r\n      // use given clip or create a new one\r\n      const clipper = element instanceof ClipPath\r\n        ? element\r\n        : this.parent().clip().add(element)\r\n\r\n      // apply mask\r\n      return this.attr('clip-path', 'url(\"#' + clipper.id() + '\")')\r\n    },\r\n\r\n    // Unclip element\r\n    unclip () {\r\n      return this.attr('clip-path', null)\r\n    }\r\n  }\r\n})\r\n\r\nregister(ClipPath, 'ClipPath')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class ForeignObject extends Element {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('foreignObject', node), attrs)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    foreignObject: wrapWithAttrCheck(function (width, height) {\r\n      return this.put(new ForeignObject()).size(width, height)\r\n    })\r\n  }\r\n})\r\n\r\nregister(ForeignObject, 'ForeignObject')\r\n", "import Matrix from '../../types/Matrix.js'\nimport Point from '../../types/Point.js'\nimport { proportionalSize } from '../../utils/utils.js'\n\nexport function dmove (dx, dy) {\n  this.children().forEach((child, i) => {\n\n    let bbox\n\n    // We have to wrap this for elements that dont have a bbox\n    // e.g. title and other descriptive elements\n    try {\n      // Get the childs bbox\n      bbox = child.bbox()\n    } catch (e) {\n      return\n    }\n\n    // Get childs matrix\n    const m = new Matrix(child)\n    // Translate childs matrix by amount and\n    // transform it back into parents space\n    const matrix = m.translate(dx, dy).transform(m.inverse())\n    // Calculate new x and y from old box\n    const p = new Point(bbox.x, bbox.y).transform(matrix)\n    // Move element\n    child.move(p.x, p.y)\n  })\n\n  return this\n}\n\nexport function dx (dx) {\n  return this.dmove(dx, 0)\n}\n\nexport function dy (dy) {\n  return this.dmove(0, dy)\n}\n\nexport function height (height, box = this.bbox()) {\n  if (height == null) return box.height\n  return this.size(box.width, height, box)\n}\n\nexport function move (x = 0, y = 0, box = this.bbox()) {\n  const dx = x - box.x\n  const dy = y - box.y\n\n  return this.dmove(dx, dy)\n}\n\nexport function size (width, height, box = this.bbox()) {\n  const p = proportionalSize(this, width, height, box)\n  const scaleX = p.width / box.width\n  const scaleY = p.height / box.height\n\n  this.children().forEach((child, i) => {\n    const o = new Point(box).transform(new Matrix(child).inverse())\n    child.scale(scaleX, scaleY, o.x, o.y)\n  })\n\n  return this\n}\n\nexport function width (width, box = this.bbox()) {\n  if (width == null) return box.width\n  return this.size(width, box.height, box)\n}\n\nexport function x (x, box = this.bbox()) {\n  if (x == null) return box.x\n  return this.move(x, box.y, box)\n}\n\nexport function y (y, box = this.bbox()) {\n  if (y == null) return box.y\n  return this.move(box.x, y, box)\n}\n", "import { nodeOrNew, register, wrapWithAttrCheck, extend } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport * as containerGeometry from '../modules/core/containerGeometry.js'\r\n\r\nexport default class G extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('g', node), attrs)\r\n  }\r\n}\r\n\r\nextend(G, containerGeometry)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a group element\r\n    group: wrapWithAttrCheck(function () {\r\n      return this.put(new G())\r\n    })\r\n  }\r\n})\r\n\r\nregister(G, 'G')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck, extend } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Container from './Container.js'\r\nimport * as containerGeometry from '../modules/core/containerGeometry.js'\r\n\r\nexport default class A extends Container {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('a', node), attrs)\r\n  }\r\n\r\n  // Link target attribute\r\n  target (target) {\r\n    return this.attr('target', target)\r\n  }\r\n\r\n  // Link url\r\n  to (url) {\r\n    return this.attr('href', url, xlink)\r\n  }\r\n\r\n}\r\n\r\nextend(A, containerGeometry)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a hyperlink element\r\n    link: wrapWithAttrCheck(function (url) {\r\n      return this.put(new A()).to(url)\r\n    })\r\n  },\r\n  Element: {\r\n    unlink () {\r\n      const link = this.linker()\r\n\r\n      if (!link) return this\r\n\r\n      const parent = link.parent()\r\n\r\n      if (!parent) {\r\n        return this.remove()\r\n      }\r\n\r\n      const index = parent.index(link)\r\n      parent.add(this, index)\r\n\r\n      link.remove()\r\n      return this\r\n    },\r\n    linkTo (url) {\r\n      // reuse old link if possible\r\n      let link = this.linker()\r\n\r\n      if (!link) {\r\n        link = new A()\r\n        this.wrap(link)\r\n      }\r\n\r\n      if (typeof url === 'function') {\r\n        url.call(link, link)\r\n      } else {\r\n        link.to(url)\r\n      }\r\n\r\n      return this\r\n    },\r\n    linker () {\r\n      const link = this.parent()\r\n      if (link && link.node.nodeName.toLowerCase() === 'a') {\r\n        return link\r\n      }\r\n\r\n      return null\r\n    }\r\n  }\r\n})\r\n\r\nregister(A, 'A')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class Mask extends Container {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('mask', node), attrs)\r\n  }\r\n\r\n  // Unmask all masked elements and remove itself\r\n  remove () {\r\n    // unmask all targets\r\n    this.targets().forEach(function (el) {\r\n      el.unmask()\r\n    })\r\n\r\n    // remove mask from parent\r\n    return super.remove()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [mask*=\"' + this.id() + '\"]')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    mask: wrapWithAttrCheck(function () {\r\n      return this.defs().put(new Mask())\r\n    })\r\n  },\r\n  Element: {\r\n    // Distribute mask to svg element\r\n    masker () {\r\n      return this.reference('mask')\r\n    },\r\n\r\n    maskWith (element) {\r\n      // use given mask or create a new one\r\n      const masker = element instanceof Mask\r\n        ? element\r\n        : this.parent().mask().add(element)\r\n\r\n      // apply mask\r\n      return this.attr('mask', 'url(\"#' + masker.id() + '\")')\r\n    },\r\n\r\n    // Unmask element\r\n    unmask () {\r\n      return this.attr('mask', null)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Mask, 'Mask')\r\n", "import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\n\r\nexport default class Stop extends Element {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('stop', node), attrs)\r\n  }\r\n\r\n  // add color stops\r\n  update (o) {\r\n    if (typeof o === 'number' || o instanceof SVGNumber) {\r\n      o = {\r\n        offset: arguments[0],\r\n        color: arguments[1],\r\n        opacity: arguments[2]\r\n      }\r\n    }\r\n\r\n    // set attributes\r\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n    if (o.color != null) this.attr('stop-color', o.color)\r\n    if (o.offset != null) this.attr('offset', new SVGNumber(o.offset))\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Gradient: {\r\n    // Add a color stop\r\n    stop: function (offset, color, opacity) {\r\n      return this.put(new Stop()).update(offset, color, opacity)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Stop, 'Stop')\r\n", "import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { unCamelCase } from '../utils/utils.js'\r\nimport Element from './Element.js'\r\n\r\nfunction cssRule (selector, rule) {\r\n  if (!selector) return ''\r\n  if (!rule) return selector\r\n\r\n  let ret = selector + '{'\r\n\r\n  for (const i in rule) {\r\n    ret += unCamelCase(i) + ':' + rule[i] + ';'\r\n  }\r\n\r\n  ret += '}'\r\n\r\n  return ret\r\n}\r\n\r\nexport default class Style extends Element {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('style', node), attrs)\r\n  }\r\n\r\n  addText (w = '') {\r\n    this.node.textContent += w\r\n    return this\r\n  }\r\n\r\n  font (name, src, params = {}) {\r\n    return this.rule('@font-face', {\r\n      fontFamily: name,\r\n      src: src,\r\n      ...params\r\n    })\r\n  }\r\n\r\n  rule (selector, obj) {\r\n    return this.addText(cssRule(selector, obj))\r\n  }\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  style (selector, obj) {\r\n    return this.put(new Style()).rule(selector, obj)\r\n  },\r\n  fontface  (name, src, params) {\r\n    return this.put(new Style()).font(name, src, params)\r\n  }\r\n})\r\n\r\nregister(Style, 'Style')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Path from './Path.js'\r\nimport PathArray from '../types/PathArray.js'\r\nimport Text from './Text.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class TextPath extends Text {\r\n  // Initialize node\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('textPath', node), attrs)\r\n  }\r\n\r\n  // return the array of the path track element\r\n  array () {\r\n    const track = this.track()\r\n\r\n    return track ? track.array() : null\r\n  }\r\n\r\n  // Plot path if any\r\n  plot (d) {\r\n    const track = this.track()\r\n    let pathArray = null\r\n\r\n    if (track) {\r\n      pathArray = track.plot(d)\r\n    }\r\n\r\n    return (d == null) ? pathArray : this\r\n  }\r\n\r\n  // Get the path element\r\n  track () {\r\n    return this.reference('href')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    textPath: wrapWithAttrCheck(function (text, path) {\r\n      // Convert text to instance if needed\r\n      if (!(text instanceof Text)) {\r\n        text = this.text(text)\r\n      }\r\n\r\n      return text.path(path)\r\n    })\r\n  },\r\n  Text: {\r\n    // Create path for text to run on\r\n    path: wrapWithAttrCheck(function (track, importNodes = true) {\r\n      const textPath = new TextPath()\r\n\r\n      // if track is a path, reuse it\r\n      if (!(track instanceof Path)) {\r\n        // create path element\r\n        track = this.defs().path(track)\r\n      }\r\n\r\n      // link textPath to path and add content\r\n      textPath.attr('href', '#' + track, xlink)\r\n\r\n      // Transplant all nodes from text to textPath\r\n      let node\r\n      if (importNodes) {\r\n        while ((node = this.node.firstChild)) {\r\n          textPath.node.appendChild(node)\r\n        }\r\n      }\r\n\r\n      // add textPath element as child node and return textPath\r\n      return this.put(textPath)\r\n    }),\r\n\r\n    // Get the textPath children\r\n    textPath () {\r\n      return this.findOne('textPath')\r\n    }\r\n  },\r\n  Path: {\r\n    // creates a textPath from this path\r\n    text: wrapWithAttrCheck(function (text) {\r\n      // Convert text to instance if needed\r\n      if (!(text instanceof Text)) {\r\n        text = new Text().addTo(this.parent()).text(text)\r\n      }\r\n\r\n      // Create textPath from text and path and return\r\n      return text.path(this)\r\n    }),\r\n\r\n    targets () {\r\n      return baseFind('svg textPath').filter((node) => {\r\n        return (node.attr('href') || '').includes(this.id())\r\n      })\r\n\r\n      // Does not work in IE11. Use when IE support is dropped\r\n      // return baseFind('svg textPath[*|href*=\"' + this.id() + '\"]')\r\n    }\r\n  }\r\n})\r\n\r\nTextPath.prototype.MorphArray = PathArray\r\nregister(TextPath, 'TextPath')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Use extends Shape {\r\n  constructor (node, attrs = node) {\r\n    super(nodeOrNew('use', node), attrs)\r\n  }\r\n\r\n  // Use element as a reference\r\n  use (element, file) {\r\n    // Set lined element\r\n    return this.attr('href', (file || '') + '#' + element, xlink)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a use element\r\n    use: wrapWithAttrCheck(function (element, file) {\r\n      return this.put(new Use()).use(element, file)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Use, 'Use')\r\n", "/* Optional Modules */\r\nimport './modules/optional/arrange.js'\r\nimport './modules/optional/class.js'\r\nimport './modules/optional/css.js'\r\nimport './modules/optional/data.js'\r\nimport './modules/optional/memory.js'\r\nimport './modules/optional/sugar.js'\r\nimport './modules/optional/transform.js'\r\n\r\nimport { extend, makeInstance } from './utils/adopter.js'\r\nimport { getMethodNames, getMethodsFor } from './utils/methods.js'\r\nimport Box from './types/Box.js'\r\nimport Color from './types/Color.js'\r\nimport Container from './elements/Container.js'\r\nimport Defs from './elements/Defs.js'\r\nimport Dom from './elements/Dom.js'\r\nimport Element from './elements/Element.js'\r\nimport Ellipse from './elements/Ellipse.js'\r\nimport EventTarget from './types/EventTarget.js'\r\nimport Fragment from './elements/Fragment.js'\r\nimport Gradient from './elements/Gradient.js'\r\nimport Image from './elements/Image.js'\r\nimport Line from './elements/Line.js'\r\nimport List from './types/List.js'\r\nimport Marker from './elements/Marker.js'\r\nimport Matrix from './types/Matrix.js'\r\nimport Morphable, {\r\n  NonMorphable,\r\n  ObjectBag,\r\n  TransformBag,\r\n  makeMorphable,\r\n  registerMorphableType\r\n} from './animation/Morphable.js'\r\nimport Path from './elements/Path.js'\r\nimport PathArray from './types/PathArray.js'\r\nimport Pattern from './elements/Pattern.js'\r\nimport PointArray from './types/PointArray.js'\r\nimport Point from './types/Point.js'\r\nimport Polygon from './elements/Polygon.js'\r\nimport Polyline from './elements/Polyline.js'\r\nimport Rect from './elements/Rect.js'\r\nimport Runner from './animation/Runner.js'\r\nimport SVGArray from './types/SVGArray.js'\r\nimport SVGNumber from './types/SVGNumber.js'\r\nimport Shape from './elements/Shape.js'\r\nimport Svg from './elements/Svg.js'\r\nimport Symbol from './elements/Symbol.js'\r\nimport Text from './elements/Text.js'\r\nimport Tspan from './elements/Tspan.js'\r\nimport * as defaults from './modules/core/defaults.js'\r\nimport * as utils from './utils/utils.js'\r\nimport * as namespaces from './modules/core/namespaces.js'\r\nimport * as regex from './modules/core/regex.js'\r\n\r\nexport {\r\n  Morphable,\r\n  registerMorphableType,\r\n  makeMorphable,\r\n  TransformBag,\r\n  ObjectBag,\r\n  NonMorphable\r\n}\r\n\r\nexport { defaults, utils, namespaces, regex }\r\nexport const SVG = makeInstance\r\nexport { default as parser } from './modules/core/parser.js'\r\nexport { default as find } from './modules/core/selector.js'\r\nexport * from './modules/core/event.js'\r\nexport * from './utils/adopter.js'\r\nexport {\r\n  getWindow,\r\n  registerWindow,\r\n  restoreWindow,\r\n  saveWindow,\r\n  withWindow\r\n} from './utils/window.js'\r\n\r\n/* Animation Modules */\r\nexport { default as Animator } from './animation/Animator.js'\r\nexport { Controller, Ease, PID, Spring, easing } from './animation/Controller.js'\r\nexport { default as Queue } from './animation/Queue.js'\r\nexport { default as Runner } from './animation/Runner.js'\r\nexport { default as Timeline } from './animation/Timeline.js'\r\n\r\n/* Types */\r\nexport { default as Array } from './types/SVGArray.js'\r\nexport { default as Box } from './types/Box.js'\r\nexport { default as Color } from './types/Color.js'\r\nexport { default as EventTarget } from './types/EventTarget.js'\r\nexport { default as Matrix } from './types/Matrix.js'\r\nexport { default as Number } from './types/SVGNumber.js'\r\nexport { default as PathArray } from './types/PathArray.js'\r\nexport { default as Point } from './types/Point.js'\r\nexport { default as PointArray } from './types/PointArray.js'\r\nexport { default as List } from './types/List.js'\r\n\r\n/* Elements */\r\nexport { default as Circle } from './elements/Circle.js'\r\nexport { default as ClipPath } from './elements/ClipPath.js'\r\nexport { default as Container } from './elements/Container.js'\r\nexport { default as Defs } from './elements/Defs.js'\r\nexport { default as Dom } from './elements/Dom.js'\r\nexport { default as Element } from './elements/Element.js'\r\nexport { default as Ellipse } from './elements/Ellipse.js'\r\nexport { default as ForeignObject } from './elements/ForeignObject.js'\r\nexport { default as Fragment } from './elements/Fragment.js'\r\nexport { default as Gradient } from './elements/Gradient.js'\r\nexport { default as G } from './elements/G.js'\r\nexport { default as A } from './elements/A.js'\r\nexport { default as Image } from './elements/Image.js'\r\nexport { default as Line } from './elements/Line.js'\r\nexport { default as Marker } from './elements/Marker.js'\r\nexport { default as Mask } from './elements/Mask.js'\r\nexport { default as Path } from './elements/Path.js'\r\nexport { default as Pattern } from './elements/Pattern.js'\r\nexport { default as Polygon } from './elements/Polygon.js'\r\nexport { default as Polyline } from './elements/Polyline.js'\r\nexport { default as Rect } from './elements/Rect.js'\r\nexport { default as Shape } from './elements/Shape.js'\r\nexport { default as Stop } from './elements/Stop.js'\r\nexport { default as Style } from './elements/Style.js'\r\nexport { default as Svg } from './elements/Svg.js'\r\nexport { default as Symbol } from './elements/Symbol.js'\r\nexport { default as Text } from './elements/Text.js'\r\nexport { default as TextPath } from './elements/TextPath.js'\r\nexport { default as Tspan } from './elements/Tspan.js'\r\nexport { default as Use } from './elements/Use.js'\r\n\r\nextend([\r\n  Svg,\r\n  Symbol,\r\n  Image,\r\n  Pattern,\r\n  Marker\r\n], getMethodsFor('viewbox'))\r\n\r\nextend([\r\n  Line,\r\n  Polyline,\r\n  Polygon,\r\n  Path\r\n], getMethodsFor('marker'))\r\n\r\nextend(Text, getMethodsFor('Text'))\r\nextend(Path, getMethodsFor('Path'))\r\n\r\nextend(Defs, getMethodsFor('Defs'))\r\n\r\nextend([\r\n  Text,\r\n  Tspan\r\n], getMethodsFor('Tspan'))\r\n\r\nextend([\r\n  Rect,\r\n  Ellipse,\r\n  Gradient,\r\n  Runner\r\n], getMethodsFor('radius'))\r\n\r\nextend(EventTarget, getMethodsFor('EventTarget'))\r\nextend(Dom, getMethodsFor('Dom'))\r\nextend(Element, getMethodsFor('Element'))\r\nextend(Shape, getMethodsFor('Shape'))\r\nextend([ Container, Fragment ], getMethodsFor('Container'))\r\nextend(Gradient, getMethodsFor('Gradient'))\r\n\r\nextend(Runner, getMethodsFor('Runner'))\r\n\r\nList.extend(getMethodNames())\r\n\r\nregisterMorphableType([\r\n  SVGNumber,\r\n  Color,\r\n  Box,\r\n  Matrix,\r\n  SVGArray,\r\n  PointArray,\r\n  PathArray,\r\n  Point\r\n])\r\n\r\nmakeMorphable()\r\n"],
  "mappings": "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",
  "names": ["methods", "names", "registerMethods", "name", "m", "Array", "isArray", "_name", "addMethodNames", "Object", "getOwnPropertyNames", "assign", "getMethodsFor", "getMethodNames", "Set", "_names", "push", "map", "array", "block", "i", "il", "length", "result", "filter", "radians", "d", "Math", "PI", "degrees", "r", "camelCase", "s", "toLowerCase", "replace", "g", "toUpperCase", "unCamelCase", "capitalize", "charAt", "slice", "proportionalSize", "element", "width", "height", "box", "bbox", "getOrigin", "o", "origin", "ox", "originX", "oy", "originY", "x", "y", "condX", "condY", "includes", "svg", "html", "xmlns", "xlink", "svgjs", "globals", "window", "document", "registerWindow", "win", "doc", "save", "saveWindow", "restoreWindow", "withWindow", "fn", "getWindow", "Base", "elements", "root", "create", "ns", "createElementNS", "makeInstance", "isHTML", "adopter", "querySelector", "wrapper", "createElement", "innerHTML", "firstChild", "removeChild", "nodeOrNew", "node", "ownerDocument", "defaultView", "Node", "adopt", "instance", "nodeName", "Fragment", "className", "mockAdopt", "mock", "register", "asRoot", "prototype", "getClass", "did", "eid", "assignNewId", "children", "id", "extend", "modules", "key", "wrapWithAttrCheck", "args", "constructor", "apply", "attr", "siblings", "parent", "position", "index", "next", "prev", "forward", "p", "add", "remove", "backward", "front", "back", "before", "after", "insertBefore", "insertAfter", "numberAndUnit", "hex", "rgb", "reference", "transforms", "whitespace", "isHex", "isRgb", "isBlank", "isNumber", "isImage", "delimiter", "isPathLetter", "classes", "trim", "split", "hasClass", "indexOf", "addClass", "join", "removeClass", "c", "toggleClass", "css", "style", "val", "ret", "arguments", "cssText", "el", "forEach", "t", "cased", "test", "show", "hide", "visible", "data", "a", "v", "attributes", "JSON", "parse", "e", "stringify", "remember", "k", "memory", "forget", "_memory", "sixDigitHex", "substring", "componentHex", "component", "integer", "round", "bounded", "max", "min", "toString", "is", "object", "space", "getParameters", "b", "params", "_a", "_b", "_c", "_d", "z", "h", "l", "cieSpace", "hueToRgb", "q", "Color", "inputs", "init", "isColor", "color", "random", "mode", "u", "sin", "pi", "grey", "Error", "cmyk", "hsl", "isGrey", "delta", "values", "noWhitespace", "exec", "parseInt", "hexParse", "components", "lab", "xyz", "lch", "sqrt", "atan2", "dToR", "cos", "yL", "xL", "zL", "ct", "mx", "nm", "rU", "gU", "bU", "pow", "bd", "toArray", "toHex", "_clamped", "toRgb", "rV", "gV", "bV", "string", "r255", "g255", "b255", "rL", "gL", "bL", "xU", "yU", "zU", "format", "Point", "clone", "base", "source", "transform", "transformO", "Matrix", "isMatrixLike", "f", "point", "screenCTM", "inverse", "closeEnough", "threshold", "abs", "formatTransforms", "flipBoth", "flip", "flipX", "flipY", "skewX", "skew", "isFinite", "skewY", "scaleX", "scale", "scaleY", "shear", "theta", "rotate", "around", "px", "positionX", "NaN", "py", "positionY", "translate", "tx", "translateX", "ty", "translateY", "relative", "rx", "relativeX", "ry", "relativeY", "fromArray", "matrixMultiply", "cx", "cy", "matrix", "aroundO", "dx", "dy", "translateO", "lmultiplyO", "decompose", "determinant", "ccw", "sx", "thetaRad", "st", "lam", "sy", "equals", "other", "comp", "axis", "flipO", "scaleO", "Element", "matrixify", "parseFloat", "call", "inverseO", "det", "na", "nb", "nc", "nd", "ne", "nf", "lmultiply", "multiply", "multiplyO", "rotateO", "shearO", "lx", "skewO", "tan", "ly", "current", "transformer", "valueOf", "ctm", "getCTM", "isRoot", "rect", "getScreenCTM", "parser", "nodes", "size", "path", "parentNode", "body", "documentElement", "addTo", "isNulledBox", "domContains", "contains", "Box", "addOffset", "pageXOffset", "pageYOffset", "left", "top", "w", "x2", "y2", "isNulled", "merge", "xMin", "Infinity", "xMax", "yMin", "yMax", "pts", "getBox", "getBBoxFn", "retry", "getBBox", "rbox", "getRBox", "getBoundingClientRect", "inside", "viewbox", "zoom", "level", "clientWidth", "clientHeight", "zoomX", "zoomY", "zoomAmount", "Number", "MAX_SAFE_INTEGER", "List", "arr", "each", "fnOrMethodName", "concat", "reserved", "reduce", "obj", "attrs", "baseFind", "query", "querySelectorAll", "find", "findOne", "listenerId", "windowEvents", "getEvents", "n", "getEventHolder", "events", "getEventTarget", "clearEvents", "on", "listener", "binding", "options", "bind", "bag", "_svgjsListenerId", "event", "ev", "addEventListener", "off", "namespace", "removeEventListener", "dispatch", "Event", "dispatchEvent", "CustomEvent", "detail", "cancelable", "EventTarget", "type", "j", "defaultPrevented", "fire", "noop", "timeline", "duration", "ease", "delay", "fill", "stroke", "opacity", "offset", "SVGArray", "toSet", "SVGNumber", "convert", "unit", "value", "divide", "number", "isNaN", "match", "minus", "plus", "times", "toJSON", "hooks", "registerAttrHook", "nodeValue", "last", "curr", "removeAttribute", "getAttribute", "defaults", "_val", "hook", "leading", "setAttributeNS", "setAttribute", "rebuild", "Dom", "removeNamespace", "SVGElement", "appendChild", "childNodes", "put", "clear", "hasChildNodes", "lastChild", "deep", "writeDataToDom", "cloneNode", "first", "get", "has", "htmlOrFn", "outerHTML", "xml", "matches", "selector", "matcher", "matchesSelector", "msMatchesSelector", "mozMatchesSelector", "webkitMatchesSelector", "oMatchesSelector", "putIn", "removeElement", "replaceChild", "precision", "factor", "svgOrFn", "outerSVG", "words", "text", "textContent", "wrap", "xmlOrFn", "outerXML", "_this", "well", "fragment", "createDocumentFragment", "len", "firstElementChild", "dom", "hasAttribute", "setData", "center", "defs", "dmove", "move", "parents", "until", "isSelector", "keys", "sugar", "prefix", "extension", "mat", "angle", "direction", "radius", "_element", "getTotalLength", "pointAt", "getPointAtLength", "font", "untransform", "str", "kv", "reverse", "toParent", "pCtm", "toRoot", "decomposed", "cleanRelative", "Container", "flatten", "ungroup", "Defs", "Shape", "Ellipse", "circled", "ellipse", "from", "fx", "fy", "x1", "y1", "to", "Gradient", "targets", "url", "update", "gradiented", "gradient", "Pattern", "pattern", "patternUnits", "Image", "load", "callback", "img", "src", "image", "PointArray", "maxX", "maxY", "minX", "minY", "points", "pop", "toLine", "MorphArray", "Line", "plot", "pointed", "line", "Marker", "orient", "ref", "marker", "makeSetterGetter", "easing", "pos", "bezier", "steps", "stepPosition", "jumps", "beforeFlag", "step", "floor", "jumping", "Stepper", "done", "Ease", "Controller", "stepper", "target", "dt", "recalculate", "_duration", "overshoot", "_overshoot", "eps", "os", "log", "zeta", "wn", "Spring", "velocity", "acceleration", "newPosition", "PID", "windup", "integral", "error", "_windup", "P", "I", "D", "segmentParameters", "M", "L", "H", "V", "C", "S", "Q", "T", "A", "Z", "pathHandlers", "p0", "mlhvqtcsaz", "jl", "makeAbsolut", "command", "segment", "segmentComplete", "startNewSegment", "token", "inNumber", "finalizeNumber", "pathLetter", "lastCommand", "small", "isSmall", "inSegment", "pointSeen", "hasExponent", "finalizeSegment", "absolute", "segments", "isArcFlag", "isArc", "isExponential", "lastToken", "pathParser", "toAbsolute", "arrayToString", "PathArray", "getClassForType", "NonMorphable", "morphableTypes", "ObjectBag", "Morphable", "_stepper", "_from", "_to", "_type", "_context", "_morphObj", "at", "morph", "complete", "_set", "align", "toConsumable", "TransformBag", "sortByKey", "splice", "defaultObject", "toDelete", "objOrArr", "entries", "Type", "sort", "shift", "num", "registerMorphableType", "makeMorphable", "context", "mapper", "Path", "_array", "Polygon", "polygon", "poly", "Polyline", "polyline", "Rect", "Queue", "_first", "_last", "item", "Animator", "nextDraw", "frames", "timeouts", "immediates", "timer", "performance", "Date", "frame", "run", "requestAnimationFrame", "_draw", "timeout", "time", "now", "immediate", "cancelFrame", "clearTimeout", "cancelImmediate", "nextTimeout", "lastTimeout", "nextFrame", "lastFrame", "nextImmediate", "makeSchedule", "runnerInfo", "start", "runner", "end", "defaultSource", "Timeline", "timeSource", "_timeSource", "_startTime", "_speed", "_persist", "_nextFrame", "_paused", "_runners", "_runnerIds", "_lastRunnerId", "_time", "_lastSourceTime", "_lastStepTime", "_step", "_stepFn", "_stepImmediate", "active", "finish", "getEndTimeOfTimeline", "pause", "getEndTime", "lastRunnerInfo", "getLastRunnerInfo", "lastDuration", "lastStartTime", "endTimes", "getRunnerInfoById", "_continue", "persist", "dtOrForever", "play", "updateTime", "yes", "currentSpeed", "speed", "positive", "schedule", "when", "absoluteStartTime", "endTime", "unschedule", "info", "seek", "stop", "immediateStep", "dtSource", "dtTime", "dtToStart", "reset", "runnersLeft", "finished", "_timeline", "Runner", "_queue", "_isDeclarative", "_history", "enabled", "_lastTime", "_reseted", "transformId", "_haveReversed", "_reverse", "_loopsDone", "_swing", "_wait", "_times", "_frameId", "sanitise", "swing", "wait", "addTransform", "animate", "loop", "clearTransform", "clearTransformsFromQueue", "isTransform", "during", "queue", "_prepareRunner", "loops", "loopDuration", "loopsDone", "relativeTime", "whole", "partial", "swinging", "backwards", "uncliped", "clipped", "swingForward", "forwards", "progress", "initFn", "runFn", "retargetFn", "initialiser", "retarget", "initialised", "running", "_lastPosition", "justStarted", "justFinished", "declarative", "converged", "_initialise", "_run", "needsIt", "_rememberMorpher", "method", "morpher", "caller", "positionOrDt", "allfinished", "_tryRetarget", "extra", "FakeRunner", "mergeWith", "getRunnerTransform", "mergeTransforms", "runners", "_transformationRunners", "netTransform", "RunnerArray", "ids", "clearBefore", "deleteCnt", "edit", "newRunner", "getByID", "lastRunner", "condition", "by", "_clearTransformRunnersBefore", "currentRunner", "_currentTransform", "_addRunner", "difference", "styleAttr", "nameOrAttrs", "newToAttrs", "newKeys", "differences", "addedFromAttrs", "oldFromAttrs", "oldToAttrs", "newLevel", "newPoint", "affine", "isMatrix", "currentAngle", "startTransform", "setup", "undefined", "rTarget", "rCurrent", "possibilities", "distances", "shortest", "affineParameters", "newTransforms", "_queueNumber", "_queueNumberDelta", "newTo", "_queueObject", "Svg", "version", "nested", "Symbol", "symbol", "plain", "_build", "createTextNode", "getComputedTextLength", "ax", "ay", "amove", "build", "Text", "_rebuild", "self", "blankLineOffset", "fontSize", "getComputedStyle", "getPropertyValue", "newLined", "firstLine", "nodeType", "newLine", "textable", "Tspan", "tspan", "Circle", "circle", "ClipPath", "unclip", "clip", "clipper", "clipWith", "ForeignObject", "foreignObject", "child", "G", "containerGeometry", "group", "link", "unlink", "linker", "linkTo", "Mask", "unmask", "mask", "masker", "maskWith", "Stop", "cssRule", "rule", "Style", "addText", "fontFamily", "fontface", "TextPath", "track", "pathArray", "textPath", "importNodes", "Use", "use", "file", "SVG"]
}
